{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\dashboard\\DashboardIndex.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\dashboard\\DashboardIndex.vue","mtime":1638862950808},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _defineProperty from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _nav from '@/_nav';\nimport * as TYPE from '@/actionTypes.js';\nimport _ from 'lodash';\nimport { mapActions, mapGetters } from 'vuex';\nimport { allSellers, sellersTypeFields } from \"./configOptions\";\nimport HeaderComponent from \"./Header\";\nimport { ReportMarketplaces, MarketPlacesResult, AllSellerMode, DashboardFilterSourceType } from '@/constants/Report';\nimport { getMarketplaceLabelByType } from '@/shared/utils';\nimport vToasted from '@/shared/notification';\nexport default {\n  name: 'MWDashboardIndex',\n  components: {\n    HeaderComponent: HeaderComponent\n  },\n  mixins: [vToasted],\n  data: function data() {\n    return {\n      MarketPlacesResult: MarketPlacesResult,\n      ReportMarketplaces: ReportMarketplaces,\n      AllSellerMode: AllSellerMode,\n      DashboardFilterSourceType: DashboardFilterSourceType,\n      sourceAllSellerOptions: [{\n        value: DashboardFilterSourceType.VIOLATIONS,\n        text: 'Violations'\n      }, {\n        value: DashboardFilterSourceType.ALL_SELLERS,\n        text: 'All Items'\n      }],\n      sourceAuthorizedOnlyOptions: [{\n        value: DashboardFilterSourceType.VIOLATIONS,\n        text: 'Violations'\n      }, {\n        value: DashboardFilterSourceType.ALL_SELLERS,\n        text: 'All Authorized Items'\n      }],\n      sourceRogueOnlyOptions: [{\n        value: DashboardFilterSourceType.VIOLATIONS,\n        text: 'Violations'\n      }, {\n        value: DashboardFilterSourceType.ALL_SELLERS,\n        text: 'All Rogue Items'\n      }],\n      queryOptions: {\n        active: true\n      },\n      settings: {\n        show_dashboard: true\n      },\n      routeDashboardMain: 'MWDashboardMain',\n      routeDashboardHistorical: 'MWDashboardHistorical',\n      selected: {\n        report: null,\n        marketplace: null,\n        marketplace_string_prefix: 'marketplace_',\n        seller_type: null,\n        fulfillment: '',\n        share_token: null,\n        source: DashboardFilterSourceType.VIOLATIONS,\n        options: {\n          marketplaces: [],\n          seller_type: [],\n          fulfillment: [{\n            label: 'All',\n            value: ''\n          }, {\n            label: 'FBA',\n            value: 'FBA'\n          }, {\n            label: 'MFN',\n            value: 'MFN'\n          }]\n        }\n      },\n      nav: _nav,\n      isLoading: true\n    };\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    fetchReports: \"mw/dashboard/\".concat(TYPE.FETCH_LIST_REPORTS),\n    mainConfig: \"mw/dashboard/\".concat(TYPE.GET_DATA_CONFIG_VIOLATOR),\n    remoteFetchSetting: \"mw/settings/\".concat(TYPE.FETCH_SETTING)\n  })), {}, {\n    keepShareTokenForQuery: function keepShareTokenForQuery() {\n      var query = {\n        report: this.selected.report.name_in_dashboard,\n        marketplace: this.selected.marketplace,\n        seller_type: this.selected.seller_type,\n        fulfillment: this.selected.fulfillment,\n        source: this.selected.source\n      };\n\n      if (this.selected.share_token) {\n        _.assign(query, {\n          share_token: this.selected.share_token\n        });\n      }\n\n      return query;\n    },\n    hanldeChangeReportName: function hanldeChangeReportName() {\n      var val = this.selected.marketplace;\n      this.selected.options.seller_type = [];\n\n      if (val === ReportMarketplaces.google_shopping) {\n        this.selected.seller_type = allSellers.value;\n        this.selected.options.seller_type.push(allSellers);\n      } else if (_.includes(_.values(MarketPlacesResult), val.replace(/[_]/g, '.'))) {\n        if (!this.selected.report.separate_mfn_fba_authorized_seller && this.selected.report.list_authorized_seller_names.length === 0 || this.selected.report.separate_mfn_fba_authorized_seller && this.selected.report.mfn_authorized_seller_names.length === 0 && this.selected.report.fba_authorized_seller_names.length === 0) {\n          this.selected.seller_type = allSellers.value;\n          this.selected.options.seller_type.push(allSellers);\n        } else {\n          this.selected.options.seller_type = _.cloneDeep(sellersTypeFields);\n\n          if (this.selected.options.seller_type.length) {\n            this.selected.seller_type = this.selected.options.seller_type[0].value;\n          }\n        }\n      }\n\n      var query = this.keepShareTokenForQuery();\n      this.$router.push({\n        params: {\n          client_id: this.nav.clientId\n        },\n        query: query\n      });\n    },\n    handleChangeSource: function handleChangeSource() {\n      var query = this.keepShareTokenForQuery();\n      this.$router.push({\n        params: {\n          client_id: this.nav.clientId\n        },\n        query: query\n      });\n    },\n    handleChangeSellerType: function handleChangeSellerType() {\n      var query = this.keepShareTokenForQuery();\n      this.$router.push({\n        params: {\n          client_id: this.nav.clientId\n        },\n        query: query\n      });\n    },\n    needToHideSourceTypeFilter: function needToHideSourceTypeFilter() {\n      var allSellerMode = this.getMarketplaceInfoDoc(this.selected.report, this.selected.marketplace).all_seller_mode || AllSellerMode.NONE;\n\n      if (allSellerMode === AllSellerMode.NONE) {\n        this.selected.source = DashboardFilterSourceType.VIOLATIONS;\n        return true;\n      }\n\n      return false;\n    },\n    getMarketplaceInfoDoc: function getMarketplaceInfoDoc(report, marketplace) {\n      return report[\"\".concat(this.getMarketplaceInfoKey(marketplace))];\n    },\n    getMarketplaceInfoKey: function getMarketplaceInfoKey(marketplace) {\n      marketplace = this.convertMarketplaceEnumToMarketplaceStringInfo(marketplace);\n      return \"\".concat(this.selected.marketplace_string_prefix).concat(marketplace);\n    },\n    convertMarketplaceEnumToMarketplaceStringInfo: function convertMarketplaceEnumToMarketplaceStringInfo(marketplace) {\n      if (_.includes(marketplace, 'amazon')) {\n        return marketplace.replace(/[.]/g, '_');\n      }\n\n      return marketplace;\n    },\n    getCurrentSourceOption: function getCurrentSourceOption() {\n      var allSellerMode = this.getMarketplaceInfoDoc(this.selected.report, this.selected.marketplace).all_seller_mode || AllSellerMode.NONE;\n\n      switch (allSellerMode) {\n        case AllSellerMode.AUTHORIZED_ONLY:\n          return this.sourceAuthorizedOnlyOptions;\n\n        case AllSellerMode.ROGUE_ONLY:\n          return this.sourceRogueOnlyOptions;\n\n        case AllSellerMode.NONE:\n        case AllSellerMode.BOTH:\n          return this.sourceAllSellerOptions;\n      }\n    },\n    fetchSettings: function () {\n      var _fetchSettings = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var existShareToken, id, result, message;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                existShareToken = _.has(this.$route.query, 'token');\n\n                if (existShareToken) {\n                  _context.next = 14;\n                  break;\n                }\n\n                id = this.$route.params.id;\n                _context.prev = 3;\n                _context.next = 6;\n                return this.remoteFetchSetting({\n                  id: id\n                });\n\n              case 6:\n                result = _context.sent;\n                return _context.abrupt(\"return\", result.show_dashboard);\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](3);\n                message = _.get(_context.t0, 'response.data.message', null);\n\n                if (message) {\n                  this.vToasted('error', message);\n                } else {\n                  console.log(_context.t0);\n                }\n\n              case 14:\n                return _context.abrupt(\"return\", true);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 10]]);\n      }));\n\n      function fetchSettings() {\n        return _fetchSettings.apply(this, arguments);\n      }\n\n      return fetchSettings;\n    }()\n  }),\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    reports: \"mw/dashboard/\".concat(TYPE.GET_LIST_REPORTS)\n  })), {}, {\n    filterReports: function filterReports() {\n      return this.reports;\n    },\n    queryParams: function queryParams() {\n      return this.$route.query || {};\n    },\n    sharableRoute: function sharableRoute() {\n      var routeRegrex = /\\/share\\//;\n      return routeRegrex.test(this.$route.path) ? 'Share' : '';\n    }\n  }),\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var _this = this;\n\n      var existShareToken, params, shareToken;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              existShareToken = _.has(this.$route.query, 'share_token');\n              params = {\n                active_only: this.queryOptions.active,\n                limit: 99,\n                // must keep this order\n                sort_by: 'order',\n                sort_dir: 'asc'\n              };\n              this.selected.source = DashboardFilterSourceType.VIOLATIONS;\n              this.settings.show_dashboard = true;\n\n              if (!existShareToken) {\n                _context2.next = 12;\n                break;\n              }\n\n              this.routeDashboardHistorical = 'MWShareDashboardHistorical';\n              this.routeDashboardMain = 'MWShareDashboardMain';\n              shareToken = this.$route.query.share_token;\n\n              _.assign(params, {\n                share_token: shareToken\n              });\n\n              this.selected.share_token = shareToken;\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.next = 14;\n              return this.fetchSettings();\n\n            case 14:\n              this.settings.show_dashboard = _context2.sent;\n\n            case 15:\n              if (this.settings.show_dashboard) {\n                this.fetchReports(params).then(function (res) {\n                  _this.isLoading = false;\n                }).catch(function (res) {\n                  _this.isLoading = false;\n                });\n              }\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  syncedReportName: function () {\n    var _syncedReportName = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              this.hanldeChangeReportName();\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function syncedReportName() {\n      return _syncedReportName.apply(this, arguments);\n    }\n\n    return syncedReportName;\n  }(),\n  watch: {\n    filterReports: function filterReports(val) {\n      if (val.items.length) {\n        this.selected.report = val.items[0];\n\n        var existReportName = _.has(this.$route.query, 'report');\n\n        if (existReportName) {\n          var reportName = this.$route.query.report;\n\n          var index = _.findIndex(val.items, function (value) {\n            return reportName.toLowerCase() === value.name_in_dashboard.toLowerCase();\n          });\n\n          if (index > 0) {\n            this.selected.report = val.items[index];\n          }\n        }\n      }\n    },\n    'selected.report': function selectedReport(val) {\n      var _this2 = this;\n\n      this.selected.marketplace = null;\n      this.selected.options.marketplace = [];\n      this.selected.seller_type = null;\n      this.selected.options.seller_type = [];\n\n      _.forEach(val.marketplaces, function (v, k) {\n        if (v) {\n          _this2.selected.options.marketplace.push({\n            label: getMarketplaceLabelByType(k),\n            value: k\n          });\n        }\n      });\n\n      if (!_.isEmpty(this.selected.options.marketplace)) {\n        var existMarketplace = _.has(this.$route.query, 'marketplace');\n\n        if (existMarketplace && _.find(this.selected.options.marketplace, {\n          value: this.$route.query.marketplace\n        })) {\n          this.selected.marketplace = this.$route.query.marketplace;\n        } else {\n          this.selected.marketplace = this.selected.options.marketplace[0].value;\n        }\n\n        this.hanldeChangeReportName();\n      }\n\n      var query = this.keepShareTokenForQuery();\n      this.$router.push({\n        params: {\n          client_id: this.nav.clientId\n        },\n        query: query\n      });\n    },\n    'selected.marketplace': function selectedMarketplace(val) {\n      this.hanldeChangeReportName();\n    },\n    'selected.seller_type': function selectedSeller_type(val) {\n      this.handleChangeSellerType();\n    },\n    'selected.fulfillment': function selectedFulfillment(val) {\n      this.handleChangeSellerType();\n    },\n    'selected.source': function selectedSource(val) {\n      this.handleChangeSource();\n    }\n  }\n};",{"version":3,"sources":["DashboardIndex.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div v-if=\"filterReports.items.length > 0 && settings.show_dashboard && !isLoading\">\r\n      <div class=\"card mw-header__bg\">\r\n        <header-component :needToHideSourceTypeFilter=\"needToHideSourceTypeFilter\" :getCurrentSourceOption=\"getCurrentSourceOption\" v-model=\"selected\" :reports=\"filterReports\"></header-component>\r\n      </div>\r\n      <div class=\"mw-main card\">\r\n        <div class=\"animated fadeIn\">\r\n          <div class=\"main-board pb-0\">\r\n            <ul class=\"widgets-nav nav nav-tabs\">\r\n              <li class=\"nav-item\">\r\n                <router-link\r\n                  class=\"nav-link\"\r\n                  active-class=\"active\"\r\n                  :to=\"{name: `MW${sharableRoute}DashboardMain`, params: {client_id: nav.clientId}, query: queryParams}\"\r\n                >Dashboard</router-link>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <router-link\r\n                  class=\"nav-link\"\r\n                  active-class=\"active\"\r\n                  :to=\"{name: `MW${sharableRoute}DashboardHistorical`, params: {client_id: nav.clientId}, query: queryParams}\"\r\n                >Historical</router-link>\r\n              </li>\r\n            </ul>\r\n            <router-view :selected=\"selected\" v-if=\"selected.report\"></router-view>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-else-if=\"!settings.show_dashboard\">\r\n      <div class=\"card bg-secondary\">\r\n        <div class=\"card-body\">\r\n          <p class=\"mb-0 text-center\">\r\n            Your dashboard has been disabled temporarily.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      <div v-if=\"!isLoading\" class=\"card bg-secondary\">\r\n        <div class=\"card-body\">\r\n          <p class=\"mb-0 text-center\">\r\n            This workspace does not have any active reports.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport _nav from '@/_nav'\r\nimport * as TYPE from '@/actionTypes.js'\r\nimport _ from 'lodash'\r\nimport { mapActions, mapGetters } from 'vuex'\r\nimport { allSellers, sellersTypeFields } from './configOptions'\r\nimport HeaderComponent from './Header'\r\nimport { ReportMarketplaces, MarketPlacesResult, AllSellerMode, DashboardFilterSourceType } from '@/constants/Report'\r\nimport { getMarketplaceLabelByType } from '@/shared/utils'\r\nimport vToasted from '@/shared/notification'\r\nexport default {\r\n  name: 'MWDashboardIndex',\r\n  components: {\r\n    HeaderComponent\r\n  },\r\n  mixins: [vToasted],\r\n  data: () => ({\r\n    MarketPlacesResult,\r\n    ReportMarketplaces,\r\n    AllSellerMode,\r\n    DashboardFilterSourceType,\r\n    sourceAllSellerOptions: [\r\n      { value: DashboardFilterSourceType.VIOLATIONS, text: 'Violations' },\r\n      { value: DashboardFilterSourceType.ALL_SELLERS, text: 'All Items' }\r\n    ],\r\n    sourceAuthorizedOnlyOptions: [\r\n      { value: DashboardFilterSourceType.VIOLATIONS, text: 'Violations' },\r\n      { value: DashboardFilterSourceType.ALL_SELLERS, text: 'All Authorized Items' }\r\n    ],\r\n    sourceRogueOnlyOptions: [\r\n      { value: DashboardFilterSourceType.VIOLATIONS, text: 'Violations' },\r\n      { value: DashboardFilterSourceType.ALL_SELLERS, text: 'All Rogue Items' }\r\n    ],\r\n    queryOptions: {\r\n      active: true\r\n    },\r\n    settings: {\r\n      show_dashboard: true\r\n    },\r\n    routeDashboardMain: 'MWDashboardMain',\r\n    routeDashboardHistorical: 'MWDashboardHistorical',\r\n    selected: {\r\n      report: null,\r\n      marketplace: null,\r\n      marketplace_string_prefix: 'marketplace_',\r\n      seller_type: null,\r\n      fulfillment: '',\r\n      share_token: null,\r\n      source: DashboardFilterSourceType.VIOLATIONS,\r\n      options: {\r\n        marketplaces: [],\r\n        seller_type: [],\r\n        fulfillment: [\r\n          { label: 'All', value: '' },\r\n          { label: 'FBA', value: 'FBA' },\r\n          { label: 'MFN', value: 'MFN' }\r\n        ]\r\n      }\r\n    },\r\n    nav: _nav,\r\n    isLoading: true\r\n  }),\r\n  methods: {\r\n    ...mapActions({\r\n      fetchReports: `mw/dashboard/${TYPE.FETCH_LIST_REPORTS}`,\r\n      mainConfig: `mw/dashboard/${TYPE.GET_DATA_CONFIG_VIOLATOR}`,\r\n      remoteFetchSetting: `mw/settings/${TYPE.FETCH_SETTING}`\r\n    }),\r\n    keepShareTokenForQuery() {\r\n      let query = {\r\n        report: this.selected.report.name_in_dashboard,\r\n        marketplace: this.selected.marketplace,\r\n        seller_type: this.selected.seller_type,\r\n        fulfillment: this.selected.fulfillment,\r\n        source: this.selected.source\r\n      }\r\n      if (this.selected.share_token) {\r\n        _.assign(query, { share_token: this.selected.share_token })\r\n      }\r\n      return query\r\n    },\r\n    hanldeChangeReportName() {\r\n      const val = this.selected.marketplace\r\n      this.selected.options.seller_type = []\r\n      if (val === ReportMarketplaces.google_shopping) {\r\n        this.selected.seller_type = allSellers.value\r\n        this.selected.options.seller_type.push(allSellers)\r\n      } else if (_.includes(_.values(MarketPlacesResult), val.replace(/[_]/g, '.'))) {\r\n        if ((!this.selected.report.separate_mfn_fba_authorized_seller && this.selected.report.list_authorized_seller_names.length === 0) || (this.selected.report.separate_mfn_fba_authorized_seller &&\r\n          this.selected.report.mfn_authorized_seller_names.length === 0 &&\r\n          this.selected.report.fba_authorized_seller_names.length === 0)) {\r\n          this.selected.seller_type = allSellers.value\r\n          this.selected.options.seller_type.push(allSellers)\r\n        } else {\r\n          this.selected.options.seller_type = _.cloneDeep(sellersTypeFields)\r\n          if (this.selected.options.seller_type.length) {\r\n            this.selected.seller_type = this.selected.options.seller_type[0].value\r\n          }\r\n        }\r\n      }\r\n      const query = this.keepShareTokenForQuery()\r\n\r\n      this.$router.push({\r\n        params: {\r\n          client_id: this.nav.clientId\r\n        },\r\n        query: query\r\n      })\r\n    },\r\n    handleChangeSource() {\r\n      const query = this.keepShareTokenForQuery()\r\n      this.$router.push({\r\n        params: {\r\n          client_id: this.nav.clientId\r\n        },\r\n        query: query\r\n      })\r\n    },\r\n    handleChangeSellerType() {\r\n      const query = this.keepShareTokenForQuery()\r\n\r\n      this.$router.push({\r\n        params: {\r\n          client_id: this.nav.clientId\r\n        },\r\n        query: query\r\n      })\r\n    },\r\n    needToHideSourceTypeFilter() {\r\n      const allSellerMode = this.getMarketplaceInfoDoc(this.selected.report, this.selected.marketplace).all_seller_mode || AllSellerMode.NONE\r\n      if (allSellerMode === AllSellerMode.NONE) {\r\n        this.selected.source = DashboardFilterSourceType.VIOLATIONS\r\n        return true\r\n      }\r\n      return false\r\n    },\r\n    getMarketplaceInfoDoc(report, marketplace) {\r\n      return report[`${this.getMarketplaceInfoKey(marketplace)}`]\r\n    },\r\n    getMarketplaceInfoKey(marketplace) {\r\n      marketplace = this.convertMarketplaceEnumToMarketplaceStringInfo(marketplace)\r\n      return `${this.selected.marketplace_string_prefix}${marketplace}`\r\n    },\r\n    convertMarketplaceEnumToMarketplaceStringInfo(marketplace) {\r\n      if (_.includes(marketplace, 'amazon')) {\r\n        return marketplace.replace(/[.]/g, '_')\r\n      }\r\n      return marketplace\r\n    },\r\n    getCurrentSourceOption() {\r\n      const allSellerMode = this.getMarketplaceInfoDoc(this.selected.report, this.selected.marketplace).all_seller_mode || AllSellerMode.NONE\r\n      switch (allSellerMode) {\r\n        case AllSellerMode.AUTHORIZED_ONLY:\r\n          return this.sourceAuthorizedOnlyOptions\r\n        case AllSellerMode.ROGUE_ONLY:\r\n          return this.sourceRogueOnlyOptions\r\n        case AllSellerMode.NONE:\r\n        case AllSellerMode.BOTH:\r\n          return this.sourceAllSellerOptions\r\n      }\r\n    },\r\n    async fetchSettings() {\r\n      const existShareToken = _.has(this.$route.query, 'token')\r\n      if (!existShareToken) {\r\n        const { id } = this.$route.params\r\n        try {\r\n          const result = await this.remoteFetchSetting({ id })\r\n          return result.show_dashboard\r\n        } catch (error) {\r\n          let message = _.get(error, 'response.data.message', null)\r\n          if (message) {\r\n            this.vToasted('error', message)\r\n          } else {\r\n            console.log(error)\r\n          }\r\n        }\r\n      }\r\n      return true\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      reports: `mw/dashboard/${TYPE.GET_LIST_REPORTS}`\r\n    }),\r\n    filterReports() {\r\n      return this.reports\r\n    },\r\n    queryParams() {\r\n      return this.$route.query || {}\r\n    },\r\n    sharableRoute () {\r\n      const routeRegrex = /\\/share\\//\r\n      return routeRegrex.test(this.$route.path) ? 'Share' : ''\r\n    }\r\n  },\r\n  async created() {\r\n    const existShareToken = _.has(this.$route.query, 'share_token')\r\n    let params = {\r\n      active_only: this.queryOptions.active,\r\n      limit: 99,\r\n      // must keep this order\r\n      sort_by: 'order',\r\n      sort_dir: 'asc'\r\n    }\r\n    this.selected.source = DashboardFilterSourceType.VIOLATIONS\r\n    this.settings.show_dashboard = true\r\n    if (existShareToken) {\r\n      this.routeDashboardHistorical = 'MWShareDashboardHistorical'\r\n      this.routeDashboardMain = 'MWShareDashboardMain'\r\n      const shareToken = this.$route.query.share_token\r\n      _.assign(params, { share_token: shareToken })\r\n      this.selected.share_token = shareToken\r\n    } else {\r\n      this.settings.show_dashboard = await this.fetchSettings()\r\n    }\r\n    if (this.settings.show_dashboard) {\r\n      this.fetchReports(params).then(res => {\r\n        this.isLoading = false\r\n      }).catch(res => {\r\n        this.isLoading = false\r\n      })\r\n    }\r\n  },\r\n  async syncedReportName() {\r\n    this.hanldeChangeReportName()\r\n  },\r\n  watch: {\r\n    filterReports(val) {\r\n      if (val.items.length) {\r\n        this.selected.report = val.items[0]\r\n        const existReportName = _.has(this.$route.query, 'report')\r\n        if (existReportName) {\r\n          const reportName = this.$route.query.report\r\n          const index = _.findIndex(val.items, function(value) { return reportName.toLowerCase() === value.name_in_dashboard.toLowerCase() })\r\n          if (index > 0) {\r\n            this.selected.report = val.items[index]\r\n          }\r\n        }\r\n      }\r\n    },\r\n    'selected.report'(val) {\r\n      this.selected.marketplace = null\r\n      this.selected.options.marketplace = []\r\n      this.selected.seller_type = null\r\n      this.selected.options.seller_type = []\r\n      _.forEach(val.marketplaces, (v, k) => {\r\n        if (v) {\r\n          this.selected.options.marketplace.push({\r\n            label: getMarketplaceLabelByType(k),\r\n            value: k\r\n          })\r\n        }\r\n      })\r\n      if (!_.isEmpty(this.selected.options.marketplace)) {\r\n        const existMarketplace = _.has(this.$route.query, 'marketplace')\r\n        if (existMarketplace && _.find(this.selected.options.marketplace, { value: this.$route.query.marketplace })) {\r\n          this.selected.marketplace = this.$route.query.marketplace\r\n        } else {\r\n          this.selected.marketplace = this.selected.options.marketplace[0].value\r\n        }\r\n        this.hanldeChangeReportName()\r\n      }\r\n      let query = this.keepShareTokenForQuery()\r\n      this.$router.push({\r\n        params: {\r\n          client_id: this.nav.clientId\r\n        },\r\n        query: query\r\n      })\r\n    },\r\n    'selected.marketplace'(val) {\r\n      this.hanldeChangeReportName()\r\n    },\r\n    'selected.seller_type'(val) {\r\n      this.handleChangeSellerType()\r\n    },\r\n    'selected.fulfillment'(val) {\r\n      this.handleChangeSellerType()\r\n    },\r\n    'selected.source'(val) {\r\n      this.handleChangeSource()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.main-board {\r\n  padding-bottom: 10px;\r\n}\r\n.mw-main {\r\n  overflow: hidden;\r\n  .cbpo-pagination button.current{\r\n    background-color: #57719b !important;\r\n  }\r\n}\r\n.widgets-nav {\r\n  .nav-item:first-child {\r\n    .nav-link {\r\n      border-left: 0;\r\n    }\r\n  }\r\n  .nav-link {\r\n    border-top: 0!important;\r\n    border-radius: 0!important;\r\n    &.active {\r\n      position: relative;\r\n      &:before {\r\n        content: '';\r\n        position: absolute;\r\n        width: 100%;\r\n        top: 0;\r\n        left: 0;\r\n        height: 4px;\r\n        background: #50a3a2;\r\n        border: 1px solid #50a3a2;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/page/dashboard"}]}