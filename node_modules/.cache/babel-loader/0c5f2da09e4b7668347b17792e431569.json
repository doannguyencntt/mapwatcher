{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Project\\CBPO\\plat-mw-web\\src\\store\\modules\\page\\brands\\index.js","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\store\\modules\\page\\brands\\index.js","mtime":1630397532890},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1626076679949}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.array.find\";\nimport _toConsumableArray from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.find-index\";\nimport _defineProperty from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _getters, _mutations, _actions;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as TYPE from '@/actionTypes'; // import { promiseOneBrand } from './_dataConfig'\n\nimport _ from 'lodash';\nimport { MW_API } from '@/service/';\nimport * as URL from '@/service/_constant'; // import { ucfirst } from '@/shared/utils'\n\nimport * as utils from '@/shared/utils';\nimport mwFirebaseJob from '@/service/firebaseSvc';\nimport { MarketPlacesResult } from '@/constants/Report'; // import Vue from 'vue'\n\nvar fieldAccess = ['active', 'marketplaces', 'list_authorized_seller_names', 'logo', 'name_in_dashboard', 'price_manager', 'ignore_screenshot', 'fulfillment', 'order', 'ignore_price_tracking', 'show_upc_in_dashboard', 'priority', 'watch_for_used_items', 'separate_mfn_fba_authorized_seller', 'fba_authorized_seller_names', 'mfn_authorized_seller_names', 'true_map_report'];\nvar state = {\n  listBrands: {\n    items: [],\n    total: 0\n  },\n  brand: {\n    price_manager: {},\n    active: false\n  },\n  listReportMarketplaceHistory: {},\n  tempBrand: {},\n  defaultParams: {\n    page: 1,\n    limit: 10,\n    s: null,\n    sort_by: 'name_in_dashboard',\n    sort_dir: 'asc'\n  },\n  defaultParamsReportMarketplaceHistory: {\n    page: 1,\n    limit: 10,\n    brand_id: null,\n    marketplace: null\n  },\n  isLoad: false,\n  isGSLoad: false,\n  runBrandNr: 0,\n  getValidAmazonBrand: [],\n  getValidAmazonCABrand: [],\n  getValidGSBrand: []\n};\nvar getters = (_getters = {}, _defineProperty(_getters, TYPE.GET_LIST_BRANDS, function (state) {\n  return state.listBrands;\n}), _defineProperty(_getters, TYPE.GET_ONE_BRAND, function (state) {\n  return state.brand;\n}), _defineProperty(_getters, TYPE.GET_BRAND_LOADING, function (state) {\n  return state.isLoad;\n}), _defineProperty(_getters, TYPE.GET_GS_BRAND_LOADING, function (state) {\n  return state.isGSLoad;\n}), _defineProperty(_getters, TYPE.GET_DEFAULT_PARAMS, function (state) {\n  return state.defaultParams;\n}), _defineProperty(_getters, TYPE.GET_VALID_AMAZON_BRANDS, function (state) {\n  return state.getValidAmazonBrand;\n}), _defineProperty(_getters, TYPE.GET_VALID_AMAZON_CA_BRANDS, function (state) {\n  return state.getValidAmazonCABrand;\n}), _defineProperty(_getters, TYPE.GET_VALID_GS_BRANDS, function (state) {\n  return state.getValidGSBrand;\n}), _defineProperty(_getters, TYPE.GET_REPORT_MARKETPLACE_HISTORY, function (state) {\n  return state.listReportMarketplaceHistory;\n}), _defineProperty(_getters, TYPE.GET_REPORT_MARKETPLACE_HISTORY_DEFAULT_PARAMS, function (state) {\n  return state.defaultParamsReportMarketplaceHistory;\n}), _getters);\n\nvar getShareToken = function getShareToken(payload) {\n  var token = _.has(payload, 'share_token') ? payload.share_token : null;\n\n  if (token) {\n    payload = _.omit(payload, ['share_token']);\n  }\n\n  var config = token ? {\n    share_token: token\n  } : {};\n  return {\n    config: config,\n    oriPayload: payload\n  };\n};\n\nvar mutations = (_mutations = {}, _defineProperty(_mutations, TYPE.SET_LIST_BRANDS, function (state, payload) {\n  state.listBrands = _objectSpread({}, payload);\n}), _defineProperty(_mutations, TYPE.SET_LIST_REPORT_MARKETPLACE_HISTORY, function (state, payload) {\n  state.listReportMarketplaceHistory = _objectSpread({}, payload);\n}), _defineProperty(_mutations, TYPE.GET_VALID_AMAZON_BRANDS, function (state, payload) {\n  state.getValidAmazonBrand = _objectSpread({}, payload);\n}), _defineProperty(_mutations, TYPE.GET_VALID_AMAZON_CA_BRANDS, function (state, payload) {\n  state.getValidAmazonCABrand = _objectSpread({}, payload);\n}), _defineProperty(_mutations, TYPE.GET_VALID_GS_BRANDS, function (state, payload) {\n  state.getValidGSBrand = _objectSpread({}, payload);\n}), _defineProperty(_mutations, TYPE.SET_ONE_BRAND, function (state, payload) {\n  state.brand = payload;\n}), _defineProperty(_mutations, TYPE.SET_BRAND_LOADING, function (state, payload) {\n  state.isLoad = payload;\n}), _defineProperty(_mutations, TYPE.SET_GS_BRAND_LOADING, function (state, payload) {\n  state.isGSLoad = payload;\n}), _defineProperty(_mutations, TYPE.UPDATE_BRAND_PROGRESS, function (state, payload) {\n  // console.log('before', state.items)\n  var index = state.listBrands.items.findIndex(function (item) {\n    return item._id === payload.brand_id;\n  });\n\n  if (index !== -1) {\n    if (state.runBrandNr > 0) {\n      var indexItem = _.findIndex(state.listBrands.items[index].activeMarketplaces, function (info) {\n        return info.value === payload.marketplace;\n      });\n\n      if (indexItem !== -1) {\n        // use this for system mode handle job is report based job\n        // state.listBrands.items[index].activeMarketplaces[indexItem].info.latest_job = {\n        //   status: payload.status,\n        //   progress: payload.progress\n        // }\n        state.listBrands.items[index].activeMarketplaces[indexItem].info.last_job_status = payload.status; // use this for system mode handle job is map based job\n\n        state.listBrands.items[index].activeMarketplaces[indexItem].info.last_job_progress = payload.progress;\n\n        if (typeof payload.number_processed_map === 'number') {\n          state.listBrands.items[index].activeMarketplaces[indexItem].info.number_processed_map = payload.number_processed_map;\n        }\n\n        if (typeof payload.number_total_map === 'number') {\n          state.listBrands.items[index].activeMarketplaces[indexItem].info.number_total_map = payload.number_total_map;\n        }\n\n        console.log('brand is updated');\n      }\n    } else {\n      state.runBrandNr = state.runBrandNr + 1;\n      console.log('not update - brand');\n    }\n  } // console.log('after', state.items)\n\n}), _defineProperty(_mutations, TYPE.RESET_BRAND_RUN_NR, function (state, payload) {\n  state.runBrandNr = 0;\n}), _defineProperty(_mutations, TYPE.SET_IS_DOWLOADING_BRAND, function (state, payload) {\n  // Vue.$set(state.listBrands.items[payload.index].activeMarketplaces[payload.indexActiveMarketplaces], 'isLoad', payload.isLoad)\n  state.listBrands.items[payload.index].activeMarketplaces[payload.indexActiveMarketplaces].isLoad = payload.isLoad;\n  console.log('state.listBrands.items[payload.index].activeMarketplaces[payload.indexActiveMarketplaces].isLoad', state.listBrands.items[payload.index].activeMarketplaces[payload.indexActiveMarketplaces].isLoad);\n}), _mutations);\nvar actions = (_actions = {}, _defineProperty(_actions, TYPE.GET_VALID_AMAZON_BRANDS, function (_ref, params) {\n  var commit = _ref.commit,\n      dispatch = _ref.dispatch;\n  params = _.assign({}, state.getValidAmazonBrand, params);\n  commit(TYPE.SET_BRAND_LOADING, true);\n  return new Promise( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resolve, reject) {\n      var _getShareToken, config, oriPayload, res;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _getShareToken = getShareToken(params), config = _getShareToken.config, oriPayload = _getShareToken.oriPayload;\n              _context.next = 4;\n              return MW_API.get(\"\".concat(URL.GET_VALID_AMAZON_BRAND(), \"?\").concat(utils.buildUrlQueryString(oriPayload)), config);\n\n            case 4:\n              res = _context.sent;\n              commit(TYPE.GET_VALID_AMAZON_BRANDS, res.data);\n              commit(TYPE.SET_BRAND_LOADING, false);\n              resolve(res.data);\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              reject(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.GET_VALID_AMAZON_CA_BRANDS, function (_ref3, params) {\n  var commit = _ref3.commit,\n      dispatch = _ref3.dispatch;\n  params = _.assign({}, state.getValidAmazonCABrand, params);\n  commit(TYPE.SET_BRAND_LOADING, true);\n  return new Promise( /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(resolve, reject) {\n      var _getShareToken2, config, oriPayload, res;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _getShareToken2 = getShareToken(params), config = _getShareToken2.config, oriPayload = _getShareToken2.oriPayload;\n              _context2.next = 4;\n              return MW_API.get(\"\".concat(URL.GET_VALID_AMAZON_CA_BRAND(), \"?\").concat(utils.buildUrlQueryString(oriPayload)), config);\n\n            case 4:\n              res = _context2.sent;\n              commit(TYPE.GET_VALID_AMAZON_CA_BRANDS, res.data);\n              commit(TYPE.SET_BRAND_LOADING, false);\n              resolve(res.data);\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              reject(_context2.t0);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 10]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.GET_VALID_GS_BRANDS, function (_ref5, params) {\n  var commit = _ref5.commit,\n      dispatch = _ref5.dispatch;\n  params = _.assign({}, state.getValidGSBrand, params);\n  commit(TYPE.SET_BRAND_LOADING, true);\n  return new Promise( /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(resolve, reject) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return MW_API.get(\"\".concat(URL.GET_VALID_GS_BRAND(), \"?\").concat(utils.buildUrlQueryString(params)));\n\n            case 3:\n              res = _context3.sent;\n              commit(TYPE.GET_VALID_GS_BRANDS, res.data);\n              commit(TYPE.SET_BRAND_LOADING, false);\n              resolve(res.data);\n              _context3.next = 12;\n              break;\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              reject(_context3.t0);\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 9]]);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.FETCH_LIST_BRANDS, function (_ref7, params) {\n  var commit = _ref7.commit,\n      dispatch = _ref7.dispatch;\n  params = _.assign({}, state.defaultParams, params);\n  commit(TYPE.SET_BRAND_LOADING, true);\n  return new Promise( /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(resolve, reject) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return MW_API.get(\"\".concat(URL.GET_POST_BRANDS(), \"?\").concat(utils.buildUrlQueryString(params)));\n\n            case 3:\n              res = _context4.sent;\n\n              _.forEach(res.data.items, function (item, index) {\n                item.activeMarketplaces = [];\n\n                var keys = _.keys(item.marketplaces);\n\n                _.forEach(keys, function (key) {\n                  if (item.marketplaces[key]) {\n                    item[\"marketplace_\".concat(key)].isLoad = false;\n                    item.activeMarketplaces.push({\n                      key: key,\n                      value: _.includes(key, 'amazon') ? key.replace(/[_]/g, '.') : key,\n                      label: _.includes(key, 'amazon') ? _.upperFirst(key.replace(/[_]/g, '.')) : _.startCase(_.toLower(key.replace(/[_]/g, ' '))),\n                      info: item[\"marketplace_\".concat(key)]\n                    }); // TODO we already migrate data if marketplace is enable - script will create info with field marketplace_${marketplace_field} so i think case null will not happen\n                  }\n                });\n              });\n\n              commit(TYPE.SET_LIST_BRANDS, res.data);\n              commit(TYPE.SET_BRAND_LOADING, false);\n              dispatch(TYPE.LISTEN_TO_FIREBASE_EVENT_BRAND, res.data);\n              resolve(res.data);\n              _context4.next = 14;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](0);\n              // console.log(error)\n              reject(_context4.t0);\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 11]]);\n    }));\n\n    return function (_x7, _x8) {\n      return _ref8.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.RESET_BRANDS, function (_ref9) {\n  var commit = _ref9.commit;\n\n  try {\n    var data = {\n      items: [],\n      total: 0\n    };\n    commit(TYPE.SET_LIST_BRANDS, data);\n  } catch (error) {\n    console.log(error);\n  }\n}), _defineProperty(_actions, TYPE.FETCH_LIST_REPORT_MARKETPLACE_HISTORY, function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(_ref10, params) {\n    var commit, res;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            commit = _ref10.commit;\n            params = _.assign({}, state.defaultParamsReportMarketplaceHistory, params);\n            _context5.next = 4;\n            return MW_API.get(\"\".concat(URL.GET_BRAND_MARKETPLACE_HISTORY(), \"?\").concat(utils.buildUrlQueryString(params)));\n\n          case 4:\n            res = _context5.sent;\n            commit(TYPE.SET_LIST_REPORT_MARKETPLACE_HISTORY, res.data);\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref11.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.REMOVE_BRANDS, function () {\n  var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(_ref12, id) {\n    var state;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            state = _ref12.state;\n            return _context7.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n              var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(resolve, reject) {\n                var res;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        _context6.prev = 0;\n                        _context6.next = 3;\n                        return MW_API.delete(URL.EDIT_AND_REMOVE_BRANDS(id));\n\n                      case 3:\n                        res = _context6.sent;\n\n                        _.remove(state.listBrands.items, function (d) {\n                          return d._id === id;\n                        });\n\n                        state.listBrands.items = _toConsumableArray(state.listBrands.items);\n                        resolve(res.data);\n                        _context6.next = 12;\n                        break;\n\n                      case 9:\n                        _context6.prev = 9;\n                        _context6.t0 = _context6[\"catch\"](0);\n                        reject(_context6.t0.response);\n\n                      case 12:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6, null, [[0, 9]]);\n              }));\n\n              return function (_x13, _x14) {\n                return _ref14.apply(this, arguments);\n              };\n            }()));\n\n          case 2:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function (_x11, _x12) {\n    return _ref13.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.RUN_A_BRAND, function () {\n  var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(_ref15, info) {\n    var commit, state, dispatch, idBrand, runOptions, marketplace;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            commit = _ref15.commit, state = _ref15.state, dispatch = _ref15.dispatch;\n            _context8.prev = 1;\n            idBrand = info.id;\n            runOptions = info.runOptions;\n            marketplace = info.runOptions.marketplace; // let res = null\n\n            if (!_.includes(marketplace, 'amazon')) {\n              _context8.next = 10;\n              break;\n            }\n\n            _context8.next = 8;\n            return MW_API.post(URL.RUN_A_BRAND(idBrand), _objectSpread({}, runOptions));\n\n          case 8:\n            _context8.next = 13;\n            break;\n\n          case 10:\n            if (!(marketplace === MarketPlacesResult.GOOGLE_SHOPPING)) {\n              _context8.next = 13;\n              break;\n            }\n\n            _context8.next = 13;\n            return MW_API.post(URL.RUN_A_GS_BRAND(idBrand), _objectSpread({}, runOptions));\n\n          case 13:\n            _context8.next = 19;\n            break;\n\n          case 15:\n            _context8.prev = 15;\n            _context8.t0 = _context8[\"catch\"](1);\n            console.log('jobs', _context8.t0);\n            throw _.get(_context8.t0, 'response.data', _context8.t0);\n\n          case 19:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[1, 15]]);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref16.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.REAL_TIME_STATUS_RUN, function (_ref17, _ref18) {\n  var commit = _ref17.commit,\n      state = _ref17.state,\n      dispatch = _ref17.dispatch;\n  var idBrand = _ref18.idBrand,\n      reResolve = _ref18.reResolve,\n      reReject = _ref18.reReject;\n  return new Promise( /*#__PURE__*/function () {\n    var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(resolve, reject) {\n      var res, data, brand;\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              if (reResolve) {\n                resolve = reResolve;\n                reject = reReject;\n              }\n\n              _context9.prev = 1;\n              _context9.next = 4;\n              return MW_API.get(URL.CHECK_STATUS_RUN_A_BRAND(idBrand));\n\n            case 4:\n              res = _context9.sent;\n              data = res.data;\n              brand = state.listBrands.items.find(function (e) {\n                return e.id === idBrand;\n              });\n\n              if (brand) {\n                brand.last_job = data.last_job;\n                brand.last_job_id = data.last_job_id;\n                commit(TYPE.SET_LIST_BRANDS, state.listBrands);\n\n                if (res.data.last_job.status === 'running') {\n                  setTimeout(function () {\n                    console.log(idBrand, 'realtime get status for job', new Date().getTime() / 1000);\n                    dispatch(TYPE.REAL_TIME_STATUS_RUN, {\n                      idBrand: idBrand,\n                      reResolve: resolve,\n                      reReject: reject\n                    });\n                  }, 4000);\n                } else {\n                  resolve();\n                }\n              } else {\n                resolve();\n              }\n\n              _context9.next = 14;\n              break;\n\n            case 10:\n              _context9.prev = 10;\n              _context9.t0 = _context9[\"catch\"](1);\n              console.log('realtime get status for job is error', _context9.t0);\n              reject(_context9.t0);\n\n            case 14:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[1, 10]]);\n    }));\n\n    return function (_x17, _x18) {\n      return _ref19.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.REMOTE_EDIT_BRAND, function () {\n  var _ref22 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(_ref20, _ref21) {\n    var commit, state, id, params, brand;\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            commit = _ref20.commit, state = _ref20.state;\n            id = _ref21.id, params = _ref21.params;\n            brand = _.cloneDeep(params);\n\n            _.forEach(brand, function (v, k) {\n              if (fieldAccess.indexOf(k.toLowerCase()) === -1 && !_.includes(k, 'amazon') && !_.includes(k, 'google')) {\n                delete brand[k];\n              }\n            });\n\n            return _context11.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n              var _ref23 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(resolve, reject) {\n                var res;\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        _context10.prev = 0;\n                        _context10.next = 3;\n                        return MW_API.put(URL.EDIT_AND_REMOVE_BRANDS(id), _objectSpread({}, brand));\n\n                      case 3:\n                        res = _context10.sent;\n                        resolve(res.data);\n                        _context10.next = 10;\n                        break;\n\n                      case 7:\n                        _context10.prev = 7;\n                        _context10.t0 = _context10[\"catch\"](0);\n                        reject(_context10.t0.response);\n\n                      case 10:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10, null, [[0, 7]]);\n              }));\n\n              return function (_x21, _x22) {\n                return _ref23.apply(this, arguments);\n              };\n            }()));\n\n          case 5:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n\n  return function (_x19, _x20) {\n    return _ref22.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.REMOTE_POST_BRAND, function () {\n  var _ref25 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(_ref24, params) {\n    var commit, state, brand;\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            commit = _ref24.commit, state = _ref24.state;\n            brand = _.cloneDeep(params);\n\n            _.forEach(brand, function (v, k) {\n              if (fieldAccess.indexOf(k.toLowerCase()) === -1 && !_.includes(k, 'amazon') && !_.includes(k, 'google')) {\n                delete brand[k];\n              }\n            });\n\n            return _context13.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n              var _ref26 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(resolve, reject) {\n                var res;\n                return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                  while (1) {\n                    switch (_context12.prev = _context12.next) {\n                      case 0:\n                        _context12.prev = 0;\n                        _context12.next = 3;\n                        return MW_API.post(URL.GET_POST_BRANDS(), _objectSpread({}, brand));\n\n                      case 3:\n                        res = _context12.sent;\n                        resolve(res.data);\n                        _context12.next = 10;\n                        break;\n\n                      case 7:\n                        _context12.prev = 7;\n                        _context12.t0 = _context12[\"catch\"](0);\n                        reject(_context12.t0.response);\n\n                      case 10:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }\n                }, _callee12, null, [[0, 7]]);\n              }));\n\n              return function (_x25, _x26) {\n                return _ref26.apply(this, arguments);\n              };\n            }()));\n\n          case 4:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n\n  return function (_x23, _x24) {\n    return _ref25.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.REMOTE_GET_LINK_DOWNLOAD_JOB, function () {\n  var _ref28 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(_ref27, params) {\n    var commit, state, dispatch;\n    return regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            commit = _ref27.commit, state = _ref27.state, dispatch = _ref27.dispatch;\n            return _context15.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n              var _ref29 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(resolve, reject) {\n                var id, marketplace, source, query, res;\n                return regeneratorRuntime.wrap(function _callee14$(_context14) {\n                  while (1) {\n                    switch (_context14.prev = _context14.next) {\n                      case 0:\n                        _context14.prev = 0;\n                        id = params.id, marketplace = params.marketplace, source = params.source;\n                        query = \"?brand_id=\".concat(id, \"&marketplace=\").concat(marketplace);\n\n                        if (source) {\n                          query += \"&source=\".concat(source);\n                        }\n\n                        _context14.next = 6;\n                        return MW_API.get(\"\".concat(URL.DOWNLOAD_JOB_BY_ID(id)).concat(query));\n\n                      case 6:\n                        res = _context14.sent;\n                        resolve(res.data);\n                        _context14.next = 13;\n                        break;\n\n                      case 10:\n                        _context14.prev = 10;\n                        _context14.t0 = _context14[\"catch\"](0);\n                        reject(_context14.t0.response.data);\n\n                      case 13:\n                      case \"end\":\n                        return _context14.stop();\n                    }\n                  }\n                }, _callee14, null, [[0, 10]]);\n              }));\n\n              return function (_x29, _x30) {\n                return _ref29.apply(this, arguments);\n              };\n            }()));\n\n          case 2:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15);\n  }));\n\n  return function (_x27, _x28) {\n    return _ref28.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.FETCH_ONE_BRAND, function (_ref30, id) {\n  var commit = _ref30.commit,\n      state = _ref30.state,\n      dispatch = _ref30.dispatch;\n  return new Promise( /*#__PURE__*/function () {\n    var _ref31 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(resolve, reject) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.prev = 0;\n              _context16.next = 3;\n              return MW_API.get(URL.GET_ONE_BRAND_BY_ID(id));\n\n            case 3:\n              res = _context16.sent;\n              commit(TYPE.SET_ONE_BRAND, res.data);\n              resolve();\n              _context16.next = 11;\n              break;\n\n            case 8:\n              _context16.prev = 8;\n              _context16.t0 = _context16[\"catch\"](0);\n              reject(_context16.t0.data);\n\n            case 11:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16, null, [[0, 8]]);\n    }));\n\n    return function (_x31, _x32) {\n      return _ref31.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.REMOTE_SEARCH_BRANDS, function () {\n  var _ref33 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(_ref32, payload) {\n    var commit, res;\n    return regeneratorRuntime.wrap(function _callee17$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            commit = _ref32.commit;\n            _context17.prev = 1;\n            _context17.next = 4;\n            return MW_API.get(URL.GET_POST_BRANDS(), payload.search ? {\n              params: {\n                s: payload.search\n              }\n            } : {});\n\n          case 4:\n            res = _context17.sent;\n            state.currentPage = 1;\n            commit(TYPE.SET_LIST_BRANDS, res.data);\n            _context17.next = 12;\n            break;\n\n          case 9:\n            _context17.prev = 9;\n            _context17.t0 = _context17[\"catch\"](1);\n            console.log(_context17.t0.data);\n\n          case 12:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, _callee17, null, [[1, 9]]);\n  }));\n\n  return function (_x33, _x34) {\n    return _ref33.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.REMOTE_SORT_BRANDS, function () {\n  var _ref35 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(_ref34, payload) {\n    var commit, state, res;\n    return regeneratorRuntime.wrap(function _callee18$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            commit = _ref34.commit, state = _ref34.state;\n            _context18.prev = 1;\n            _context18.next = 4;\n            return MW_API.get(URL.GET_POST_BRANDS(), {\n              params: _objectSpread({\n                sort_dir: payload.sortDir,\n                sort_by: payload.sortBy\n              }, payload.search ? {\n                s: payload.search\n              } : {})\n            });\n\n          case 4:\n            res = _context18.sent;\n            state.currentPage = 1;\n            commit(TYPE.SET_LIST_BRANDS, res.data);\n            _context18.next = 12;\n            break;\n\n          case 9:\n            _context18.prev = 9;\n            _context18.t0 = _context18[\"catch\"](1);\n            console.log('err', _context18.t0.data);\n\n          case 12:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, _callee18, null, [[1, 9]]);\n  }));\n\n  return function (_x35, _x36) {\n    return _ref35.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, \"resetFirebase\", function resetFirebase(_ref36, payload) {\n  var commit = _ref36.commit;\n\n  if (payload.client_id) {\n    mwFirebaseJob.getFirebaseDb.ref(\"/mw_job_status_\".concat(payload.client_id)).off('value');\n  } else {\n    console.error('client_id is required to reset firebase');\n  }\n}), _defineProperty(_actions, TYPE.LISTEN_TO_FIREBASE_EVENT_BRAND, function (_ref37, payload) {\n  var commit = _ref37.commit;\n\n  if (payload.items[0].client_id) {\n    mwFirebaseJob.getFirebaseDb.ref(\"/mw_job_status_\".concat(payload.items[0].client_id)).off('value');\n    commit(TYPE.RESET_BRAND_RUN_NR);\n    mwFirebaseJob.getFirebaseDb.ref(\"/mw_job_status_\".concat(payload.items[0].client_id)).on('value', function (snapshot) {\n      if (snapshot.val().brand_id) {\n        // console.log('mw_job_status', snapshot.val())\n        commit(TYPE.UPDATE_BRAND_PROGRESS, snapshot.val());\n      }\n    }, function (errorObject) {\n      console.log('The read failed: ' + errorObject.code);\n    });\n  } else {\n    console.error('client_id is required to get firebase');\n  }\n}), _defineProperty(_actions, TYPE.SET_IS_DOWLOADING_BRAND, function (_ref38, payload) {\n  var commit = _ref38.commit;\n  commit(TYPE.SET_IS_DOWLOADING_BRAND, payload);\n}), _actions);\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["C:/Project/CBPO/plat-mw-web/src/store/modules/page/brands/index.js"],"names":["TYPE","_","MW_API","URL","utils","mwFirebaseJob","MarketPlacesResult","fieldAccess","state","listBrands","items","total","brand","price_manager","active","listReportMarketplaceHistory","tempBrand","defaultParams","page","limit","s","sort_by","sort_dir","defaultParamsReportMarketplaceHistory","brand_id","marketplace","isLoad","isGSLoad","runBrandNr","getValidAmazonBrand","getValidAmazonCABrand","getValidGSBrand","getters","GET_LIST_BRANDS","GET_ONE_BRAND","GET_BRAND_LOADING","GET_GS_BRAND_LOADING","GET_DEFAULT_PARAMS","GET_VALID_AMAZON_BRANDS","GET_VALID_AMAZON_CA_BRANDS","GET_VALID_GS_BRANDS","GET_REPORT_MARKETPLACE_HISTORY","GET_REPORT_MARKETPLACE_HISTORY_DEFAULT_PARAMS","getShareToken","payload","token","has","share_token","omit","config","oriPayload","mutations","SET_LIST_BRANDS","SET_LIST_REPORT_MARKETPLACE_HISTORY","SET_ONE_BRAND","SET_BRAND_LOADING","SET_GS_BRAND_LOADING","UPDATE_BRAND_PROGRESS","index","findIndex","item","_id","indexItem","activeMarketplaces","info","value","last_job_status","status","last_job_progress","progress","number_processed_map","number_total_map","console","log","RESET_BRAND_RUN_NR","SET_IS_DOWLOADING_BRAND","indexActiveMarketplaces","actions","params","commit","dispatch","assign","Promise","resolve","reject","get","GET_VALID_AMAZON_BRAND","buildUrlQueryString","res","data","GET_VALID_AMAZON_CA_BRAND","GET_VALID_GS_BRAND","FETCH_LIST_BRANDS","GET_POST_BRANDS","forEach","keys","marketplaces","key","push","includes","replace","label","upperFirst","startCase","toLower","LISTEN_TO_FIREBASE_EVENT_BRAND","RESET_BRANDS","error","FETCH_LIST_REPORT_MARKETPLACE_HISTORY","GET_BRAND_MARKETPLACE_HISTORY","REMOVE_BRANDS","id","delete","EDIT_AND_REMOVE_BRANDS","remove","d","response","RUN_A_BRAND","idBrand","runOptions","post","GOOGLE_SHOPPING","RUN_A_GS_BRAND","REAL_TIME_STATUS_RUN","reResolve","reReject","CHECK_STATUS_RUN_A_BRAND","find","e","last_job","last_job_id","setTimeout","Date","getTime","REMOTE_EDIT_BRAND","cloneDeep","v","k","indexOf","toLowerCase","put","REMOTE_POST_BRAND","REMOTE_GET_LINK_DOWNLOAD_JOB","source","query","DOWNLOAD_JOB_BY_ID","FETCH_ONE_BRAND","GET_ONE_BRAND_BY_ID","REMOTE_SEARCH_BRANDS","search","currentPage","REMOTE_SORT_BRANDS","sortDir","sortBy","client_id","getFirebaseDb","ref","off","on","snapshot","val","errorObject","code","namespaced"],"mappings":"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","sourcesContent":["import * as TYPE from '@/actionTypes'\r\n// import { promiseOneBrand } from './_dataConfig'\r\nimport _ from 'lodash'\r\nimport { MW_API } from '@/service/'\r\nimport * as URL from '@/service/_constant'\r\n// import { ucfirst } from '@/shared/utils'\r\nimport * as utils from '@/shared/utils'\r\nimport mwFirebaseJob from '@/service/firebaseSvc'\r\nimport { MarketPlacesResult } from '@/constants/Report'\r\n// import Vue from 'vue'\r\n\r\nconst fieldAccess = [\r\n  'active',\r\n  'marketplaces',\r\n  'list_authorized_seller_names',\r\n  'logo',\r\n  'name_in_dashboard',\r\n  'price_manager',\r\n  'ignore_screenshot',\r\n  'fulfillment',\r\n  'order',\r\n  'ignore_price_tracking',\r\n  'show_upc_in_dashboard',\r\n  'priority',\r\n  'watch_for_used_items',\r\n  'separate_mfn_fba_authorized_seller',\r\n  'fba_authorized_seller_names',\r\n  'mfn_authorized_seller_names',\r\n  'true_map_report'\r\n]\r\n\r\nconst state = {\r\n  listBrands: {\r\n    items: [],\r\n    total: 0\r\n  },\r\n  brand: {\r\n    price_manager: {},\r\n    active: false\r\n  },\r\n  listReportMarketplaceHistory: {},\r\n  tempBrand: {},\r\n  defaultParams: {\r\n    page: 1,\r\n    limit: 10,\r\n    s: null,\r\n    sort_by: 'name_in_dashboard',\r\n    sort_dir: 'asc'\r\n  },\r\n  defaultParamsReportMarketplaceHistory: {\r\n    page: 1,\r\n    limit: 10,\r\n    brand_id: null,\r\n    marketplace: null\r\n  },\r\n  isLoad: false,\r\n  isGSLoad: false,\r\n  runBrandNr: 0,\r\n  getValidAmazonBrand: [],\r\n  getValidAmazonCABrand: [],\r\n  getValidGSBrand: []\r\n}\r\nconst getters = {\r\n  [TYPE.GET_LIST_BRANDS]: (state) => state.listBrands,\r\n  [TYPE.GET_ONE_BRAND]: (state) => state.brand,\r\n  [TYPE.GET_BRAND_LOADING]: (state) => state.isLoad,\r\n  [TYPE.GET_GS_BRAND_LOADING]: (state) => state.isGSLoad,\r\n  [TYPE.GET_DEFAULT_PARAMS]: (state) => state.defaultParams,\r\n  [TYPE.GET_VALID_AMAZON_BRANDS]: (state) => state.getValidAmazonBrand,\r\n  [TYPE.GET_VALID_AMAZON_CA_BRANDS]: (state) => state.getValidAmazonCABrand,\r\n  [TYPE.GET_VALID_GS_BRANDS]: (state) => state.getValidGSBrand,\r\n  [TYPE.GET_REPORT_MARKETPLACE_HISTORY]: (state) => state.listReportMarketplaceHistory,\r\n  [TYPE.GET_REPORT_MARKETPLACE_HISTORY_DEFAULT_PARAMS]: (state) => state.defaultParamsReportMarketplaceHistory\r\n}\r\nconst getShareToken = (payload) => {\r\n  const token = _.has(payload, 'share_token') ? payload.share_token : null\r\n  if (token) {\r\n    payload = _.omit(payload, ['share_token'])\r\n  }\r\n  const config = token ? { share_token: token } : {}\r\n  return { config: config, oriPayload: payload }\r\n}\r\n\r\nconst mutations = {\r\n  [TYPE.SET_LIST_BRANDS] (state, payload) {\r\n    state.listBrands = { ...payload }\r\n  },\r\n  [TYPE.SET_LIST_REPORT_MARKETPLACE_HISTORY] (state, payload) {\r\n    state.listReportMarketplaceHistory = { ...payload }\r\n  },\r\n  [TYPE.GET_VALID_AMAZON_BRANDS] (state, payload) {\r\n    state.getValidAmazonBrand = { ...payload }\r\n  },\r\n  [TYPE.GET_VALID_AMAZON_CA_BRANDS] (state, payload) {\r\n    state.getValidAmazonCABrand = { ...payload }\r\n  },\r\n  [TYPE.GET_VALID_GS_BRANDS] (state, payload) {\r\n    state.getValidGSBrand = { ...payload }\r\n  },\r\n  [TYPE.SET_ONE_BRAND] (state, payload) {\r\n    state.brand = payload\r\n  },\r\n  [TYPE.SET_BRAND_LOADING] (state, payload) {\r\n    state.isLoad = payload\r\n  },\r\n  [TYPE.SET_GS_BRAND_LOADING] (state, payload) {\r\n    state.isGSLoad = payload\r\n  },\r\n  [TYPE.UPDATE_BRAND_PROGRESS] (state, payload) {\r\n    // console.log('before', state.items)\r\n    let index = state.listBrands.items.findIndex(item => item._id === payload.brand_id)\r\n    if (index !== -1) {\r\n      if (state.runBrandNr > 0) {\r\n        const indexItem = _.findIndex(state.listBrands.items[index].activeMarketplaces, (info) => { return info.value === payload.marketplace })\r\n        if (indexItem !== -1) {\r\n          // use this for system mode handle job is report based job\r\n          // state.listBrands.items[index].activeMarketplaces[indexItem].info.latest_job = {\r\n          //   status: payload.status,\r\n          //   progress: payload.progress\r\n          // }\r\n\r\n          state.listBrands.items[index].activeMarketplaces[indexItem].info.last_job_status = payload.status\r\n          // use this for system mode handle job is map based job\r\n          state.listBrands.items[index].activeMarketplaces[indexItem].info.last_job_progress = payload.progress\r\n          if (typeof (payload.number_processed_map) === 'number') {\r\n            state.listBrands.items[index].activeMarketplaces[indexItem].info.number_processed_map = payload.number_processed_map\r\n          }\r\n          if (typeof (payload.number_total_map) === 'number') {\r\n            state.listBrands.items[index].activeMarketplaces[indexItem].info.number_total_map = payload.number_total_map\r\n          }\r\n          console.log('brand is updated')\r\n        }\r\n      } else {\r\n        state.runBrandNr = state.runBrandNr + 1\r\n        console.log('not update - brand')\r\n      }\r\n    }\r\n    // console.log('after', state.items)\r\n  },\r\n  [TYPE.RESET_BRAND_RUN_NR] (state, payload) {\r\n    state.runBrandNr = 0\r\n  },\r\n  [TYPE.SET_IS_DOWLOADING_BRAND] (state, payload) {\r\n    // Vue.$set(state.listBrands.items[payload.index].activeMarketplaces[payload.indexActiveMarketplaces], 'isLoad', payload.isLoad)\r\n    state.listBrands.items[payload.index].activeMarketplaces[payload.indexActiveMarketplaces].isLoad = payload.isLoad\r\n    console.log('state.listBrands.items[payload.index].activeMarketplaces[payload.indexActiveMarketplaces].isLoad', state.listBrands.items[payload.index].activeMarketplaces[payload.indexActiveMarketplaces].isLoad)\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  [TYPE.GET_VALID_AMAZON_BRANDS] ({ commit, dispatch }, params) {\r\n    params = _.assign({}, state.getValidAmazonBrand, params)\r\n    commit(TYPE.SET_BRAND_LOADING, true)\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const { config, oriPayload } = getShareToken(params)\r\n        const res = await MW_API.get(`${URL.GET_VALID_AMAZON_BRAND()}?${utils.buildUrlQueryString(oriPayload)}`, config)\r\n        commit(TYPE.GET_VALID_AMAZON_BRANDS, res.data)\r\n        commit(TYPE.SET_BRAND_LOADING, false)\r\n        resolve(res.data)\r\n      } catch (error) {\r\n        reject(error)\r\n      }\r\n    })\r\n  },\r\n  [TYPE.GET_VALID_AMAZON_CA_BRANDS] ({ commit, dispatch }, params) {\r\n    params = _.assign({}, state.getValidAmazonCABrand, params)\r\n    commit(TYPE.SET_BRAND_LOADING, true)\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const { config, oriPayload } = getShareToken(params)\r\n        const res = await MW_API.get(`${URL.GET_VALID_AMAZON_CA_BRAND()}?${utils.buildUrlQueryString(oriPayload)}`, config)\r\n        commit(TYPE.GET_VALID_AMAZON_CA_BRANDS, res.data)\r\n        commit(TYPE.SET_BRAND_LOADING, false)\r\n        resolve(res.data)\r\n      } catch (error) {\r\n        reject(error)\r\n      }\r\n    })\r\n  },\r\n  [TYPE.GET_VALID_GS_BRANDS] ({ commit, dispatch }, params) {\r\n    params = _.assign({}, state.getValidGSBrand, params)\r\n    commit(TYPE.SET_BRAND_LOADING, true)\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await MW_API.get(`${URL.GET_VALID_GS_BRAND()}?${utils.buildUrlQueryString(params)}`)\r\n        commit(TYPE.GET_VALID_GS_BRANDS, res.data)\r\n        commit(TYPE.SET_BRAND_LOADING, false)\r\n        resolve(res.data)\r\n      } catch (error) {\r\n        reject(error)\r\n      }\r\n    })\r\n  },\r\n  [TYPE.FETCH_LIST_BRANDS] ({ commit, dispatch }, params) {\r\n    params = _.assign({}, state.defaultParams, params)\r\n    commit(TYPE.SET_BRAND_LOADING, true)\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await MW_API.get(`${URL.GET_POST_BRANDS()}?${utils.buildUrlQueryString(params)}`)\r\n        _.forEach(res.data.items, (item, index) => {\r\n          item.activeMarketplaces = []\r\n          const keys = _.keys(item.marketplaces)\r\n          _.forEach(keys, (key) => {\r\n            if (item.marketplaces[key]) {\r\n              item[`marketplace_${key}`].isLoad = false\r\n              item.activeMarketplaces.push({\r\n                key: key,\r\n                value: _.includes(key, 'amazon') ? key.replace(/[_]/g, '.') : key,\r\n                label: _.includes(key, 'amazon') ? _.upperFirst(key.replace(/[_]/g, '.')) : _.startCase(_.toLower(key.replace(/[_]/g, ' '))),\r\n                info: item[`marketplace_${key}`]\r\n              }) // TODO we already migrate data if marketplace is enable - script will create info with field marketplace_${marketplace_field} so i think case null will not happen\r\n            }\r\n          })\r\n        })\r\n        commit(TYPE.SET_LIST_BRANDS, res.data)\r\n        commit(TYPE.SET_BRAND_LOADING, false)\r\n        dispatch(TYPE.LISTEN_TO_FIREBASE_EVENT_BRAND, res.data)\r\n        resolve(res.data)\r\n      } catch (error) {\r\n        // console.log(error)\r\n        reject(error)\r\n      }\r\n    })\r\n  },\r\n  [TYPE.RESET_BRANDS] ({ commit }) {\r\n    try {\r\n      let data = {\r\n        items: [],\r\n        total: 0\r\n      }\r\n      commit(TYPE.SET_LIST_BRANDS, data)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  },\r\n  async [TYPE.FETCH_LIST_REPORT_MARKETPLACE_HISTORY]({ commit }, params) {\r\n    params = _.assign({}, state.defaultParamsReportMarketplaceHistory, params)\r\n    const res = await MW_API.get(`${URL.GET_BRAND_MARKETPLACE_HISTORY()}?${utils.buildUrlQueryString(params)}`)\r\n    commit(TYPE.SET_LIST_REPORT_MARKETPLACE_HISTORY, res.data)\r\n  },\r\n  async [TYPE.REMOVE_BRANDS] ({ state }, id) {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await MW_API.delete(URL.EDIT_AND_REMOVE_BRANDS(id))\r\n        _.remove(state.listBrands.items, (d) => d._id === id)\r\n        state.listBrands.items = [...state.listBrands.items]\r\n        resolve(res.data)\r\n      } catch (error) {\r\n        reject(error.response)\r\n      }\r\n    })\r\n  },\r\n  async [TYPE.RUN_A_BRAND] ({ commit, state, dispatch }, info) {\r\n    // return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const idBrand = info.id\r\n      const runOptions = info.runOptions\r\n      const marketplace = info.runOptions.marketplace\r\n      // let res = null\r\n      if (_.includes(marketplace, 'amazon')) {\r\n        await MW_API.post(URL.RUN_A_BRAND(idBrand), {\r\n          ...runOptions\r\n        })\r\n      } else if (marketplace === MarketPlacesResult.GOOGLE_SHOPPING) {\r\n        await MW_API.post(URL.RUN_A_GS_BRAND(idBrand), {\r\n          ...runOptions\r\n        })\r\n      }\r\n      // const { data } = res\r\n      // const brand = state.listBrands.items.find((e) => e._id === idBrand)\r\n      // if (brand) {\r\n      //   const index = _.findIndex(brand.activeMarketplaces, (info) => { return info.value === marketplace })\r\n      // for system mode handle mode report based task\r\n      // brand.activeMarketplaces[index].info.latest_job = {\r\n      //   status: data.status,\r\n      //   progress: data.progress\r\n      // }\r\n      // brand.activeMarketplaces[index].info.last_job_id = data.id\r\n      // brand.activeMarketplaces[index].info.last_job_status = data.status\r\n      // for system mode handle mode map based task\r\n      // brand.activeMarketplaces[index].info.last_job_status = data.status\r\n      // brand.activeMarketplaces[index].info.last_job_progress = 0\r\n      // if (data.system_mode_handling_mode === SystemJobHandlingMode.TASK_PER_MAP) {\r\n      //   brand.activeMarketplaces[index].info.last_job_status = data.status\r\n      //   brand.activeMarketplaces[index].info.last_job_progress = 0\r\n      // } else if (data.system_mode_handling_mode === SystemJobHandlingMode) {\r\n      //\r\n      // }\r\n      // }\r\n      // commit(TYPE.SET_LIST_BRANDS, state.listBrands)\r\n      // if (res.data.status === 'running') {\r\n      //   await dispatch(TYPE.REAL_TIME_STATUS_RUN, { idBrand })\r\n      // }\r\n      // console.log('end jobs', idBrand)\r\n      // resolve()\r\n    } catch (error) {\r\n      console.log('jobs', error)\r\n      throw _.get(error, 'response.data', error)\r\n    }\r\n  },\r\n  [TYPE.REAL_TIME_STATUS_RUN] (\r\n    { commit, state, dispatch },\r\n    { idBrand, reResolve, reReject }\r\n  ) {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (reResolve) {\r\n        resolve = reResolve\r\n        reject = reReject\r\n      }\r\n      try {\r\n        const res = await MW_API.get(URL.CHECK_STATUS_RUN_A_BRAND(idBrand))\r\n        const { data } = res\r\n        const brand = state.listBrands.items.find((e) => e.id === idBrand)\r\n        if (brand) {\r\n          brand.last_job = data.last_job\r\n          brand.last_job_id = data.last_job_id\r\n          commit(TYPE.SET_LIST_BRANDS, state.listBrands)\r\n          if (res.data.last_job.status === 'running') {\r\n            setTimeout(() => {\r\n              console.log(\r\n                idBrand,\r\n                'realtime get status for job',\r\n                new Date().getTime() / 1000\r\n              )\r\n              dispatch(TYPE.REAL_TIME_STATUS_RUN, {\r\n                idBrand,\r\n                reResolve: resolve,\r\n                reReject: reject\r\n              })\r\n            }, 4000)\r\n          } else {\r\n            resolve()\r\n          }\r\n        } else {\r\n          resolve()\r\n        }\r\n      } catch (error) {\r\n        console.log('realtime get status for job is error', error)\r\n        reject(error)\r\n      }\r\n    })\r\n  },\r\n  async [TYPE.REMOTE_EDIT_BRAND] ({ commit, state }, { id, params }) {\r\n    const brand = _.cloneDeep(params)\r\n    _.forEach(brand, (v, k) => {\r\n      if (fieldAccess.indexOf(k.toLowerCase()) === -1 && (!_.includes(k, 'amazon') && !_.includes(k, 'google'))) {\r\n        delete brand[k]\r\n      }\r\n    })\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await MW_API.put(URL.EDIT_AND_REMOVE_BRANDS(id), {\r\n          ...brand\r\n        })\r\n        resolve(res.data)\r\n      } catch (error) {\r\n        reject(error.response)\r\n      }\r\n    })\r\n  },\r\n  async [TYPE.REMOTE_POST_BRAND] ({ commit, state }, params) {\r\n    const brand = _.cloneDeep(params)\r\n    _.forEach(brand, (v, k) => {\r\n      if (fieldAccess.indexOf(k.toLowerCase()) === -1 && (!_.includes(k, 'amazon') && !_.includes(k, 'google'))) {\r\n        delete brand[k]\r\n      }\r\n    })\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await MW_API.post(URL.GET_POST_BRANDS(), {\r\n          ...brand\r\n        })\r\n        resolve(res.data)\r\n      } catch (error) {\r\n        reject(error.response)\r\n      }\r\n    })\r\n  },\r\n  async [TYPE.REMOTE_GET_LINK_DOWNLOAD_JOB] ({ commit, state, dispatch }, params) {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const { id, marketplace, source } = params\r\n        let query = `?brand_id=${id}&marketplace=${marketplace}`\r\n        if (source) {\r\n          query += `&source=${source}`\r\n        }\r\n        const res = await MW_API.get(`${URL.DOWNLOAD_JOB_BY_ID(id)}${query}`)\r\n        resolve(res.data)\r\n      } catch (error) {\r\n        reject(error.response.data)\r\n      }\r\n    })\r\n  },\r\n  [TYPE.FETCH_ONE_BRAND] ({ commit, state, dispatch }, id) {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await MW_API.get(URL.GET_ONE_BRAND_BY_ID(id))\r\n        commit(TYPE.SET_ONE_BRAND, res.data)\r\n        resolve()\r\n      } catch (error) {\r\n        reject(error.data)\r\n      }\r\n    })\r\n  },\r\n  async [TYPE.REMOTE_SEARCH_BRANDS] ({ commit }, payload) {\r\n    try {\r\n      const res = await MW_API.get(URL.GET_POST_BRANDS(), payload.search ? {\r\n        params: {\r\n          s: payload.search\r\n        }\r\n      } : {})\r\n      state.currentPage = 1\r\n      commit(TYPE.SET_LIST_BRANDS, res.data)\r\n    } catch (error) {\r\n      console.log(error.data)\r\n    }\r\n  },\r\n  async [TYPE.REMOTE_SORT_BRANDS] ({ commit, state }, payload) {\r\n    try {\r\n      const res = await MW_API.get(URL.GET_POST_BRANDS(), {\r\n        params: {\r\n          sort_dir: payload.sortDir,\r\n          sort_by: payload.sortBy,\r\n          ...(payload.search ? { s: payload.search } : {})\r\n        }\r\n      })\r\n      state.currentPage = 1\r\n      commit(TYPE.SET_LIST_BRANDS, res.data)\r\n    } catch (error) {\r\n      console.log('err', error.data)\r\n    }\r\n  },\r\n  resetFirebase ({ commit }, payload) {\r\n    if (payload.client_id) {\r\n      mwFirebaseJob.getFirebaseDb.ref(`/mw_job_status_${payload.client_id}`).off('value')\r\n    } else {\r\n      console.error('client_id is required to reset firebase')\r\n    }\r\n  },\r\n  [TYPE.LISTEN_TO_FIREBASE_EVENT_BRAND] ({ commit }, payload) {\r\n    if (payload.items[0].client_id) {\r\n      mwFirebaseJob.getFirebaseDb.ref(`/mw_job_status_${payload.items[0].client_id}`).off('value')\r\n      commit(TYPE.RESET_BRAND_RUN_NR)\r\n      mwFirebaseJob.getFirebaseDb.ref(`/mw_job_status_${payload.items[0].client_id}`).on('value',\r\n        function (snapshot) {\r\n          if (snapshot.val().brand_id) {\r\n            // console.log('mw_job_status', snapshot.val())\r\n            commit(TYPE.UPDATE_BRAND_PROGRESS, snapshot.val())\r\n          }\r\n        },\r\n        function (errorObject) {\r\n          console.log('The read failed: ' + errorObject.code)\r\n        })\r\n    } else {\r\n      console.error('client_id is required to get firebase')\r\n    }\r\n  },\r\n  [TYPE.SET_IS_DOWLOADING_BRAND] ({commit}, payload) {\r\n    commit(TYPE.SET_IS_DOWLOADING_BRAND, payload)\r\n  }\r\n}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  mutations,\r\n  actions\r\n}\r\n"]}]}