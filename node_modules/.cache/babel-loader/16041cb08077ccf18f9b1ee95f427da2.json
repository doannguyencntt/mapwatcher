{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\sellerEnforcements\\Contacts.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\sellerEnforcements\\Contacts.vue","mtime":1626264502302},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1626076746842},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1626076746842},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _ from 'lodash';\nimport { mapActions, mapGetters } from 'vuex';\nimport * as TYPE from '@/actionTypes.js';\nimport { required, email } from 'vuelidate/lib/validators';\nimport vToasted from '@/shared/notification';\nimport _nav from '@/_nav';\nexport default {\n  name: 'MWSellerEnforcementContacts',\n  data: function data() {\n    return {\n      contacts: [],\n      canShowErr: false,\n      fields: [{\n        key: 'email',\n        label: 'Email Address'\n      }, {\n        key: 'contact_name',\n        label: 'Contact Name'\n      }, {\n        key: 'job_title',\n        label: 'Job Title'\n      }, {\n        key: 'actions',\n        label: ''\n      }],\n      nav: _nav,\n      deleteContactData: null\n    };\n  },\n  mixins: [vToasted],\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    getOneSeller: \"mw/sellerEnforcements/\".concat(TYPE.GET_ONE_SELLER_ENFORCEMENT),\n    remoteEditSeller: \"mw/sellerEnforcements/\".concat(TYPE.REMOTE_EDIT_SELLER_ENFORCEMENT)\n  })), {}, {\n    removeRowAt: function removeRowAt(contact) {\n      this.contacts = _.filter(this.contacts, function (o) {\n        return o.index !== contact.index;\n      });\n      this.$bvModal.hide('delete-confirm');\n    },\n    editRowAt: function editRowAt(contact) {\n      var updatedContact = this.contacts[contact.index];\n      updatedContact.action = 'edit';\n      this.$set(this.contacts, contact.index, updatedContact);\n    },\n    addNewRow: function addNewRow() {\n      this.contacts.push({\n        email: '',\n        contact_name: '',\n        job_title: '',\n        action: 'edit',\n        index: this.contacts.length\n      });\n    },\n    saveContacts: function () {\n      var _saveContacts = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var dataSet;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.canShowErr = true;\n                this.$v.$touch();\n\n                if (!this.$v.$error) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 4:\n                _context.prev = 4;\n                dataSet = _.map(this.contacts, function (contact) {\n                  return {\n                    email: contact.email,\n                    contact_name: contact.contact_name,\n                    job_title: contact.job_title\n                  };\n                });\n                _context.next = 8;\n                return this.remoteEditSeller({\n                  params: {\n                    contacts: dataSet\n                  },\n                  id: this.seller.id\n                });\n\n              case 8:\n                this.vToasted('success', \"Seller \".concat(this.seller.name, \" has been updated successfully.\"));\n                this.contacts = _.map(this.contacts, function (contact) {\n                  contact.action = 'done';\n                  return contact;\n                });\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](4);\n                this.vToasted('error', _context.t0.data.message);\n\n              case 15:\n                this.canShowErr = false;\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[4, 12]]);\n      }));\n\n      function saveContacts() {\n        return _saveContacts.apply(this, arguments);\n      }\n\n      return saveContacts;\n    }(),\n    backToListSeller: function backToListSeller() {\n      this.$router.push({\n        name: 'MWListSellerEnforcements',\n        params: {\n          client_id: this.nav.clientId\n        }\n      });\n    }\n  }),\n  computed: _objectSpread({}, mapGetters({\n    getPermissions: \"mw/\".concat(TYPE.GET_PERMISSIONS)\n  })),\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var seller, _this;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (this.$route.params.id) {\n                _context2.next = 3;\n                break;\n              }\n\n              this.backToListSeller();\n              return _context2.abrupt(\"return\");\n\n            case 3:\n              _context2.prev = 3;\n              _context2.next = 6;\n              return this.getOneSeller(this.$route.params.id);\n\n            case 6:\n              seller = _context2.sent;\n              this.contacts = seller.contacts;\n              this.seller = seller;\n              _this = this;\n\n              _.each(this.contacts, function (contact, i) {\n                _this.contacts[i].index = i;\n                _this.contacts[i].action = 'done';\n              });\n\n              _context2.next = 17;\n              break;\n\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2[\"catch\"](3);\n              this.vToasted('error', \"Seller \".concat(this.$route.params.id, \" not exist\"));\n              this.backToListSeller();\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[3, 13]]);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  validations: {\n    contacts: {\n      $each: {\n        email: {\n          required: required,\n          email: email\n        },\n        contact_name: {\n          required: required\n        },\n        job_title: {\n          required: required\n        },\n        action: {\n          required: required\n        }\n      }\n    }\n  }\n};",null]}