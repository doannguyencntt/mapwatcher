{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\containers\\MWSidebarNav.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\containers\\MWSidebarNav.vue","mtime":1639556629429},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\nimport SidebarNav from \"./SidebarNav\";\nimport { mapGetters, mapActions } from 'vuex';\nimport _nav from '@/_nav';\nimport _ from 'lodash';\nimport each from 'lodash/each';\nimport has from 'lodash/has';\nimport * as TYPE from '@/actionTypes.js';\nexport default {\n  name: 'MWSidebar',\n  components: {\n    SidebarNav: SidebarNav\n  },\n  data: function data() {\n    return {};\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    planConfig: \"mw/\".concat(TYPE.GET_PLAN_CONFIG),\n    getPermissions: \"mw/\".concat(TYPE.GET_PERMISSIONS)\n  })), {}, {\n    nav: function nav() {\n      var _this = this;\n\n      // check permissions\n      var menuItems = [{\n        name: 'Home',\n        icon: 'icon-home',\n        to: {\n          name: 'ps-dashboard'\n        }\n      }];\n      var mwPermissions = this.getPermissions;\n\n      if (mwPermissions && mwPermissions.permissions) {\n        // render mw nav based on permission\n        var permissionsFromStore = mwPermissions.permissions;\n        var permissionsArray = Object.keys(permissionsFromStore).filter(function (k) {\n          return permissionsFromStore[k];\n        });\n\n        if (!_.isEmpty(permissionsArray)) {\n          each(_nav.items, function (item) {\n            if (_.size(item.permissions) === 0) {\n              // check the menu Seller Enforcements\n              if (_.has(item, 'to') && _.has(_this.planConfig, 'seller_enforcement_enabled')) {\n                if (item.to.name === 'MWListSellerEnforcements' && _this.planConfig.seller_enforcement_enabled === false) return;\n              }\n\n              if (_.has(item, 'to') && permissionsFromStore.seview === false) {\n                if (item.to.name === 'MWListSellerEnforcements') return;\n              } // check the menu MAP Pricing (gs) and planConfig google_shopping\n\n\n              if (_.has(item, 'to') && _.has(permissionsFromStore, 'gsmapman')) {\n                if (item.to.name === 'MWGSListMaps' && permissionsFromStore.gsmapman === false || item.to.name === 'MWGSListMaps' && _this.planConfig.plan_max_of_reports_with_google_shopping === 0) return;\n              } // check the menu MAP Pricing and planConfig amazon_marketplaces\n\n\n              if (_.has(item, 'to') && _.has(permissionsFromStore, 'mapman')) {\n                if (item.to.name === 'MWListMaps' && permissionsFromStore.mapman === false || item.to.name === 'MWListMaps' && _.isEmpty(_this.planConfig.allowed_amazon_marketplaces) || item.to.name === 'MWListMaps' && _this.planConfig.plan_max_of_reports_with_amazon === 0) return;\n              }\n\n              menuItems.push(item);\n            } else {\n              var filterPermissions = _.filter(item.permissions, function (permission) {\n                return !_.includes(permissionsArray, permission);\n              });\n\n              if (_.isEmpty(filterPermissions)) {\n                // check the menu SELLERS & INVESTIGATIONS\n                if (_.has(item, 'to') && _.has(_this.planConfig, 'seller_investigation_dashboard')) {\n                  var siPageList = ['MWSellerDashboardIndex', 'MWSIListings', 'MWSISellerList'];\n                  if (_.includes(siPageList, item.to.name) && _this.planConfig.seller_investigation_dashboard === false || _.includes(siPageList, item.to.name) && permissionsFromStore.siview === false) return;\n                }\n\n                if (_.has(item, 'meta') && _.has(_this.planConfig, 'seller_investigation_dashboard')) {\n                  if (item.meta.isSIParent && _this.planConfig.seller_investigation_dashboard === false || item.meta.isSIParent && permissionsFromStore.siview === false) return;\n                }\n\n                menuItems.push(item);\n              }\n            }\n          });\n          return menuItems;\n        } else if (mwPermissions && mwPermissions.module_enabled) {\n          each(_nav.items, function (item) {\n            if (_.size(item.permissions) === 0) {\n              menuItems.push(item);\n            }\n          });\n        }\n      }\n\n      return menuItems;\n    },\n    isSIPage: function isSIPage() {\n      var siPageUrlList = ['si-listings', 'sellers', 'listings'];\n\n      for (var _i = 0, _siPageUrlList = siPageUrlList; _i < _siPageUrlList.length; _i++) {\n        var item = _siPageUrlList[_i];\n        if (this.$route.path.includes(item)) return true;\n      }\n\n      return false;\n    }\n  }),\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    fetchPermissions: \"mw/\".concat(TYPE.FETCH_PERMISSIONS)\n  })), {}, {\n    fetchPermissionsWithCache: function () {\n      var _fetchPermissionsWithCache = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.fetchPermissions();\n\n              case 2:\n                this.gotoGlobalHomePageIfFailPlanConfig();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetchPermissionsWithCache() {\n        return _fetchPermissionsWithCache.apply(this, arguments);\n      }\n\n      return fetchPermissionsWithCache;\n    }(),\n    gotoGlobalHomePageIfFailPlanConfig: function gotoGlobalHomePageIfFailPlanConfig() {\n      if (this.planConfig.seller_enforcement_enabled === false && this.$route.path.includes('seller-enforcements')) {\n        this.$router.push({\n          'name': 'ps-dashboard'\n        });\n      } else if (this.planConfig.seller_investigation_dashboard === false && this.isSIPage) {\n        this.$router.push({\n          'name': 'ps-dashboard'\n        });\n      }\n    },\n    getShareToken: function getShareToken(payload) {\n      var token = has(payload, 'share_token') ? payload.share_token : null;\n      var config = token ? {\n        share_token: token\n      } : {};\n      return {\n        config: config\n      };\n    }\n  }),\n  watch: {\n    '$route.path': {\n      immediate: true,\n      handler: function () {\n        var _handler = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n          var _this2 = this;\n\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (!(this.$route.meta && this.$route.meta.reloadPermissions)) {\n                    _context2.next = 5;\n                    break;\n                  }\n\n                  _context2.next = 3;\n                  return this.fetchPermissions(this.getShareToken(this.$route.query)).then(function () {\n                    if (_this2.isSIPage || _this2.$route.path.includes('seller-enforcements')) {\n                      _this2.gotoGlobalHomePageIfFailPlanConfig();\n                    }\n                  });\n\n                case 3:\n                  _context2.next = 7;\n                  break;\n\n                case 5:\n                  _context2.next = 7;\n                  return this.fetchPermissionsWithCache();\n\n                case 7:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n\n        function handler() {\n          return _handler.apply(this, arguments);\n        }\n\n        return handler;\n      }()\n    }\n  } // async created() {\n  //   console.log('sidebar')\n  //   await this.fetchPermissions()\n  // },\n  // methods: {\n  //   ...mapActions({\n  //     fetchPermissions: `mw/${TYPE.FETCH_PERMISSIONS}`\n  //   })\n  // }\n\n};",{"version":3,"sources":["MWSidebarNav.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <SidebarNav :navItems=\"nav\"></SidebarNav>\r\n</template>\r\n\r\n<script>\r\nimport SidebarNav from './SidebarNav'\r\nimport { mapGetters, mapActions } from 'vuex'\r\nimport _nav from '@/_nav'\r\nimport _ from 'lodash'\r\nimport each from 'lodash/each'\r\nimport has from 'lodash/has'\r\nimport * as TYPE from '@/actionTypes.js'\r\n\r\nexport default {\r\n  name: 'MWSidebar',\r\n  components: {\r\n    SidebarNav\r\n  },\r\n  data() {\r\n    return {\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      planConfig: `mw/${TYPE.GET_PLAN_CONFIG}`,\r\n      getPermissions: `mw/${TYPE.GET_PERMISSIONS}`\r\n    }),\r\n    nav() {\r\n      // check permissions\r\n      let menuItems = [{\r\n        name: 'Home',\r\n        icon: 'icon-home',\r\n        to: { name: 'ps-dashboard' }\r\n      }]\r\n      const mwPermissions = this.getPermissions\r\n      if (mwPermissions && mwPermissions.permissions) {\r\n        // render mw nav based on permission\r\n        const permissionsFromStore = mwPermissions.permissions\r\n        let permissionsArray = Object.keys(permissionsFromStore).filter(k => permissionsFromStore[k])\r\n        if (!_.isEmpty(permissionsArray)) {\r\n          each(_nav.items, (item) => {\r\n            if (_.size(item.permissions) === 0) {\r\n              // check the menu Seller Enforcements\r\n              if (_.has(item, 'to') && _.has(this.planConfig, 'seller_enforcement_enabled')) {\r\n                if (item.to.name === 'MWListSellerEnforcements' && this.planConfig.seller_enforcement_enabled === false) return\r\n              }\r\n              if (_.has(item, 'to') && permissionsFromStore.seview === false) {\r\n                if (item.to.name === 'MWListSellerEnforcements') return\r\n              }\r\n              // check the menu MAP Pricing (gs) and planConfig google_shopping\r\n              if (_.has(item, 'to') && _.has(permissionsFromStore, 'gsmapman')) {\r\n                if ((item.to.name === 'MWGSListMaps' && permissionsFromStore.gsmapman === false) || (item.to.name === 'MWGSListMaps' && this.planConfig.plan_max_of_reports_with_google_shopping === 0)) return\r\n              }\r\n              // check the menu MAP Pricing and planConfig amazon_marketplaces\r\n              if (_.has(item, 'to') && _.has(permissionsFromStore, 'mapman')) {\r\n                if ((item.to.name === 'MWListMaps' && permissionsFromStore.mapman === false) || (item.to.name === 'MWListMaps' && _.isEmpty(this.planConfig.allowed_amazon_marketplaces)) || (item.to.name === 'MWListMaps' && this.planConfig.plan_max_of_reports_with_amazon === 0)) return\r\n              }\r\n              menuItems.push(item)\r\n            } else {\r\n              const filterPermissions = _.filter(item.permissions, (permission) => {\r\n                return !_.includes(permissionsArray, permission)\r\n              })\r\n              if (_.isEmpty(filterPermissions)) {\r\n                // check the menu SELLERS & INVESTIGATIONS\r\n                if (_.has(item, 'to') && _.has(this.planConfig, 'seller_investigation_dashboard')) {\r\n                  const siPageList = ['MWSellerDashboardIndex', 'MWSIListings', 'MWSISellerList']\r\n                  if ((_.includes(siPageList, item.to.name) && this.planConfig.seller_investigation_dashboard === false) || (_.includes(siPageList, item.to.name) && permissionsFromStore.siview === false)) return\r\n                }\r\n                if (_.has(item, 'meta') && _.has(this.planConfig, 'seller_investigation_dashboard')) {\r\n                  if ((item.meta.isSIParent && this.planConfig.seller_investigation_dashboard === false) || (item.meta.isSIParent && permissionsFromStore.siview === false)) return\r\n                }\r\n                menuItems.push(item)\r\n              }\r\n            }\r\n          })\r\n          return menuItems\r\n        } else if (mwPermissions && mwPermissions.module_enabled) {\r\n          each(_nav.items, (item) => {\r\n            if (_.size(item.permissions) === 0) {\r\n              menuItems.push(item)\r\n            }\r\n          })\r\n        }\r\n      }\r\n      return menuItems\r\n    },\r\n    isSIPage () {\r\n      const siPageUrlList = ['si-listings', 'sellers', 'listings']\r\n      for (let item of siPageUrlList) {\r\n        if (this.$route.path.includes(item)) return true\r\n      }\r\n      return false\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      fetchPermissions: `mw/${TYPE.FETCH_PERMISSIONS}`\r\n    }),\r\n    async fetchPermissionsWithCache() {\r\n      await this.fetchPermissions()\r\n      this.gotoGlobalHomePageIfFailPlanConfig()\r\n    },\r\n    gotoGlobalHomePageIfFailPlanConfig() {\r\n      if (this.planConfig.seller_enforcement_enabled === false && this.$route.path.includes('seller-enforcements')) {\r\n        this.$router.push({'name': 'ps-dashboard'})\r\n      } else if (this.planConfig.seller_investigation_dashboard === false && this.isSIPage) {\r\n        this.$router.push({'name': 'ps-dashboard'})\r\n      }\r\n    },\r\n    getShareToken(payload) {\r\n      const token = has(payload, 'share_token') ? payload.share_token : null\r\n      const config = token ? { share_token: token } : {}\r\n      return { config: config }\r\n    }\r\n  },\r\n  watch: {\r\n    '$route.path': {\r\n      immediate: true,\r\n      async handler() {\r\n        if (this.$route.meta && this.$route.meta.reloadPermissions) {\r\n          await this.fetchPermissions(this.getShareToken(this.$route.query)).then(() => {\r\n            if (this.isSIPage || this.$route.path.includes('seller-enforcements')) {\r\n              this.gotoGlobalHomePageIfFailPlanConfig()\r\n            }\r\n          })\r\n        } else {\r\n          await this.fetchPermissionsWithCache()\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // async created() {\r\n  //   console.log('sidebar')\r\n  //   await this.fetchPermissions()\r\n  // },\r\n  // methods: {\r\n  //   ...mapActions({\r\n  //     fetchPermissions: `mw/${TYPE.FETCH_PERMISSIONS}`\r\n  //   })\r\n  // }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.sidebar {\r\n  /deep/ .router-link-active {\r\n    color: #fff;\r\n    background: #3a4248;\r\n    .nav-icon {\r\n      color: #20a8d8;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/containers"}]}