{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\common\\PermissionsMixin.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\common\\PermissionsMixin.vue","mtime":1630397532365},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["// import { mapActions } from 'vuex'\n// import { FETCH_PERMISSIONS } from '@/actionTypes.js'\n// import has from 'lodash/has'\nexport default {\n  methods: {\n    // ...mapActions({\n    //   fetchPermissions: `mw/${FETCH_PERMISSIONS}`\n    // }),\n    gotoGlobalHomePageIfNoPermission: function gotoGlobalHomePageIfNoPermission(permissions) {\n      if (!permissions.siview) {\n        this.$router.push({\n          'name': 'ps-dashboard'\n        });\n      }\n    }\n  } // created() {\n  //   const getShareToken = (payload) => {\n  //     const token = has(payload, 'share_token') ? payload.share_token : null\n  //     const config = token ? { share_token: token } : {}\n  //     return { config: config }\n  //   }\n  //   if (this.$route.meta && this.$route.meta.reloadPermissions) {\n  //     this.fetchPermissions(getShareToken(this.$route.query))\n  //   }\n  // }\n\n};",{"version":3,"sources":["PermissionsMixin.vue"],"names":[],"mappings":"AACA;AACA;AACA;AAEA,eAAA;AACA,EAAA,OAAA,EAAA;AACA;AACA;AACA;AACA,IAAA,gCAAA,EAAA,0CAAA,WAAA,EAAA;AACA,UAAA,CAAA,WAAA,CAAA,MAAA,EAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA;AAAA,kBAAA;AAAA,SAAA;AACA;AACA;AARA,GADA,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AApBA,CAAA","sourcesContent":["<script>\r\n// import { mapActions } from 'vuex'\r\n// import { FETCH_PERMISSIONS } from '@/actionTypes.js'\r\n// import has from 'lodash/has'\r\n\r\nexport default {\r\n  methods: {\r\n    // ...mapActions({\r\n    //   fetchPermissions: `mw/${FETCH_PERMISSIONS}`\r\n    // }),\r\n    gotoGlobalHomePageIfNoPermission: function (permissions) {\r\n      if (!permissions.siview) {\r\n        this.$router.push({'name': 'ps-dashboard'})\r\n      }\r\n    }\r\n  }\r\n  // created() {\r\n  //   const getShareToken = (payload) => {\r\n  //     const token = has(payload, 'share_token') ? payload.share_token : null\r\n  //     const config = token ? { share_token: token } : {}\r\n  //     return { config: config }\r\n  //   }\r\n  //   if (this.$route.meta && this.$route.meta.reloadPermissions) {\r\n  //     this.fetchPermissions(getShareToken(this.$route.query))\r\n  //   }\r\n  // }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components/common"}]}