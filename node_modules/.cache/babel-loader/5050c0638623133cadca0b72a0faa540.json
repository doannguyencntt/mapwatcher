{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Project\\CBPO\\plat-mw-web\\src\\store\\modules\\page\\brands\\index.js","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\store\\modules\\page\\brands\\index.js","mtime":1627381226885},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1626076746842},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1626076679949}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.array.find\";\nimport _toConsumableArray from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.array.find-index\";\nimport _defineProperty from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _getters, _mutations, _actions;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as TYPE from '@/actionTypes'; // import { promiseOneBrand } from './_dataConfig'\n\nimport _ from 'lodash';\nimport { MW_API } from '@/service/';\nimport * as URL from '@/service/_constant'; // import { ucfirst } from '@/shared/utils'\n\nimport * as utils from '@/shared/utils';\nimport mwFirebaseJob from '@/service/firebaseSvc';\nimport { MarketPlacesResult } from '@/constants/Report'; // import Vue from 'vue'\n\nvar fieldAccess = ['active', 'marketplaces', 'list_authorized_seller_names', 'logo', 'name_in_dashboard', 'price_manager', 'ignore_screenshot', 'fulfillment', 'order', 'ignore_price_tracking', 'show_upc_in_dashboard', 'priority', 'watch_for_used_items', 'separate_mfn_fba_authorized_seller', 'fba_authorized_seller_names', 'mfn_authorized_seller_names', 'true_map_report'];\nvar state = {\n  listBrands: {\n    items: [],\n    total: 0\n  },\n  brand: {\n    price_manager: {},\n    active: false\n  },\n  listReportMarketplaceHistory: {},\n  tempBrand: {},\n  defaultParams: {\n    page: 1,\n    limit: 10,\n    s: null,\n    sort_by: 'name_in_dashboard',\n    sort_dir: 'asc'\n  },\n  defaultParamsReportMarketplaceHistory: {\n    page: 1,\n    limit: 10,\n    brand_id: null,\n    marketplace: null\n  },\n  isLoad: false,\n  isGSLoad: false,\n  runBrandNr: 0,\n  getValidAmazonBrand: [],\n  getValidAmazonCABrand: [],\n  getValidGSBrand: []\n};\nvar getters = (_getters = {}, _defineProperty(_getters, TYPE.GET_LIST_BRANDS, function (state) {\n  return state.listBrands;\n}), _defineProperty(_getters, TYPE.GET_ONE_BRAND, function (state) {\n  return state.brand;\n}), _defineProperty(_getters, TYPE.GET_BRAND_LOADING, function (state) {\n  return state.isLoad;\n}), _defineProperty(_getters, TYPE.GET_GS_BRAND_LOADING, function (state) {\n  return state.isGSLoad;\n}), _defineProperty(_getters, TYPE.GET_DEFAULT_PARAMS, function (state) {\n  return state.defaultParams;\n}), _defineProperty(_getters, TYPE.GET_VALID_AMAZON_BRANDS, function (state) {\n  return state.getValidAmazonBrand;\n}), _defineProperty(_getters, TYPE.GET_VALID_AMAZON_CA_BRANDS, function (state) {\n  return state.getValidAmazonCABrand;\n}), _defineProperty(_getters, TYPE.GET_VALID_GS_BRANDS, function (state) {\n  return state.getValidGSBrand;\n}), _defineProperty(_getters, TYPE.GET_REPORT_MARKETPLACE_HISTORY, function (state) {\n  return state.listReportMarketplaceHistory;\n}), _defineProperty(_getters, TYPE.GET_REPORT_MARKETPLACE_HISTORY_DEFAULT_PARAMS, function (state) {\n  return state.defaultParamsReportMarketplaceHistory;\n}), _getters);\n\nvar getShareToken = function getShareToken(payload) {\n  var token = _.has(payload, 'share_token') ? payload.share_token : null;\n\n  if (token) {\n    payload = _.omit(payload, ['share_token']);\n  }\n\n  var config = token ? {\n    share_token: token\n  } : {};\n  return {\n    config: config,\n    oriPayload: payload\n  };\n};\n\nvar mutations = (_mutations = {}, _defineProperty(_mutations, TYPE.SET_LIST_BRANDS, function (state, payload) {\n  state.listBrands = _objectSpread({}, payload);\n}), _defineProperty(_mutations, TYPE.SET_LIST_REPORT_MARKETPLACE_HISTORY, function (state, payload) {\n  state.listReportMarketplaceHistory = _objectSpread({}, payload);\n}), _defineProperty(_mutations, TYPE.GET_VALID_AMAZON_BRANDS, function (state, payload) {\n  state.getValidAmazonBrand = _objectSpread({}, payload);\n}), _defineProperty(_mutations, TYPE.GET_VALID_AMAZON_CA_BRANDS, function (state, payload) {\n  state.getValidAmazonCABrand = _objectSpread({}, payload);\n}), _defineProperty(_mutations, TYPE.GET_VALID_GS_BRANDS, function (state, payload) {\n  state.getValidGSBrand = _objectSpread({}, payload);\n}), _defineProperty(_mutations, TYPE.SET_ONE_BRAND, function (state, payload) {\n  state.brand = payload;\n}), _defineProperty(_mutations, TYPE.SET_BRAND_LOADING, function (state, payload) {\n  state.isLoad = payload;\n}), _defineProperty(_mutations, TYPE.SET_GS_BRAND_LOADING, function (state, payload) {\n  state.isGSLoad = payload;\n}), _defineProperty(_mutations, TYPE.UPDATE_BRAND_PROGRESS, function (state, payload) {\n  // console.log('before', state.items)\n  var index = state.listBrands.items.findIndex(function (item) {\n    return item._id === payload.brand_id;\n  });\n\n  if (index !== -1) {\n    if (state.runBrandNr > 0) {\n      var indexItem = _.findIndex(state.listBrands.items[index].activeMarketplaces, function (info) {\n        return info.value === payload.marketplace;\n      });\n\n      if (indexItem !== -1) {\n        // use this for system mode handle job is report based job\n        // state.listBrands.items[index].activeMarketplaces[indexItem].info.latest_job = {\n        //   status: payload.status,\n        //   progress: payload.progress\n        // }\n        state.listBrands.items[index].activeMarketplaces[indexItem].info.last_job_status = payload.status; // use this for system mode handle job is map based job\n\n        state.listBrands.items[index].activeMarketplaces[indexItem].info.last_job_progress = payload.progress;\n\n        if (typeof payload.number_processed_map === 'number') {\n          state.listBrands.items[index].activeMarketplaces[indexItem].info.number_processed_map = payload.number_processed_map;\n        }\n\n        if (typeof payload.number_total_map === 'number') {\n          state.listBrands.items[index].activeMarketplaces[indexItem].info.number_total_map = payload.number_total_map;\n        }\n\n        console.log('brand is updated');\n      }\n    } else {\n      state.runBrandNr = state.runBrandNr + 1;\n      console.log('not update - brand');\n    }\n  } // console.log('after', state.items)\n\n}), _defineProperty(_mutations, TYPE.RESET_BRAND_RUN_NR, function (state, payload) {\n  state.runBrandNr = 0;\n}), _defineProperty(_mutations, TYPE.SET_IS_DOWLOADING_BRAND, function (state, payload) {\n  // Vue.$set(state.listBrands.items[payload.index].activeMarketplaces[payload.indexActiveMarketplaces], 'isLoad', payload.isLoad)\n  state.listBrands.items[payload.index].activeMarketplaces[payload.indexActiveMarketplaces].isLoad = payload.isLoad;\n  console.log('state.listBrands.items[payload.index].activeMarketplaces[payload.indexActiveMarketplaces].isLoad', state.listBrands.items[payload.index].activeMarketplaces[payload.indexActiveMarketplaces].isLoad);\n}), _mutations);\nvar actions = (_actions = {}, _defineProperty(_actions, TYPE.GET_VALID_AMAZON_BRANDS, function (_ref, params) {\n  var commit = _ref.commit,\n      dispatch = _ref.dispatch;\n  params = _.assign({}, state.getValidAmazonBrand, params);\n  commit(TYPE.SET_BRAND_LOADING, true);\n  return new Promise( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resolve, reject) {\n      var _getShareToken, config, oriPayload, res;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _getShareToken = getShareToken(params), config = _getShareToken.config, oriPayload = _getShareToken.oriPayload;\n              _context.next = 4;\n              return MW_API.get(\"\".concat(URL.GET_VALID_AMAZON_BRAND(), \"?\").concat(utils.buildUrlQueryString(oriPayload)), config);\n\n            case 4:\n              res = _context.sent;\n              commit(TYPE.GET_VALID_AMAZON_BRANDS, res.data);\n              commit(TYPE.SET_BRAND_LOADING, false);\n              resolve(res.data);\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              reject(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.GET_VALID_AMAZON_CA_BRANDS, function (_ref3, params) {\n  var commit = _ref3.commit,\n      dispatch = _ref3.dispatch;\n  params = _.assign({}, state.getValidAmazonCABrand, params);\n  commit(TYPE.SET_BRAND_LOADING, true);\n  return new Promise( /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(resolve, reject) {\n      var _getShareToken2, config, oriPayload, res;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _getShareToken2 = getShareToken(params), config = _getShareToken2.config, oriPayload = _getShareToken2.oriPayload;\n              _context2.next = 4;\n              return MW_API.get(\"\".concat(URL.GET_VALID_AMAZON_CA_BRAND(), \"?\").concat(utils.buildUrlQueryString(oriPayload)), config);\n\n            case 4:\n              res = _context2.sent;\n              commit(TYPE.GET_VALID_AMAZON_CA_BRANDS, res.data);\n              commit(TYPE.SET_BRAND_LOADING, false);\n              resolve(res.data);\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              reject(_context2.t0);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 10]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.GET_VALID_GS_BRANDS, function (_ref5, params) {\n  var commit = _ref5.commit,\n      dispatch = _ref5.dispatch;\n  params = _.assign({}, state.getValidGSBrand, params);\n  commit(TYPE.SET_BRAND_LOADING, true);\n  return new Promise( /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(resolve, reject) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return MW_API.get(\"\".concat(URL.GET_VALID_GS_BRAND(), \"?\").concat(utils.buildUrlQueryString(params)));\n\n            case 3:\n              res = _context3.sent;\n              commit(TYPE.GET_VALID_GS_BRANDS, res.data);\n              commit(TYPE.SET_BRAND_LOADING, false);\n              resolve(res.data);\n              _context3.next = 12;\n              break;\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              reject(_context3.t0);\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 9]]);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.FETCH_LIST_BRANDS, function (_ref7, params) {\n  var commit = _ref7.commit,\n      dispatch = _ref7.dispatch;\n  params = _.assign({}, state.defaultParams, params);\n  commit(TYPE.SET_BRAND_LOADING, true);\n  return new Promise( /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(resolve, reject) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return MW_API.get(\"\".concat(URL.GET_POST_BRANDS(), \"?\").concat(utils.buildUrlQueryString(params)));\n\n            case 3:\n              res = _context4.sent;\n\n              _.forEach(res.data.items, function (item, index) {\n                item.activeMarketplaces = [];\n\n                var keys = _.keys(item.marketplaces);\n\n                _.forEach(keys, function (key) {\n                  if (item.marketplaces[key]) {\n                    item[\"marketplace_\".concat(key)].isLoad = false;\n                    item.activeMarketplaces.push({\n                      key: key,\n                      value: _.includes(key, 'amazon') ? key.replace(/[_]/g, '.') : key,\n                      label: _.includes(key, 'amazon') ? _.upperFirst(key.replace(/[_]/g, '.')) : _.startCase(_.toLower(key.replace(/[_]/g, ' '))),\n                      info: item[\"marketplace_\".concat(key)]\n                    }); // TODO we already migrate data if marketplace is enable - script will create info with field marketplace_${marketplace_field} so i think case null will not happen\n                  }\n                });\n              });\n\n              commit(TYPE.SET_LIST_BRANDS, res.data);\n              commit(TYPE.SET_BRAND_LOADING, false);\n              dispatch(TYPE.LISTEN_TO_FIREBASE_EVENT_BRAND, res.data);\n              resolve(res.data);\n              _context4.next = 14;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](0);\n              // console.log(error)\n              reject(_context4.t0);\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 11]]);\n    }));\n\n    return function (_x7, _x8) {\n      return _ref8.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.RESET_BRANDS, function (_ref9) {\n  var commit = _ref9.commit;\n\n  try {\n    var data = {\n      items: [],\n      total: 0\n    };\n    commit(TYPE.SET_LIST_BRANDS, data);\n  } catch (error) {\n    console.log(error);\n  }\n}), _defineProperty(_actions, TYPE.FETCH_LIST_REPORT_MARKETPLACE_HISTORY, function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(_ref10, params) {\n    var commit, res;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            commit = _ref10.commit;\n            params = _.assign({}, state.defaultParamsReportMarketplaceHistory, params);\n            _context5.next = 4;\n            return MW_API.get(\"\".concat(URL.GET_BRAND_MARKETPLACE_HISTORY(), \"?\").concat(utils.buildUrlQueryString(params)));\n\n          case 4:\n            res = _context5.sent;\n            commit(TYPE.SET_LIST_REPORT_MARKETPLACE_HISTORY, res.data);\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref11.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.REMOVE_BRANDS, function () {\n  var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(_ref12, id) {\n    var state;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            state = _ref12.state;\n            return _context7.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n              var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(resolve, reject) {\n                var res;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        _context6.prev = 0;\n                        _context6.next = 3;\n                        return MW_API.delete(URL.EDIT_AND_REMOVE_BRANDS(id));\n\n                      case 3:\n                        res = _context6.sent;\n\n                        _.remove(state.listBrands.items, function (d) {\n                          return d._id === id;\n                        });\n\n                        state.listBrands.items = _toConsumableArray(state.listBrands.items);\n                        resolve(res.data);\n                        _context6.next = 12;\n                        break;\n\n                      case 9:\n                        _context6.prev = 9;\n                        _context6.t0 = _context6[\"catch\"](0);\n                        reject(_context6.t0.response);\n\n                      case 12:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6, null, [[0, 9]]);\n              }));\n\n              return function (_x13, _x14) {\n                return _ref14.apply(this, arguments);\n              };\n            }()));\n\n          case 2:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function (_x11, _x12) {\n    return _ref13.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.RUN_A_BRAND, function () {\n  var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(_ref15, info) {\n    var commit, state, dispatch, idBrand, runOptions, marketplace;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            commit = _ref15.commit, state = _ref15.state, dispatch = _ref15.dispatch;\n            _context8.prev = 1;\n            idBrand = info.id;\n            runOptions = info.runOptions;\n            marketplace = info.runOptions.marketplace; // let res = null\n\n            if (!_.includes(marketplace, 'amazon')) {\n              _context8.next = 10;\n              break;\n            }\n\n            _context8.next = 8;\n            return MW_API.post(URL.RUN_A_BRAND(idBrand), _objectSpread({}, runOptions));\n\n          case 8:\n            _context8.next = 13;\n            break;\n\n          case 10:\n            if (!(marketplace === MarketPlacesResult.GOOGLE_SHOPPING)) {\n              _context8.next = 13;\n              break;\n            }\n\n            _context8.next = 13;\n            return MW_API.post(URL.RUN_A_GS_BRAND(idBrand), _objectSpread({}, runOptions));\n\n          case 13:\n            _context8.next = 19;\n            break;\n\n          case 15:\n            _context8.prev = 15;\n            _context8.t0 = _context8[\"catch\"](1);\n            console.log('jobs', _context8.t0);\n            throw _.get(_context8.t0, 'response.data', _context8.t0);\n\n          case 19:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[1, 15]]);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref16.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.REAL_TIME_STATUS_RUN, function (_ref17, _ref18) {\n  var commit = _ref17.commit,\n      state = _ref17.state,\n      dispatch = _ref17.dispatch;\n  var idBrand = _ref18.idBrand,\n      reResolve = _ref18.reResolve,\n      reReject = _ref18.reReject;\n  return new Promise( /*#__PURE__*/function () {\n    var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(resolve, reject) {\n      var res, data, brand;\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              if (reResolve) {\n                resolve = reResolve;\n                reject = reReject;\n              }\n\n              _context9.prev = 1;\n              _context9.next = 4;\n              return MW_API.get(URL.CHECK_STATUS_RUN_A_BRAND(idBrand));\n\n            case 4:\n              res = _context9.sent;\n              data = res.data;\n              brand = state.listBrands.items.find(function (e) {\n                return e.id === idBrand;\n              });\n\n              if (brand) {\n                brand.last_job = data.last_job;\n                brand.last_job_id = data.last_job_id;\n                commit(TYPE.SET_LIST_BRANDS, state.listBrands);\n\n                if (res.data.last_job.status === 'running') {\n                  setTimeout(function () {\n                    console.log(idBrand, 'realtime get status for job', new Date().getTime() / 1000);\n                    dispatch(TYPE.REAL_TIME_STATUS_RUN, {\n                      idBrand: idBrand,\n                      reResolve: resolve,\n                      reReject: reject\n                    });\n                  }, 4000);\n                } else {\n                  resolve();\n                }\n              } else {\n                resolve();\n              }\n\n              _context9.next = 14;\n              break;\n\n            case 10:\n              _context9.prev = 10;\n              _context9.t0 = _context9[\"catch\"](1);\n              console.log('realtime get status for job is error', _context9.t0);\n              reject(_context9.t0);\n\n            case 14:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[1, 10]]);\n    }));\n\n    return function (_x17, _x18) {\n      return _ref19.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.REMOTE_EDIT_BRAND, function () {\n  var _ref22 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(_ref20, _ref21) {\n    var commit, state, id, params, brand;\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            commit = _ref20.commit, state = _ref20.state;\n            id = _ref21.id, params = _ref21.params;\n            brand = _.cloneDeep(params);\n\n            _.forEach(brand, function (v, k) {\n              if (fieldAccess.indexOf(k.toLowerCase()) === -1 && !_.includes(k, 'amazon') && !_.includes(k, 'google')) {\n                delete brand[k];\n              }\n            });\n\n            return _context11.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n              var _ref23 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(resolve, reject) {\n                var res;\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        _context10.prev = 0;\n                        _context10.next = 3;\n                        return MW_API.put(URL.EDIT_AND_REMOVE_BRANDS(id), _objectSpread({}, brand));\n\n                      case 3:\n                        res = _context10.sent;\n                        resolve(res.data);\n                        _context10.next = 10;\n                        break;\n\n                      case 7:\n                        _context10.prev = 7;\n                        _context10.t0 = _context10[\"catch\"](0);\n                        reject(_context10.t0.response);\n\n                      case 10:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10, null, [[0, 7]]);\n              }));\n\n              return function (_x21, _x22) {\n                return _ref23.apply(this, arguments);\n              };\n            }()));\n\n          case 5:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n\n  return function (_x19, _x20) {\n    return _ref22.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.REMOTE_POST_BRAND, function () {\n  var _ref25 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(_ref24, params) {\n    var commit, state, brand;\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            commit = _ref24.commit, state = _ref24.state;\n            brand = _.cloneDeep(params);\n\n            _.forEach(brand, function (v, k) {\n              if (fieldAccess.indexOf(k.toLowerCase()) === -1 && !_.includes(k, 'amazon') && !_.includes(k, 'google')) {\n                delete brand[k];\n              }\n            });\n\n            return _context13.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n              var _ref26 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(resolve, reject) {\n                var res;\n                return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                  while (1) {\n                    switch (_context12.prev = _context12.next) {\n                      case 0:\n                        _context12.prev = 0;\n                        _context12.next = 3;\n                        return MW_API.post(URL.GET_POST_BRANDS(), _objectSpread({}, brand));\n\n                      case 3:\n                        res = _context12.sent;\n                        resolve(res.data);\n                        _context12.next = 10;\n                        break;\n\n                      case 7:\n                        _context12.prev = 7;\n                        _context12.t0 = _context12[\"catch\"](0);\n                        reject(_context12.t0.response);\n\n                      case 10:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }\n                }, _callee12, null, [[0, 7]]);\n              }));\n\n              return function (_x25, _x26) {\n                return _ref26.apply(this, arguments);\n              };\n            }()));\n\n          case 4:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n\n  return function (_x23, _x24) {\n    return _ref25.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.REMOTE_GET_LINK_DOWNLOAD_JOB, function () {\n  var _ref28 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(_ref27, params) {\n    var commit, state, dispatch;\n    return regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            commit = _ref27.commit, state = _ref27.state, dispatch = _ref27.dispatch;\n            return _context15.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n              var _ref29 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(resolve, reject) {\n                var id, marketplace, source, query, res;\n                return regeneratorRuntime.wrap(function _callee14$(_context14) {\n                  while (1) {\n                    switch (_context14.prev = _context14.next) {\n                      case 0:\n                        _context14.prev = 0;\n                        id = params.id, marketplace = params.marketplace, source = params.source;\n                        query = \"?brand_id=\".concat(id, \"&marketplace=\").concat(marketplace);\n\n                        if (source) {\n                          query += \"&source=\".concat(source);\n                        }\n\n                        _context14.next = 6;\n                        return MW_API.get(\"\".concat(URL.DOWNLOAD_JOB_BY_ID(id)).concat(query));\n\n                      case 6:\n                        res = _context14.sent;\n                        resolve(res.data);\n                        _context14.next = 13;\n                        break;\n\n                      case 10:\n                        _context14.prev = 10;\n                        _context14.t0 = _context14[\"catch\"](0);\n                        reject(_context14.t0.response.data);\n\n                      case 13:\n                      case \"end\":\n                        return _context14.stop();\n                    }\n                  }\n                }, _callee14, null, [[0, 10]]);\n              }));\n\n              return function (_x29, _x30) {\n                return _ref29.apply(this, arguments);\n              };\n            }()));\n\n          case 2:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15);\n  }));\n\n  return function (_x27, _x28) {\n    return _ref28.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.FETCH_ONE_BRAND, function (_ref30, id) {\n  var commit = _ref30.commit,\n      state = _ref30.state,\n      dispatch = _ref30.dispatch;\n  return new Promise( /*#__PURE__*/function () {\n    var _ref31 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(resolve, reject) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.prev = 0;\n              _context16.next = 3;\n              return MW_API.get(URL.GET_ONE_BRAND_BY_ID(id));\n\n            case 3:\n              res = _context16.sent;\n              commit(TYPE.SET_ONE_BRAND, res.data);\n              resolve();\n              _context16.next = 11;\n              break;\n\n            case 8:\n              _context16.prev = 8;\n              _context16.t0 = _context16[\"catch\"](0);\n              reject(_context16.t0.data);\n\n            case 11:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16, null, [[0, 8]]);\n    }));\n\n    return function (_x31, _x32) {\n      return _ref31.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.REMOTE_SEARCH_BRANDS, function () {\n  var _ref33 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(_ref32, payload) {\n    var commit, res;\n    return regeneratorRuntime.wrap(function _callee17$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            commit = _ref32.commit;\n            _context17.prev = 1;\n            _context17.next = 4;\n            return MW_API.get(URL.GET_POST_BRANDS(), payload.search ? {\n              params: {\n                s: payload.search\n              }\n            } : {});\n\n          case 4:\n            res = _context17.sent;\n            state.currentPage = 1;\n            commit(TYPE.SET_LIST_BRANDS, res.data);\n            _context17.next = 12;\n            break;\n\n          case 9:\n            _context17.prev = 9;\n            _context17.t0 = _context17[\"catch\"](1);\n            console.log(_context17.t0.data);\n\n          case 12:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, _callee17, null, [[1, 9]]);\n  }));\n\n  return function (_x33, _x34) {\n    return _ref33.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.REMOTE_SORT_BRANDS, function () {\n  var _ref35 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(_ref34, payload) {\n    var commit, state, res;\n    return regeneratorRuntime.wrap(function _callee18$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            commit = _ref34.commit, state = _ref34.state;\n            _context18.prev = 1;\n            _context18.next = 4;\n            return MW_API.get(URL.GET_POST_BRANDS(), {\n              params: _objectSpread({\n                sort_dir: payload.sortDir,\n                sort_by: payload.sortBy\n              }, payload.search ? {\n                s: payload.search\n              } : {})\n            });\n\n          case 4:\n            res = _context18.sent;\n            state.currentPage = 1;\n            commit(TYPE.SET_LIST_BRANDS, res.data);\n            _context18.next = 12;\n            break;\n\n          case 9:\n            _context18.prev = 9;\n            _context18.t0 = _context18[\"catch\"](1);\n            console.log('err', _context18.t0.data);\n\n          case 12:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, _callee18, null, [[1, 9]]);\n  }));\n\n  return function (_x35, _x36) {\n    return _ref35.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, \"resetFirebase\", function resetFirebase(_ref36, payload) {\n  var commit = _ref36.commit;\n  mwFirebaseJob.getFirebaseDb.ref('/mw_job_status').off('value');\n}), _defineProperty(_actions, TYPE.LISTEN_TO_FIREBASE_EVENT_BRAND, function (_ref37, payload) {\n  var commit = _ref37.commit;\n  mwFirebaseJob.getFirebaseDb.ref('/mw_job_status').off('value');\n  commit(TYPE.RESET_BRAND_RUN_NR);\n  mwFirebaseJob.getFirebaseDb.ref('/mw_job_status').on('value', function (snapshot) {\n    if (snapshot.val().brand_id) {\n      // console.log('mw_job_status', snapshot.val())\n      commit(TYPE.UPDATE_BRAND_PROGRESS, snapshot.val());\n    }\n  }, function (errorObject) {\n    console.log('The read failed: ' + errorObject.code);\n  });\n}), _defineProperty(_actions, TYPE.SET_IS_DOWLOADING_BRAND, function (_ref38, payload) {\n  var commit = _ref38.commit;\n  commit(TYPE.SET_IS_DOWLOADING_BRAND, payload);\n}), _actions);\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",null]}