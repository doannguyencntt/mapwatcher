{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\maps\\Import.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\maps\\Import.vue","mtime":1631532115725},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import _ from 'lodash'\nimport { mapActions, mapGetters } from 'vuex';\nimport * as TYPE from '@/actionTypes.js';\nimport { required } from 'vuelidate/lib/validators';\nimport vToasted from '@/shared/notification';\nimport _nav from '@/_nav';\nimport Datepicker from 'vuejs-datepicker';\nimport * as moment from 'moment/moment';\nexport default {\n  data: function data() {\n    return {\n      date_started: null,\n      file_in_use: null,\n      file: null,\n      flag: {\n        processed: false\n      },\n      reports: {\n        items: [],\n        isLoad: true\n      },\n      nav: _nav\n    };\n  },\n  mixins: [vToasted],\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    getProcess: \"mw/maps/\".concat(TYPE.GET_PROCESS_MAPS)\n  })), {}, {\n    sharableRoute: function sharableRoute() {\n      var routeRegrex = /\\/share\\//;\n      return routeRegrex.test(this.$route.path) ? 'Share' : '';\n    }\n  }),\n  validations: {\n    date_started: {\n      required: required\n    },\n    file_in_use: {\n      required: required\n    }\n  },\n  components: {\n    Datepicker: Datepicker\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    remoteFileUpload: \"mw/maps/\".concat(TYPE.REMOTE_IMPORT_CSV_MAPS),\n    fetchReports: \"mw/reports/\".concat(TYPE.FETCH_LIST_REPORTS)\n  })), {}, {\n    handleCannel: function handleCannel() {\n      this.report = {};\n    },\n    handleSubmitFileUpload: function () {\n      var _handleSubmitFileUpload = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var formData;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.$v.$touch();\n\n                if (!this.$v.$error) {\n                  _context.next = 4;\n                  break;\n                }\n\n                console.log('error');\n                return _context.abrupt(\"return\");\n\n              case 4:\n                if (!(!this.reports.isLoad && this.reports.items.length && this.file)) {\n                  _context.next = 20;\n                  break;\n                }\n\n                this.flag.processed = false;\n                formData = new FormData();\n                formData.append('file', this.file);\n                formData.append('date_started', moment(this.date_started).format('MM/DD/YYYY'));\n                formData.append('file_in_use', this.file_in_use);\n                _context.prev = 10;\n                _context.next = 13;\n                return this.remoteFileUpload(formData);\n\n              case 13:\n                this.flag.processed = true;\n                _context.next = 20;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](10);\n\n                if (_context.t0.status && _context.t0.status === 400) {\n                  this.vToasted('error', 'Could not import data. Please compare your file with the sample one to make sure your column definition is correct.');\n                } else {\n                  this.vToasted('error', _context.t0.data.message);\n                }\n\n                this.flag.processed = false;\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[10, 16]]);\n      }));\n\n      function handleSubmitFileUpload() {\n        return _handleSubmitFileUpload.apply(this, arguments);\n      }\n\n      return handleSubmitFileUpload;\n    }(),\n    handleDownloadCSVExample: function handleDownloadCSVExample() {\n      window.location.href = 'https://storage.googleapis.com/precise/mw/sample-map-import.csv';\n    },\n    fetchReportList: function () {\n      var _fetchReportList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return this.fetchReports({\n                  limit: 1,\n                  page: 1\n                });\n\n              case 3:\n                response = _context2.sent;\n                this.reports.items = response.items;\n                this.reports.isLoad = false;\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n                this.reports.isLoad = false;\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 8]]);\n      }));\n\n      function fetchReportList() {\n        return _fetchReportList.apply(this, arguments);\n      }\n\n      return fetchReportList;\n    }()\n  }),\n  created: function created() {\n    this.fetchReportList();\n    this.fields = [{\n      key: 'name',\n      label: '',\n      sortable: true,\n      thClass: 'text-center'\n    }, {\n      key: 'count',\n      label: 'Count',\n      sortable: true,\n      thClass: 'text-center'\n    }];\n  }\n};",{"version":3,"sources":["Import.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"animated fadeIn\">\r\n    <b-row>\r\n      <b-col md=\"6\" lg=\"6\" sm=\"12\">\r\n        <b-card>\r\n          <template v-slot:header>\r\n            <div class=\"d-flex justify-content-between align-items-center\">\r\n              <div>\r\n                <b>Import MAPs</b>\r\n              </div>\r\n              <div class=\"card-header-actions\">\r\n                <div class=\"btn-close\">\r\n                  <router-link\r\n                    :to=\"{name: `MW${sharableRoute}ListMaps`, params: {client_id: nav.clientId}}\"\r\n                    tag=\"button\"\r\n                    class=\"btn btn-secondary btn-block btn-sm\"\r\n                  >\r\n                    <i class=\"icon-arrow-left-circle icons\"></i> Back\r\n                  </router-link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </template>\r\n          <b-form>\r\n            <b-form-group>\r\n              <b-row class=\"align-items-center\">\r\n                <b-col md=\"12\">\r\n                  <label>Select CSV File</label>\r\n                  <b-form-file v-model=\"file\"></b-form-file>\r\n                </b-col>\r\n              </b-row>\r\n            </b-form-group>\r\n            <b-col class=\"px-0\">\r\n              <i>\r\n                Please download the sample file\r\n                <b-button size=\"sm\" class=\"btn btn-pill btn-light btn-sm\" @click=\"handleDownloadCSVExample()\">\r\n                  <i class=\"icons icon-cloud-download\"></i> Download\r\n                </b-button>\r\n              </i>\r\n            </b-col>\r\n            <b-row>\r\n              <b-col md=\"6\" lg=\"6\" sm=\"12\">\r\n                <b-form-group>\r\n                  <label>\r\n                    <b>File in use</b>\r\n                  </label>\r\n                  <b-form-input type=\"text\"\r\n                                @input=\"$v.file_in_use.$touch()\"\r\n                                v-model=\"file_in_use\"\r\n                  ></b-form-input>\r\n                  <div\r\n                          class=\"mw-error\"\r\n                          v-if=\"$v.file_in_use.$error && $v.file_in_use.$dirty\"\r\n                  >File in use is required.</div>\r\n                </b-form-group>\r\n              </b-col>\r\n              <b-col md=\"6\" lg=\"6\" sm=\"12\">\r\n                <b-form-group>\r\n                  <label>\r\n                    <b>Date started</b>\r\n                  </label>\r\n                  <div class=\"custom-datepicker-control\">\r\n                    <b-button-group class=\"w-100\">\r\n                      <b-button class=\"col-md-2\" id=\"btnDate\" size='sm' @click=\"$refs.date_started.click()\">\r\n                        <i class=\"icons icon-calendar\"></i>\r\n                      </b-button>\r\n                      <Datepicker\r\n                              v-model=\"date_started\"\r\n                              bootstrap-styling\r\n                              format=\"MM/dd/yyyy\"\r\n                              typeable\r\n                              ref=\"date_started\"\r\n                              @input=\"$v.date_started.$touch()\"\r\n                              id=\"fromPicker\"\r\n                              placeholder=\"Select a date\"\r\n                              class=\"optimize-dp col-md-10 p-0\"\r\n                      >\r\n                      </Datepicker>\r\n                    </b-button-group>\r\n                    <div\r\n                            class=\"mw-error\"\r\n                            v-if=\"$v.date_started.$error && $v.date_started.$dirty\"\r\n                    >Date started is required.</div>\r\n                  </div>\r\n                </b-form-group>\r\n              </b-col>\r\n            </b-row>\r\n            <b-col class=\"px-0\">\r\n                <span class=\"text-danger pt-2\" v-if=\"!reports.isLoad && !reports.items.length\">\r\n                  There is no report or active report in the list. Please\r\n                  <router-link class=\"text-danger font-weight-bold\" :to=\"{name: 'MWAddReports'}\">add a new report</router-link> or\r\n                  <router-link class=\"text-danger font-weight-bold\" :to=\"{name: 'MWListReports'}\">activate</router-link> at least one report first.\r\n                </span>\r\n            </b-col>\r\n          </b-form>\r\n          <template v-slot:footer>\r\n            <b-button :disabled=\"$v.$error || reports.isLoad || !reports.items.length || !file\" variant=\"primary\" size=\"sm\" @click=\"handleSubmitFileUpload()\">\r\n              <i class=\"icon-cloud-upload\"></i> Upload\r\n            </b-button>\r\n            <b-button size=\"sm\" class=\"ml-2\" @click=\"$router.push({name: `MW${sharableRoute}ListMaps`, params: {client_id: nav.clientId}})\">\r\n              <i class=\"icon-arrow-left-circle\"></i> Cancel\r\n            </b-button>\r\n          </template>\r\n        </b-card>\r\n      </b-col>\r\n      <b-col md=\"6\" lg=\"6\" sm=\"12\" v-if=\"flag.processed\">\r\n        <b-card>\r\n          <template v-slot:header>\r\n            <span class=\"align-middle\">\r\n              Import\r\n              <strong>Result</strong>\r\n            </span>\r\n          </template>\r\n          <b-card-body>\r\n            <ul>\r\n              <li>\r\n                <strong>Created</strong>\r\n                : {{ getProcess.total_created }}\r\n              </li>\r\n              <li>\r\n                <strong>Updated</strong>\r\n                : {{ getProcess.total_updated }}\r\n              </li>\r\n              <li>\r\n                <strong>Deleted</strong>\r\n                : {{ getProcess.total_deleted }}\r\n              </li>\r\n              <li v-if=\"getProcess.errors && getProcess.errors.length\">\r\n                <strong>Errors</strong>\r\n                <ul>\r\n                  <li\r\n                    v-for=\"(d, i) in getProcess.errors\"\r\n                    :key=\"i\"\r\n                  >{{ d.error }} at row #{{ d.row_number }}</li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          </b-card-body>\r\n        </b-card>\r\n      </b-col>\r\n    </b-row>\r\n  </div>\r\n</template>\r\n<script>\r\n// import _ from 'lodash'\r\nimport { mapActions, mapGetters } from 'vuex'\r\nimport * as TYPE from '@/actionTypes.js'\r\nimport { required } from 'vuelidate/lib/validators'\r\nimport vToasted from '@/shared/notification'\r\nimport _nav from '@/_nav'\r\nimport Datepicker from 'vuejs-datepicker'\r\nimport * as moment from 'moment/moment'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      date_started: null,\r\n      file_in_use: null,\r\n      file: null,\r\n      flag: {\r\n        processed: false\r\n      },\r\n      reports: {\r\n        items: [],\r\n        isLoad: true\r\n      },\r\n      nav: _nav\r\n    }\r\n  },\r\n  mixins: [vToasted],\r\n  computed: {\r\n    ...mapGetters({\r\n      getProcess: `mw/maps/${TYPE.GET_PROCESS_MAPS}`\r\n    }),\r\n    sharableRoute () {\r\n      const routeRegrex = /\\/share\\//\r\n      return routeRegrex.test(this.$route.path) ? 'Share' : ''\r\n    }\r\n  },\r\n  validations: {\r\n    date_started: {\r\n      required\r\n    },\r\n    file_in_use: {\r\n      required\r\n    }\r\n  },\r\n  components: {\r\n    Datepicker\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      remoteFileUpload: `mw/maps/${TYPE.REMOTE_IMPORT_CSV_MAPS}`,\r\n      fetchReports: `mw/reports/${TYPE.FETCH_LIST_REPORTS}`\r\n    }),\r\n    handleCannel() {\r\n      this.report = {}\r\n    },\r\n    async handleSubmitFileUpload() {\r\n      this.$v.$touch()\r\n      if (this.$v.$error) {\r\n        console.log('error')\r\n        return\r\n      }\r\n      if (!this.reports.isLoad && this.reports.items.length && this.file) {\r\n        this.flag.processed = false\r\n        let formData = new FormData()\r\n        formData.append('file', this.file)\r\n        formData.append('date_started', moment(this.date_started).format('MM/DD/YYYY'))\r\n        formData.append('file_in_use', this.file_in_use)\r\n        try {\r\n          await this.remoteFileUpload(formData)\r\n          this.flag.processed = true\r\n        } catch (error) {\r\n          if (error.status && error.status === 400) {\r\n            this.vToasted('error', 'Could not import data. Please compare your file with the sample one to make sure your column definition is correct.')\r\n          } else {\r\n            this.vToasted('error', error.data.message)\r\n          }\r\n          this.flag.processed = false\r\n        }\r\n      }\r\n    },\r\n    handleDownloadCSVExample() {\r\n      window.location.href = 'https://storage.googleapis.com/precise/mw/sample-map-import.csv'\r\n    },\r\n    async fetchReportList() {\r\n      try {\r\n        // check report list is not empty, so limit 1 is enough\r\n        const response = await this.fetchReports({limit: 1, page: 1})\r\n        this.reports.items = response.items\r\n        this.reports.isLoad = false\r\n      } catch (e) {\r\n        this.reports.isLoad = false\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchReportList()\r\n    this.fields = [\r\n      { key: 'name', label: '', sortable: true, thClass: 'text-center' },\r\n      { key: 'count', label: 'Count', sortable: true, thClass: 'text-center' }\r\n    ]\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components/page/maps"}]}