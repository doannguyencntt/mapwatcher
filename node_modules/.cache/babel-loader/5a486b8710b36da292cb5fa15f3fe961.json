{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Project\\CBPO\\plat-mw-web\\src\\store\\modules\\images.js","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\store\\modules\\images.js","mtime":1631532115753},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1626076679949}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as TYPE from \"../../actionTypes\";\nimport { MW_API } from '@/service/';\nimport * as URL from '@/service/_constant';\nvar state = {\n  images: null\n};\n\nvar getters = _defineProperty({}, TYPE.GET_LIST_REPORTS, function (state) {\n  return state.images;\n});\n\nvar mutations = _defineProperty({}, TYPE.SET_IMAGES, function (state, reports) {\n  state.listReports = _objectSpread({}, reports);\n});\n\nvar actions = _defineProperty({}, TYPE.REMOTE_UPLOAD_IMAGES, function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref, images) {\n    var commit, state, dispatch;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            commit = _ref.commit, state = _ref.state, dispatch = _ref.dispatch;\n            return _context2.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resolve, reject) {\n                var res;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.prev = 0;\n                        _context.next = 3;\n                        return MW_API.post(URL.POST_IMAGES, images);\n\n                      case 3:\n                        res = _context.sent;\n                        commit(TYPE.SET_IMAGES, res.data);\n                        resolve(res.data);\n                        _context.next = 11;\n                        break;\n\n                      case 8:\n                        _context.prev = 8;\n                        _context.t0 = _context[\"catch\"](0);\n                        reject(_context.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[0, 8]]);\n              }));\n\n              return function (_x3, _x4) {\n                return _ref3.apply(this, arguments);\n              };\n            }()));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());\n\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["C:/Project/CBPO/plat-mw-web/src/store/modules/images.js"],"names":["TYPE","MW_API","URL","state","images","getters","GET_LIST_REPORTS","mutations","SET_IMAGES","reports","listReports","actions","REMOTE_UPLOAD_IMAGES","commit","dispatch","Promise","resolve","reject","post","POST_IMAGES","res","data","namespaced"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,IAAZ;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,qBAArB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE;AADI,CAAd;;AAGA,IAAMC,OAAO,uBACVL,IAAI,CAACM,gBADK,EACc,UAACH,KAAD;AAAA,SAAWA,KAAK,CAACC,MAAjB;AAAA,CADd,CAAb;;AAGA,IAAMG,SAAS,uBACZP,IAAI,CAACQ,UADO,YACKL,KADL,EACYM,OADZ,EACqB;AAChCN,EAAAA,KAAK,CAACO,WAAN,qBAAyBD,OAAzB;AACD,CAHY,CAAf;;AAMA,IAAME,OAAO,uBACJX,IAAI,CAACY,oBADD;AAAA,8FACoDR,MADpD;AAAA;AAAA;AAAA;AAAA;AAAA;AACyBS,YAAAA,MADzB,QACyBA,MADzB,EACiCV,KADjC,QACiCA,KADjC,EACwCW,QADxC,QACwCA,QADxC;AAAA,8CAEF,IAAIC,OAAJ;AAAA,kFAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEGhB,MAAM,CAACiB,IAAP,CAAYhB,GAAG,CAACiB,WAAhB,EAA6Bf,MAA7B,CAFH;;AAAA;AAETgB,wBAAAA,GAFS;AAGfP,wBAAAA,MAAM,CAACb,IAAI,CAACQ,UAAN,EAAkBY,GAAG,CAACC,IAAtB,CAAN;AACAL,wBAAAA,OAAO,CAACI,GAAG,CAACC,IAAL,CAAP;AAJe;AAAA;;AAAA;AAAA;AAAA;AAMfJ,wBAAAA,MAAM,aAAN;;AANe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAZ;;AAAA;AAAA;AAAA;AAAA,gBAFE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,IAAb;;AAcA,eAAe;AACbK,EAAAA,UAAU,EAAE,IADC;AAEbnB,EAAAA,KAAK,EAALA,KAFa;AAGbE,EAAAA,OAAO,EAAPA,OAHa;AAIbE,EAAAA,SAAS,EAATA,SAJa;AAKbI,EAAAA,OAAO,EAAPA;AALa,CAAf","sourcesContent":["import * as TYPE from '../../actionTypes'\r\nimport { MW_API } from '@/service/'\r\nimport * as URL from '@/service/_constant'\r\n\r\nconst state = {\r\n  images: null\r\n}\r\nconst getters = {\r\n  [TYPE.GET_LIST_REPORTS]: (state) => state.images\r\n}\r\nconst mutations = {\r\n  [TYPE.SET_IMAGES](state, reports) {\r\n    state.listReports = { ...reports }\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  async [TYPE.REMOTE_UPLOAD_IMAGES]({ commit, state, dispatch }, images) {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await MW_API.post(URL.POST_IMAGES, images)\r\n        commit(TYPE.SET_IMAGES, res.data)\r\n        resolve(res.data)\r\n      } catch (error) {\r\n        reject(error)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  mutations,\r\n  actions\r\n}\r\n"]}]}