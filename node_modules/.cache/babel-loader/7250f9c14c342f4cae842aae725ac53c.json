{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\maps\\Import.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\maps\\Import.vue","mtime":1626074952658},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1626076746842},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import _ from 'lodash'\nimport { mapActions, mapGetters } from 'vuex';\nimport * as TYPE from '@/actionTypes.js';\nimport { required } from 'vuelidate/lib/validators';\nimport vToasted from '@/shared/notification';\nimport _nav from '@/_nav';\nimport Datepicker from 'vuejs-datepicker';\nimport * as moment from 'moment/moment';\nexport default {\n  data: function data() {\n    return {\n      date_started: null,\n      file_in_use: null,\n      file: null,\n      flag: {\n        processed: false\n      },\n      brands: {\n        items: [],\n        isLoad: true\n      },\n      nav: _nav\n    };\n  },\n  mixins: [vToasted],\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    getProcess: \"mw/maps/\".concat(TYPE.GET_PROCESS_MAPS)\n  })), {}, {\n    sharableRoute: function sharableRoute() {\n      var routeRegrex = /\\/share\\//;\n      return routeRegrex.test(this.$route.path) ? 'Share' : '';\n    }\n  }),\n  validations: {\n    date_started: {\n      required: required\n    },\n    file_in_use: {\n      required: required\n    }\n  },\n  components: {\n    Datepicker: Datepicker\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    remoteFileUpload: \"mw/maps/\".concat(TYPE.REMOTE_IMPORT_CSV_MAPS),\n    fetchBrands: \"mw/brands/\".concat(TYPE.FETCH_LIST_BRANDS)\n  })), {}, {\n    handleCannel: function handleCannel() {\n      this.brand = {};\n    },\n    handleSubmitFileUpload: function () {\n      var _handleSubmitFileUpload = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var formData;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.$v.$touch();\n\n                if (!this.$v.$error) {\n                  _context.next = 4;\n                  break;\n                }\n\n                console.log('error');\n                return _context.abrupt(\"return\");\n\n              case 4:\n                if (!(!this.brands.isLoad && this.brands.items.length && this.file)) {\n                  _context.next = 20;\n                  break;\n                }\n\n                this.flag.processed = false;\n                formData = new FormData();\n                formData.append('file', this.file);\n                formData.append('date_started', moment(this.date_started).format('MM/DD/YYYY'));\n                formData.append('file_in_use', this.file_in_use);\n                _context.prev = 10;\n                _context.next = 13;\n                return this.remoteFileUpload(formData);\n\n              case 13:\n                this.flag.processed = true;\n                _context.next = 20;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](10);\n\n                if (_context.t0.status && _context.t0.status === 400) {\n                  this.vToasted('error', 'Could not import data. Please compare your file with the sample one to make sure your column definition is correct.');\n                } else {\n                  this.vToasted('error', _context.t0.data.message);\n                }\n\n                this.flag.processed = false;\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[10, 16]]);\n      }));\n\n      function handleSubmitFileUpload() {\n        return _handleSubmitFileUpload.apply(this, arguments);\n      }\n\n      return handleSubmitFileUpload;\n    }(),\n    handleDownloadCSVExample: function handleDownloadCSVExample() {\n      window.location.href = 'https://storage.googleapis.com/precise/mw/sample-map-import.csv';\n    },\n    fetchBrandList: function () {\n      var _fetchBrandList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return this.fetchBrands({\n                  limit: 1,\n                  page: 1\n                });\n\n              case 3:\n                response = _context2.sent;\n                this.brands.items = response.items;\n                this.brands.isLoad = false;\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n                this.brands.isLoad = false;\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 8]]);\n      }));\n\n      function fetchBrandList() {\n        return _fetchBrandList.apply(this, arguments);\n      }\n\n      return fetchBrandList;\n    }()\n  }),\n  created: function created() {\n    this.fetchBrandList();\n    this.fields = [{\n      key: 'name',\n      label: '',\n      sortable: true,\n      thClass: 'text-center'\n    }, {\n      key: 'count',\n      label: 'Count',\n      sortable: true,\n      thClass: 'text-center'\n    }];\n  }\n};",null]}