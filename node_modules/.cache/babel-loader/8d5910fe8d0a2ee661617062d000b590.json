{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\sellerEnforcements\\Add.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\sellerEnforcements\\Add.vue","mtime":1626264502287},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1626076746842},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ClipboardUtil } from 'plat-sdk/dist/clipboard';\nimport _ from 'lodash';\nimport { mapActions } from 'vuex';\nimport * as TYPE from '@/actionTypes.js';\nimport { required, email } from 'vuelidate/lib/validators';\nimport vToasted from '@/shared/notification';\nimport { SellerEnforcementFrequencyType } from '@/constants/SellerEnforcement';\nimport { FormType } from '@/constants/Form.js';\nimport _nav from '@/_nav';\nexport default {\n  name: 'MWAddSellerEnforcements',\n  data: function data() {\n    return {\n      sellerEnforcementFrequencyType: _.cloneDeep(SellerEnforcementFrequencyType),\n      frequency_options: [{\n        value: SellerEnforcementFrequencyType.MANUAL,\n        text: _.upperFirst(SellerEnforcementFrequencyType.MANUAL)\n      }, {\n        value: SellerEnforcementFrequencyType.DAILY,\n        text: _.upperFirst(SellerEnforcementFrequencyType.DAILY)\n      }],\n      dataSet: {\n        sender_email: '',\n        sender_name: '',\n        name: '',\n        frequency: SellerEnforcementFrequencyType.MANUAL\n      },\n      nav: _nav,\n      check: true\n    };\n  },\n  mixins: [vToasted],\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    remotePostSeller: \"mw/sellerEnforcements/\".concat(TYPE.REMOTE_POST_SELLER_ENFORCEMENT)\n  })), {}, {\n    handleSave: function () {\n      var _handleSave = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var selerEnforcementData;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.$v.$touch();\n\n                if (!this.$v.$error) {\n                  _context.next = 4;\n                  break;\n                }\n\n                console.log(this.$v.dataSet);\n                return _context.abrupt(\"return\");\n\n              case 4:\n                _context.prev = 4;\n                selerEnforcementData = _.pickBy(this.dataSet, _.identity);\n                _context.next = 8;\n                return this.remotePostSeller(selerEnforcementData);\n\n              case 8:\n                this.backToListSeller();\n                this.vToasted('success', 'A new seller has been created successfully.');\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](4);\n                this.vToasted('error', _context.t0.data.message);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[4, 12]]);\n      }));\n\n      function handleSave() {\n        return _handleSave.apply(this, arguments);\n      }\n\n      return handleSave;\n    }(),\n    backToListSeller: function backToListSeller() {\n      this.$router.push({\n        name: 'MWListSellerEnforcements',\n        params: {\n          client_id: this.nav.clientId\n        }\n      });\n    },\n    handleCopyRecord: function handleCopyRecord() {\n      ClipboardUtil.copy(_.cloneDeep(this.dataSet), FormType.SELLER);\n      this.vToasted('success', 'Copied to clipboard.');\n      this.checkKey();\n    },\n    handlePasteRecord: function () {\n      var _handlePasteRecord = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var pasteData;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return ClipboardUtil.paste(_.cloneDeep(this.dataSet), FormType.SELLER);\n\n              case 3:\n                pasteData = _context2.sent;\n\n                if (pasteData) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                this.vToasted('error', 'You need to enable copy to clipboard');\n                return _context2.abrupt(\"return\");\n\n              case 7:\n                this.dataSet = _objectSpread({}, pasteData);\n                this.vToasted('success', 'Paste successfully');\n                _context2.next = 14;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](0);\n                this.vToasted('error', 'Your copy is not valid');\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 11]]);\n      }));\n\n      function handlePasteRecord() {\n        return _handlePasteRecord.apply(this, arguments);\n      }\n\n      return handlePasteRecord;\n    }(),\n    checkKey: function () {\n      var _checkKey = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var result;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return ClipboardUtil.check(FormType.SELLER);\n\n              case 2:\n                result = _context3.sent;\n                this.check = !result;\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function checkKey() {\n        return _checkKey.apply(this, arguments);\n      }\n\n      return checkKey;\n    }()\n  }),\n  computed: {\n    isCopySupport: function isCopySupport() {\n      return ClipboardUtil.isCopySupported();\n    }\n  },\n  created: function created() {\n    this.checkKey();\n    window.addEventListener('focus', this.checkKey);\n  },\n  destroyed: function destroyed() {\n    window.removeEventListener('focus', this.checkKey);\n  },\n  validations: {\n    dataSet: {\n      sender_email: {\n        email: email\n      },\n      sender_name: {},\n      name: {\n        required: required\n      }\n    }\n  }\n};",null]}