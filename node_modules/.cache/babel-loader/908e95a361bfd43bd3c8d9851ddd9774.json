{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\maps\\ListMaps.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\maps\\ListMaps.vue","mtime":1639556685367},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find\";\nimport _defineProperty from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapActions } from 'vuex';\nimport vToasted from '@/shared/notification';\nimport * as TYPE from '@/actionTypes.js';\nimport _ from 'lodash';\nimport _nav from '@/_nav';\nimport { MarketPlacesCurrency } from '@/constants/Report';\nimport LoadingSpinner from '@/components/common/LoadingSpinner';\nexport default {\n  name: 'c-table',\n  inheritAttrs: false,\n  mixins: [vToasted],\n  props: {\n    caption: {\n      type: String,\n      default: 'Table'\n    },\n    hover: {\n      type: Boolean,\n      default: false\n    },\n    striped: {\n      type: Boolean,\n      default: false\n    },\n    bordered: {\n      type: Boolean,\n      default: false\n    },\n    small: {\n      type: Boolean,\n      default: false\n    },\n    fixed: {\n      type: Boolean,\n      default: false\n    },\n    tableData: {\n      type: [Array, Function],\n      default: function _default() {\n        return [];\n      }\n    },\n    fields: {\n      type: [Array, Object],\n      default: function _default() {\n        return [];\n      }\n    },\n    dark: {\n      type: Boolean,\n      default: false\n    },\n    totalRows: {\n      type: Number,\n      default: 0\n    },\n    handleChangePage: {\n      type: [Function]\n    }\n  },\n  data: function data() {\n    return {\n      MarketPlacesCurrency: MarketPlacesCurrency,\n      params: null,\n      validReports: [],\n      brandNames: [],\n      nav: _nav,\n      mapId: null,\n      selectedMaps: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    getPermissions: \"mw/\".concat(TYPE.GET_PERMISSIONS),\n    planConfig: \"mw/\".concat(TYPE.GET_PLAN_CONFIG),\n    organizationStats: \"mw/\".concat(TYPE.GET_ORGANIZATION_STATS),\n    defaultParams: \"mw/maps/\".concat(TYPE.GET_DEFAULT_AMAZON_MAP_PARAMS),\n    reportList: \"mw/reports/\".concat(TYPE.GET_LIST_REPORTS),\n    listMaps: \"mw/maps/\".concat(TYPE.GET_MAPS),\n    mapPricingLoading: \"mw/maps/\".concat(TYPE.GET_MAP_PRICING_LOADING)\n  })), {}, {\n    captions: function captions() {\n      var fields = this.fields;\n      return this.params.marketplace ? fields : fields.filter(function (f) {\n        return f.key !== 'name';\n      });\n    },\n    getItems: function getItems() {\n      return this.listMaps.items;\n    },\n    allSelected: {\n      get: function get() {\n        var items = this.getItems;\n        return !_.isEmpty(items) && items.length === this.selectedMaps.length;\n      },\n      set: function set(newValue) {\n        var items = this.getItems;\n        this.selectedMaps = newValue ? items.map(function (item) {\n          return item.id;\n        }) : items.length === this.selectedMaps.length ? [] : this.selectedMaps;\n      }\n    },\n    sharableRoute: function sharableRoute() {\n      var routeRegrex = /\\/share\\//;\n      return routeRegrex.test(this.$route.path) ? 'Share' : '';\n    },\n    reportOptions: function reportOptions() {\n      return this.validReports.map(function (item) {\n        return {\n          value: item._id,\n          text: item.name_in_dashboard\n        };\n      });\n    },\n    marketplaceOptions: function marketplaceOptions() {\n      var selectedReports = this.params.report_id ? [_.find(this.validReports, {\n        _id: this.params.report_id\n      })] : this.validReports;\n      var supportedMarkets = [];\n\n      _.forEach(selectedReports, function (report) {\n        var markets = _.get(report, 'marketplaces');\n\n        _.forEach(_.keys(markets), function (marketKey) {\n          var marketplace = marketKey.replaceAll('_', '.'); // amazon.com\n\n          markets[marketKey] && !supportedMarkets.includes(marketplace) && supportedMarkets.push(marketplace);\n        });\n      });\n\n      return _.isEmpty(this.planConfig) ? supportedMarkets.map(function (market) {\n        return {\n          value: market,\n          text: _.upperFirst(market)\n        };\n      }) // not sort marketplaces\n      : this.planConfig.allowed_amazon_marketplaces.filter(function (market) {\n        return supportedMarkets.includes(market);\n      }).map(function (market) {\n        return {\n          value: market,\n          text: _.upperFirst(market)\n        };\n      }); // sorted marketplaces\n    },\n    brandOptions: function brandOptions() {\n      return this.brandNames.map(function (name) {\n        return {\n          value: name === '' ? -1 : name,\n          text: name\n        };\n      });\n    },\n    currency: function currency() {\n      // TODO later on, currency needs to be supported from backend.\n      return function (marketplace) {\n        return MarketPlacesCurrency[marketplace];\n      };\n    }\n  }),\n  components: {\n    LoadingSpinner: LoadingSpinner\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    fetchMaps: \"mw/maps/\".concat(TYPE.FETCH_LIST_MAPS),\n    fetchReports: \"mw/reports/\".concat(TYPE.FETCH_LIST_REPORTS),\n    fetchValidAmazonReport: \"mw/reports/\".concat(TYPE.GET_VALID_AMAZON_REPORTS),\n    removeMap: \"mw/maps/\".concat(TYPE.REMOVE_MAP),\n    fetchUrlDownload: \"mw/maps/\".concat(TYPE.FETCH_URL_EXPORT),\n    updateTotalGSMap: \"mw/maps/\".concat(TYPE.UPDATE_TOTAL_GS_MAP),\n    fetchBrandNames: \"mw/maps/\".concat(TYPE.GET_BRAND_NAMES),\n    fetchPermissions: \"mw/\".concat(TYPE.FETCH_PERMISSIONS)\n  })), {}, {\n    convertToUpperCase: function convertToUpperCase(str) {\n      return _.upperCase(str);\n    },\n    sortChange: function sortChange(event) {\n      this.params.searchort_by = event.sortBy;\n\n      if (event.sortBy) {\n        this.params.searchort_dir = event.sortDesc ? 'desc' : 'asc';\n      } else {\n        this.params.searchort_dir = null;\n      }\n\n      this.paramsChange();\n    },\n    syncParams: function syncParams() {\n      this.paramsChange();\n    },\n    paramsChange: function () {\n      var _paramsChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.fetchMaps(this.params);\n\n              case 2:\n                this.$router.push({\n                  params: {\n                    client_id: this.nav.clientId\n                  },\n                  query: this.keepShareTokenForQuery({\n                    search: this.params.search,\n                    report_id: this.params.report_id,\n                    limit: this.params.limit ? this.params.limit : 100,\n                    page: this.params.page ? this.params.page : 1,\n                    marketplace: this.params.marketplace,\n                    brand_name: this.params.brand_name\n                  })\n                }, function () {});\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function paramsChange() {\n        return _paramsChange.apply(this, arguments);\n      }\n\n      return paramsChange;\n    }(),\n    reportChange: function () {\n      var _reportChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.params.marketplace = null;\n                this.params.brand_name = null;\n                _context2.next = 4;\n                return this.reloadBrandNames();\n\n              case 4:\n                _context2.next = 6;\n                return this.paramsChange();\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function reportChange() {\n        return _reportChange.apply(this, arguments);\n      }\n\n      return reportChange;\n    }(),\n    marketplaceChange: function () {\n      var _marketplaceChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.params.brand_name = null;\n                _context3.next = 3;\n                return this.reloadBrandNames();\n\n              case 3:\n                _context3.next = 5;\n                return this.paramsChange();\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function marketplaceChange() {\n        return _marketplaceChange.apply(this, arguments);\n      }\n\n      return marketplaceChange;\n    }(),\n    keepShareTokenForQuery: function keepShareTokenForQuery(query) {\n      if (this.$route.query.share_token) {\n        _.assign(query, {\n          share_token: this.$route.query.share_token\n        });\n      }\n\n      return query;\n    },\n    fetchUniqAmazonReport: function () {\n      var _fetchUniqAmazonReport = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.fetchValidAmazonReport(this.keepShareTokenForQuery({}));\n\n              case 2:\n                this.validReports = _context4.sent;\n                this.reloadBrandNames();\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function fetchUniqAmazonReport() {\n        return _fetchUniqAmazonReport.apply(this, arguments);\n      }\n\n      return fetchUniqAmazonReport;\n    }(),\n    reloadBrandNames: function () {\n      var _reloadBrandNames = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.fetchBrandNames({\n                  report_id: this.params.report_id,\n                  marketplace: this.params.marketplace\n                });\n\n              case 2:\n                this.brandNames = _context5.sent;\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function reloadBrandNames() {\n        return _reloadBrandNames.apply(this, arguments);\n      }\n\n      return reloadBrandNames;\n    }(),\n    handleOpenModelDownload: function () {\n      var _handleOpenModelDownload = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                _context6.next = 3;\n                return this.fetchUrlDownload(this.keepShareTokenForQuery(_objectSpread({}, this.$route.query)));\n\n              case 3:\n                res = _context6.sent;\n                window.location.href = res.url;\n                _context6.next = 10;\n                break;\n\n              case 7:\n                _context6.prev = 7;\n                _context6.t0 = _context6[\"catch\"](0);\n                this.vToasted('error', _context6.t0.message);\n\n              case 10:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[0, 7]]);\n      }));\n\n      function handleOpenModelDownload() {\n        return _handleOpenModelDownload.apply(this, arguments);\n      }\n\n      return handleOpenModelDownload;\n    }(),\n    handleEditMap: function handleEditMap(mapId) {\n      this.$router.push({\n        name: \"MW\".concat(this.sharableRoute, \"EditMaps\"),\n        params: {\n          client_id: this.nav.clientId,\n          id: mapId\n        },\n        query: _objectSpread({}, this.$route.query)\n      });\n    },\n    handleRemoveMap: function () {\n      var _handleRemoveMap = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(mapId) {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                _context7.next = 3;\n                return this.removeMap(mapId);\n\n              case 3:\n                this.vToasted('success', \"This MAP has been removed successfully.\");\n                _context7.next = 6;\n                return this.fetchPermissions();\n\n              case 6:\n                _context7.next = 11;\n                break;\n\n              case 8:\n                _context7.prev = 8;\n                _context7.t0 = _context7[\"catch\"](0);\n                this.vToasted('error', _context7.t0.data.message);\n\n              case 11:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[0, 8]]);\n      }));\n\n      function handleRemoveMap(_x) {\n        return _handleRemoveMap.apply(this, arguments);\n      }\n\n      return handleRemoveMap;\n    }(),\n    handleRemoveMulti: function handleRemoveMulti() {\n      var _this = this;\n\n      var allRemove = this.selectedMaps.map(function (mapId) {\n        return _this.removeMap(mapId);\n      });\n      Promise.all(allRemove).then(function (values) {\n        var newTotalGSmaps = _this.listMaps.total - _this.selectedMaps.length;\n\n        _this.updateTotalGSMap(newTotalGSmaps);\n\n        _this.vToasted('success', \"All selected MAPs have been removed successfully.\");\n\n        _this.selectedMaps = [];\n      }).catch(function (error) {\n        _this.vToasted('error', error.data.message);\n      });\n    },\n    generateAmazonLink: function generateAmazonLink(marketplace, asin) {\n      return 'https://www.' + marketplace + '/gp/offer-listing/' + asin;\n    }\n  }),\n  created: function created() {\n    this.params = _.defaultsDeep(this.$route.query, this.defaultParams);\n    this.syncParams();\n    this.fetchUniqAmazonReport();\n  }\n};",{"version":3,"sources":["ListMaps.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"animated fadeIn\">\r\n    <b-card :header=\"caption\">\r\n      <template v-slot:header>\r\n        <p class=\"po-list-title my-0 pull-left align-middle map-list-title\">\r\n          <strong><i class=\"icon-book-open icons\"></i> {{ caption }}</strong>\r\n          <span v-if=\"listMaps && listMaps.total\">\r\n            (Total:\r\n            {{ new Number(listMaps.total || 0).toLocaleString('en') }})</span\r\n          >\r\n          <span v-else> (Total: 0)</span>\r\n        </p>\r\n        <div class=\"pull-right\">\r\n          <b-button-group>\r\n            <router-link\r\n              v-if=\"\r\n                getPermissions.module_enabled &&\r\n                getPermissions.permissions.mapman &&\r\n                !params.share_token\r\n              \"\r\n              :to=\"{\r\n                name: `MWImportAmazonMaps`,\r\n                params: { client_id: nav.clientId }\r\n              }\"\r\n              tag=\"button\"\r\n              class=\"btn btn-primary btn-sm\"\r\n            >\r\n              <i class=\"icons icon-cloud-upload\"></i> Import\r\n            </router-link>\r\n            <b-button\r\n              variant=\"primary\"\r\n              size=\"sm\"\r\n              @click=\"\r\n                () => {\r\n                  handleOpenModelDownload()\r\n                }\r\n              \"\r\n            >\r\n              <i class=\"icons icon-cloud-download\"></i> Export\r\n              <b-spinner\r\n                v-if=\"$store.state.mw.maps.loadingDownload\"\r\n                label=\"Spinning\"\r\n                class=\"icon- btn-loader\"\r\n              ></b-spinner>\r\n            </b-button>\r\n          </b-button-group>\r\n        </div>\r\n      </template>\r\n      <b-row>\r\n        <b-col class=\"mb-4 col-1\">\r\n          <b-dropdown\r\n            v-if=\"selectedMaps.length\"\r\n            text=\"Actions\"\r\n            class=\"dropdown-action\"\r\n          >\r\n            <b-dropdown-item-button\r\n              :disabled=\"\r\n                !getPermissions.module_enabled &&\r\n                !getPermissions.permissions.mapman\r\n              \"\r\n              @click=\"$bvModal.show('modal-confirm-remove-multi')\"\r\n            >\r\n              <i class=\"icon-close\"></i> Remove\r\n            </b-dropdown-item-button>\r\n          </b-dropdown>\r\n        </b-col>\r\n        <b-col class=\"mb-4 col-11\">\r\n          <b-form-group class=\"mb-0\">\r\n            <b-input-group class=\"search cancel-action align-items-center\">\r\n              <!-- Report -->\r\n              <label class=\"d-inline mb-0 pr-2\">Report:</label>\r\n              <b-form-select\r\n                @change=\"\r\n                  params.page = 1\r\n                  reportChange()\r\n                \"\r\n                v-model=\"params.report_id\"\r\n                :options=\"reportOptions\"\r\n              >\r\n                <template v-slot:first>\r\n                  <option :value=\"null\">All Reports</option>\r\n                </template>\r\n              </b-form-select>\r\n              <!-- Marketplace -->\r\n              <label class=\"d-inline ml-5 mb-0 pr-2\">Marketplace:</label>\r\n              <b-form-select\r\n                @change=\"\r\n                  params.page = 1\r\n                  marketplaceChange()\r\n                \"\r\n                v-model=\"params.marketplace\"\r\n                :options=\"marketplaceOptions\"\r\n              >\r\n                <template v-slot:first>\r\n                  <option :value=\"null\">All Marketplace</option>\r\n                </template>\r\n              </b-form-select>\r\n              <!-- Brand -->\r\n              <label class=\"d-inline ml-5 mb-0 pr-2\">Brand:</label>\r\n              <b-form-select\r\n                @change=\"\r\n                  params.page = 1\r\n                  paramsChange()\r\n                \"\r\n                v-model=\"params.brand_name\"\r\n                :options=\"brandOptions\"\r\n              >\r\n                <template v-slot:first>\r\n                  <option :value=\"null\">All Brands</option>\r\n                </template>\r\n              </b-form-select>\r\n              <!-- Search -->\r\n              <label class=\"d-inline mb-0 pr-2 pl-2 ml-5\">Search:</label>\r\n              <b-form-input\r\n                @keyup.enter=\"\r\n                  params.page = 1\r\n                  paramsChange()\r\n                \"\r\n                placeholder=\"Enter keyword\"\r\n                ref=\"inputSearch\"\r\n                v-model.trim=\"params.search\"\r\n              ></b-form-input>\r\n              <i\r\n                v-show=\"params.search\"\r\n                @click=\"\r\n                  params.page = 1\r\n                  params.search = ''\r\n                  paramsChange()\r\n                \"\r\n                class=\"icon-close cancel-icon\"\r\n              ></i>\r\n              <b-input-group-append>\r\n                <b-button\r\n                  @click=\"\r\n                    params.page = 1\r\n                    paramsChange()\r\n                  \"\r\n                >\r\n                  <i class=\"icons icon-magnifier\"></i>\r\n                </b-button>\r\n              </b-input-group-append>\r\n            </b-input-group>\r\n          </b-form-group>\r\n        </b-col>\r\n      </b-row>\r\n      <b-table\r\n        :dark=\"dark\"\r\n        :hover=\"hover\"\r\n        striped\r\n        :small=\"small\"\r\n        outlined\r\n        responsive=\"sm\"\r\n        thead-class=\"thead-light\"\r\n        :items=\"getItems\"\r\n        :fields=\"captions\"\r\n        show-empty\r\n        class=\"overflow-auto\"\r\n      >\r\n        <template v-slot:empty>\r\n          <LoadingSpinner :isLoading=\"mapPricingLoading\" v-if=\"mapPricingLoading\"/>\r\n          <div class=\"align-middle d-flex justify-content-center align-items-center\" v-else>No MAP</div>\r\n        </template>\r\n        <template v-slot:head(selected)>\r\n          <b-form-checkbox v-model=\"allSelected\" />\r\n        </template>\r\n        <template v-slot:cell(selected)=\"row\">\r\n          <b-form-checkbox\r\n            :key=\"row.index\"\r\n            :value=\"row.item.id\"\r\n            v-model=\"selectedMaps\"\r\n          />\r\n        </template>\r\n        <template class=\"align-items-baseline\" v-slot:cell(asin)=\"data\">\r\n          <span class=\"mr-1\">{{ data.item.asin }}</span>\r\n          <a\r\n            class=\"text-decoration-none text-wrap d-inline-block\"\r\n            target=\"_blank\"\r\n            :href=\"generateAmazonLink(data.item.marketplace, data.item.asin)\"\r\n            v-if=\"data.item.asin\"\r\n            >A<i class=\"fa fa-link\" aria-hidden=\"true\"></i\r\n          ></a>\r\n        </template>\r\n        <template class=\"align-items-baseline\" v-slot:cell(price)=\"data\"\r\n          >{{ data.item.price ? currency(data.item.marketplace) : '' }}\r\n          {{ data.item.price | formatNumber }}</template\r\n        >\r\n        <template v-slot:cell(active)=\"row\">\r\n          <b-form-checkbox\r\n            v-model=\"row.item.active\"\r\n            :disabled=\"true\"\r\n          ></b-form-checkbox>\r\n        </template>\r\n        <template v-slot:cell(last_violation_checked)=\"data\">\r\n          <div class=\"float-left\" v-if=\"data.item.has_processed\">\r\n            {{ data.item.last_violation_checked | moment('MM/DD/YYYY') }}\r\n          </div>\r\n          <div class=\"float-left\" v-else>N/A</div>\r\n          <i\r\n            v-if=\"data.item.has_processed\"\r\n            class=\"\r\n              icon-check\r\n              icons\r\n              rounded-circle\r\n              bg-success\r\n              custom_icon\r\n              float-left\r\n              ml-2\r\n            \"\r\n          ></i>\r\n          <i\r\n            v-if=\"!data.item.has_processed\"\r\n            class=\"\r\n              icon-clock\r\n              icons\r\n              rounded-circle\r\n              bg-secondary\r\n              custom_icon\r\n              float-left\r\n              ml-2\r\n            \"\r\n          ></i>\r\n        </template>\r\n        <template v-slot:cell(type)=\"data\">\r\n          <span class=\"badge badge-secondary\">{{\r\n            convertToUpperCase(data.item.type)\r\n          }}</span>\r\n        </template>\r\n        <template v-slot:cell(discovered_asins)=\"row\">\r\n          <ul\r\n            class=\"mb-0 w-100 p-0\"\r\n            v-for=\"(itemAsin, index) in row.item.discovered_asins\"\r\n            :key=\"index\"\r\n            style=\"list-style-position: inside; list-style-type: none\"\r\n          >\r\n            <li class=\"text-truncate max-width-300\">\r\n              {{ itemAsin.asin }} on ({{ itemAsin.date | moment('MM/DD/YYYY') }})\r\n            </li>\r\n          </ul>\r\n        </template>\r\n        <template\r\n          v-slot:cell(actions)=\"row\"\r\n          v-if=\"getPermissions.module_enabled && getPermissions.permissions.mapman\"\r\n        >\r\n          <div>\r\n            <b-dropdown variant=\"primary\" size=\"sm\" split text=\"Edit\" @click=\"handleEditMap(row.item.id)\" class=\"drp-actions\">\r\n              <b-dropdown-item variant=\"danger\" @click=\"$bvModal.show('modal-confirm-delete-map'), mapId = row.item.id\">\r\n                <i class=\"icon-trash cls-icon-trash\"></i>Remove\r\n              </b-dropdown-item>\r\n            </b-dropdown>\r\n          </div>\r\n        </template>\r\n        <template v-slot:view>\r\n          <b-button class=\"mr-1 my-1\" variant=\"primary\">\r\n            <i class=\"fa fa-window-restore fa-lg\"></i> Revision\r\n          </b-button>\r\n        </template>\r\n      </b-table>\r\n      <b-modal\r\n        title=\"Please confirm\"\r\n        centered\r\n        id=\"modal-confirm-delete-map\"\r\n        @ok=\"handleRemoveMap(mapId)\"\r\n        ok-variant=\"danger\"\r\n      >\r\n        Are you sure you want to remove this MAP?\r\n        <template v-slot:modal-footer=\"{ ok, cancel }\">\r\n          <b-button variant=\"warning\" @click=\"ok()\">\r\n            <i class=\"icon-check\"></i> Yes, I understand &amp; confirm!\r\n          </b-button>\r\n          <b-button variant @click=\"cancel()\">\r\n            <i class=\"icon-close\"></i> No\r\n          </b-button>\r\n        </template>\r\n      </b-modal>\r\n      <b-modal\r\n        title=\"Please confirm\"\r\n        centered\r\n        id=\"modal-confirm-remove-multi\"\r\n        @ok=\"handleRemoveMulti\"\r\n      >\r\n        Are you sure you want to remove all selected MAPs?\r\n        <template v-slot:modal-footer=\"{ ok, cancel }\">\r\n          <b-button variant=\"danger\" @click=\"ok()\">\r\n            <i class=\"icon-check\"></i> Yes, I understand &amp; confirm!\r\n          </b-button>\r\n          <b-button variant @click=\"cancel()\">\r\n            <i class=\"icon-close\"></i> No\r\n          </b-button>\r\n        </template>\r\n      </b-modal>\r\n      <nav\r\n        class=\"d-flex justify-content-center\"\r\n        v-if=\"listMaps.total > listMaps.page_size && listMaps.items.length > 0\"\r\n      >\r\n        <b-pagination\r\n          :total-rows=\"listMaps.total\"\r\n          :per-page=\"params.limit\"\r\n          v-model=\"params.page\"\r\n          prev-text=\"Prev\"\r\n          next-text=\"Next\"\r\n          hide-goto-end-buttons\r\n          @change=\";(params.page = $event), paramsChange()\"\r\n          limit=\"10\"\r\n          hide-ellipsis\r\n        />\r\n      </nav>\r\n    </b-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex'\r\nimport vToasted from '@/shared/notification'\r\nimport * as TYPE from '@/actionTypes.js'\r\nimport _ from 'lodash'\r\nimport _nav from '@/_nav'\r\nimport { MarketPlacesCurrency } from '@/constants/Report'\r\nimport LoadingSpinner from '@/components/common/LoadingSpinner'\r\n\r\nexport default {\r\n  name: 'c-table',\r\n  inheritAttrs: false,\r\n  mixins: [vToasted],\r\n  props: {\r\n    caption: {\r\n      type: String,\r\n      default: 'Table'\r\n    },\r\n    hover: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    striped: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    bordered: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    small: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    fixed: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    tableData: {\r\n      type: [Array, Function],\r\n      default: () => []\r\n    },\r\n    fields: {\r\n      type: [Array, Object],\r\n      default: () => []\r\n    },\r\n    dark: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    totalRows: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    handleChangePage: {\r\n      type: [Function]\r\n    }\r\n  },\r\n  data: () => {\r\n    return {\r\n      MarketPlacesCurrency,\r\n      params: null,\r\n      validReports: [],\r\n      brandNames: [],\r\n      nav: _nav,\r\n      mapId: null,\r\n      selectedMaps: []\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getPermissions: `mw/${TYPE.GET_PERMISSIONS}`,\r\n      planConfig: `mw/${TYPE.GET_PLAN_CONFIG}`,\r\n      organizationStats: `mw/${TYPE.GET_ORGANIZATION_STATS}`,\r\n      defaultParams: `mw/maps/${TYPE.GET_DEFAULT_AMAZON_MAP_PARAMS}`,\r\n      reportList: `mw/reports/${TYPE.GET_LIST_REPORTS}`,\r\n      listMaps: `mw/maps/${TYPE.GET_MAPS}`,\r\n      mapPricingLoading: `mw/maps/${TYPE.GET_MAP_PRICING_LOADING}`\r\n    }),\r\n    captions: function () {\r\n      const { fields } = this\r\n      return this.params.marketplace\r\n        ? fields\r\n        : fields.filter((f) => f.key !== 'name')\r\n    },\r\n    getItems: function () {\r\n      return this.listMaps.items\r\n    },\r\n    allSelected: {\r\n      get: function () {\r\n        let items = this.getItems\r\n        return !_.isEmpty(items) && items.length === this.selectedMaps.length\r\n      },\r\n      set: function (newValue) {\r\n        let items = this.getItems\r\n        this.selectedMaps = newValue ? items.map((item) => item.id) : items.length === this.selectedMaps.length ? [] : this.selectedMaps\r\n      }\r\n    },\r\n    sharableRoute() {\r\n      const routeRegrex = /\\/share\\//\r\n      return routeRegrex.test(this.$route.path) ? 'Share' : ''\r\n    },\r\n    reportOptions() {\r\n      return this.validReports.map((item) => ({\r\n        value: item._id,\r\n        text: item.name_in_dashboard\r\n      }))\r\n    },\r\n    marketplaceOptions() {\r\n      const selectedReports = this.params.report_id\r\n        ? [_.find(this.validReports, { _id: this.params.report_id })]\r\n        : this.validReports\r\n      let supportedMarkets = []\r\n      _.forEach(selectedReports, (report) => {\r\n        const markets = _.get(report, 'marketplaces')\r\n        _.forEach(_.keys(markets), (marketKey) => {\r\n          const marketplace = marketKey.replaceAll('_', '.') // amazon.com\r\n          markets[marketKey] &&\r\n            !supportedMarkets.includes(marketplace) &&\r\n            supportedMarkets.push(marketplace)\r\n        })\r\n      })\r\n      return _.isEmpty(this.planConfig)\r\n        ? supportedMarkets\r\n          .map((market) => ({ value: market, text: _.upperFirst(market) })) // not sort marketplaces\r\n        : this.planConfig.allowed_amazon_marketplaces\r\n          .filter((market) => supportedMarkets.includes(market))\r\n          .map((market) => ({ value: market, text: _.upperFirst(market) })) // sorted marketplaces\r\n    },\r\n    brandOptions() {\r\n      return this.brandNames.map((name) => ({\r\n        value: name === '' ? -1 : name,\r\n        text: name\r\n      }))\r\n    },\r\n    currency() {\r\n      // TODO later on, currency needs to be supported from backend.\r\n      return (marketplace) => MarketPlacesCurrency[marketplace]\r\n    }\r\n  },\r\n  components: {\r\n    LoadingSpinner\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      fetchMaps: `mw/maps/${TYPE.FETCH_LIST_MAPS}`,\r\n      fetchReports: `mw/reports/${TYPE.FETCH_LIST_REPORTS}`,\r\n      fetchValidAmazonReport: `mw/reports/${TYPE.GET_VALID_AMAZON_REPORTS}`,\r\n      removeMap: `mw/maps/${TYPE.REMOVE_MAP}`,\r\n      fetchUrlDownload: `mw/maps/${TYPE.FETCH_URL_EXPORT}`,\r\n      updateTotalGSMap: `mw/maps/${TYPE.UPDATE_TOTAL_GS_MAP}`,\r\n      fetchBrandNames: `mw/maps/${TYPE.GET_BRAND_NAMES}`,\r\n      fetchPermissions: `mw/${TYPE.FETCH_PERMISSIONS}`\r\n    }),\r\n    convertToUpperCase: function (str) {\r\n      return _.upperCase(str)\r\n    },\r\n    sortChange(event) {\r\n      this.params.searchort_by = event.sortBy\r\n      if (event.sortBy) {\r\n        this.params.searchort_dir = event.sortDesc ? 'desc' : 'asc'\r\n      } else {\r\n        this.params.searchort_dir = null\r\n      }\r\n      this.paramsChange()\r\n    },\r\n    syncParams() {\r\n      this.paramsChange()\r\n    },\r\n    async paramsChange() {\r\n      await this.fetchMaps(this.params)\r\n      this.$router.push(\r\n        {\r\n          params: {\r\n            client_id: this.nav.clientId\r\n          },\r\n          query: this.keepShareTokenForQuery({\r\n            search: this.params.search,\r\n            report_id: this.params.report_id,\r\n            limit: this.params.limit ? this.params.limit : 100,\r\n            page: this.params.page ? this.params.page : 1,\r\n            marketplace: this.params.marketplace,\r\n            brand_name: this.params.brand_name\r\n          })\r\n        },\r\n        () => {}\r\n      )\r\n    },\r\n    async reportChange() {\r\n      this.params.marketplace = null\r\n      this.params.brand_name = null\r\n      await this.reloadBrandNames()\r\n      await this.paramsChange()\r\n    },\r\n    async marketplaceChange() {\r\n      this.params.brand_name = null\r\n      await this.reloadBrandNames()\r\n      await this.paramsChange()\r\n    },\r\n    keepShareTokenForQuery(query) {\r\n      if (this.$route.query.share_token) {\r\n        _.assign(query, { share_token: this.$route.query.share_token })\r\n      }\r\n      return query\r\n    },\r\n    async fetchUniqAmazonReport() {\r\n      this.validReports = await this.fetchValidAmazonReport(\r\n        this.keepShareTokenForQuery({})\r\n      )\r\n      this.reloadBrandNames()\r\n    },\r\n    async reloadBrandNames() {\r\n      this.brandNames = await this.fetchBrandNames({\r\n        report_id: this.params.report_id,\r\n        marketplace: this.params.marketplace\r\n      })\r\n    },\r\n    async handleOpenModelDownload() {\r\n      try {\r\n        const res = await this.fetchUrlDownload(this.keepShareTokenForQuery({ ...this.$route.query }))\r\n        window.location.href = res.url\r\n      } catch (error) {\r\n        this.vToasted('error', error.message)\r\n      }\r\n    },\r\n    handleEditMap(mapId) {\r\n      this.$router.push({\r\n        name: `MW${this.sharableRoute}EditMaps`,\r\n        params: { client_id: this.nav.clientId, id: mapId },\r\n        query: { ...this.$route.query }\r\n      })\r\n    },\r\n    async handleRemoveMap(mapId) {\r\n      try {\r\n        await this.removeMap(mapId)\r\n        this.vToasted('success', `This MAP has been removed successfully.`)\r\n        await this.fetchPermissions()\r\n      } catch (error) {\r\n        this.vToasted('error', error.data.message)\r\n      }\r\n    },\r\n    handleRemoveMulti() {\r\n      let allRemove = this.selectedMaps.map((mapId) => this.removeMap(mapId))\r\n      Promise.all(allRemove)\r\n        .then((values) => {\r\n          const newTotalGSmaps = this.listMaps.total - this.selectedMaps.length\r\n          this.updateTotalGSMap(newTotalGSmaps)\r\n          this.vToasted(\r\n            'success',\r\n            `All selected MAPs have been removed successfully.`\r\n          )\r\n          this.selectedMaps = []\r\n        })\r\n        .catch((error) => {\r\n          this.vToasted('error', error.data.message)\r\n        })\r\n    },\r\n    generateAmazonLink(marketplace, asin) {\r\n      return 'https://www.' + marketplace + '/gp/offer-listing/' + asin\r\n    }\r\n  },\r\n  created() {\r\n    this.params = _.defaultsDeep(this.$route.query, this.defaultParams)\r\n    this.syncParams()\r\n    this.fetchUniqAmazonReport()\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.map-list-title {\r\n  position: relative;\r\n  top: 4px;\r\n}\r\n.dropdown-action {\r\n  margin: 0 !important;\r\n}\r\n.btn-loader {\r\n  width: 12px !important;\r\n  height: 12px !important;\r\n  border-width: 1px !important;\r\n}\r\n.drp-actions ::v-deep {\r\n  .dropdown-menu {\r\n    min-width: 50%;\r\n    height: auto;\r\n    .cls-icon-trash {\r\n      color: #DC3545;\r\n      margin-right: 5px;\r\n    }\r\n    .dropdown-item {\r\n      padding: 6px 15px;\r\n      font-size: 12px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/page/maps"}]}