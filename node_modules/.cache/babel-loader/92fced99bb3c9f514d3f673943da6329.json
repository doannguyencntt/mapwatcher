{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\dashboard\\DashboardHistorical.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\dashboard\\DashboardHistorical.vue","mtime":1626264502271},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1626076746842},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport _slicedToArray from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapActions } from 'vuex';\nimport * as TYPE from '@/actionTypes.js';\nimport $ from 'jquery';\nimport { Promise } from 'q';\nimport _ from 'lodash';\nimport { DashboardFilterSourceType } from '@/constants/Report';\nimport { DashboardViolatorTitle, DashboardAllSellerTitle, DashboardWidgetId } from '@/constants/Dashboard';\nexport default {\n  props: ['selected'],\n  data: function data() {\n    return {\n      dashboardFilterSourceType: _.cloneDeep(DashboardFilterSourceType),\n      dashboardAllSellerTitle: _.cloneDeep(DashboardAllSellerTitle),\n      dashboardViolatorTitle: _.cloneDeep(DashboardViolatorTitle),\n      dashboardWidgetId: _.cloneDeep(DashboardWidgetId),\n      dates: [],\n      loader: false,\n      selectedDate: null,\n      sdkConfigInitialized: false,\n      sdkConfigForceReload: 0\n    };\n  },\n  name: 'MWDashboardHistorical',\n  computed: _objectSpread({}, mapGetters({\n    dataHistoricalTable: \"mw/dashboard/\".concat(TYPE.GET_DATA_HISTORICAL),\n    dataDateHistorical: \"mw/dashboard/\".concat(TYPE.GET_DATE_HISTORICAL),\n    dataNumberViolations: \"mw/dashboard/\".concat(TYPE.GET_DATA_NUMBER_OF_VIOLATIONS),\n    dataNumberViolationsViolators: \"mw/dashboard/\".concat(TYPE.GET_DATA_NUMBER_OF_VIOLATIONS_VIOLATORS),\n    mainConfig: \"mw/dashboard/\".concat(TYPE.GET_DATA_CONFIG_HISTORICAL)\n  })),\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    fetchDataHistoricalTable: \"mw/dashboard/\".concat(TYPE.FETCH_DATA_HISTORICAL),\n    fetchDataDateHistorical: \"mw/dashboard/\".concat(TYPE.FETCH_DATE_HISTORICAL),\n    fetchDataNumberViolations: \"mw/dashboard/\".concat(TYPE.FETCH_DATA_NUMBER_OF_VIOLATIONS),\n    fetchDataNumberViolationsViolators: \"mw/dashboard/\".concat(TYPE.FETCH_DATA_NUMBER_OF_VIOLATIONS_VIOLATORS),\n    downloadDailyViolations: \"mw/dashboard/\".concat(TYPE.FETCH_DOWNLOAD_DAILY_VIOLATIONS),\n    setSelectedDate: \"mw/dashboard/\".concat(TYPE.SET_SELECTED_DATE)\n  })), {}, {\n    handleDataHistorical: function handleDataHistorical(marketplace) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this.fetchDataHistoricalTable(_this.useShareTokenIfNeed({\n          date: _this.selectedDate ? _this.$moment(_this.selectedDate).format('YYYY-MM-DD') : null,\n          marketplace: marketplace,\n          brand_id: _this.selected.brand._id,\n          seller_type: _this.selected.seller_type,\n          show_upc_in_dashboard: _this.selected.brand.show_upc_in_dashboard\n        })).then(function () {\n          var fakeHistorical = _objectSpread({}, _this.dataHistoricalTable);\n\n          fakeHistorical = _this.emptyRowData(fakeHistorical, _this.getIgnoredColumnsHistorical(_this.selected.brand));\n\n          if (_this.selected.brand && !_this.selected.brand.show_upc_in_dashboard) {\n            fakeHistorical = _this.removeColumnData(fakeHistorical, ['upc/ean']);\n          }\n\n          window.mw_historical_data_table = fakeHistorical;\n          resolve();\n        });\n      });\n    },\n    // remove column from table data\n    removeColumnData: function removeColumnData(data) {\n      var cols = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      if (!cols.length || !data || !data.cols || !data.rows) return data;\n      var names = data.cols.map(function (d) {\n        return d.name;\n      });\n      var indexs = cols.reduce(function (a, c) {\n        if (names.includes(c)) a.push(names.indexOf(c));\n        return a;\n      }, []).filter(function (e) {\n        return e >= 0;\n      });\n      indexs.forEach(function (i) {\n        data.rows = data.rows.map(function (r) {\n          r[i] = null;\n          return r;\n        });\n      });\n      return data;\n    },\n    findWidgetByLabel: function findWidgetByLabel(widgetArray, label) {\n      var _this2 = this;\n\n      var flag;\n      widgetArray.forEach(function (widget) {\n        if (widget.config.widgets && widget.config.widgets.length > 0) {\n          var result = _this2.findWidgetByLabel(widget.config.widgets, label); // eslint-disable-next-line no-unused-expressions\n\n\n          result ? flag = result : '';\n        } else if (label === widget.config.widget.title.text) {\n          flag = widget;\n        }\n      });\n      return flag;\n    },\n    handleCaseRemoveColumn: function handleCaseRemoveColumn(widgetName, arrayLabel) {\n      var widget = this.findWidgetByLabel(window.mw_dashboard_main_config.widgetLayout.widgets, widgetName);\n      widget.config.elements[0].config.columns = this.removeColumnByLabel(widget.config.elements[0].config.columns, arrayLabel);\n    },\n    removeColumnByLabel: function removeColumnByLabel(arrayColumn, arrayLabel) {\n      return arrayColumn.filter(function (column) {\n        return !arrayLabel.includes(column.name);\n      });\n    },\n    useShareTokenIfNeed: function useShareTokenIfNeed(object) {\n      if (this.selected.share_token) {\n        _.assign(object, {\n          share_token: this.selected.share_token\n        });\n      }\n\n      _.assign(object, {\n        source: this.selected.source\n      });\n\n      _.assign(object, {\n        is_true_map: !!this.selected.brand.true_map_report\n      });\n\n      return object;\n    },\n    getIgnoredColumnsHistorical: function getIgnoredColumnsHistorical(brand) {\n      var ignoredColumns = [];\n\n      if (brand && brand.ignore_price_tracking) {\n        ignoredColumns.push('map_price', 'diff', 'diff_percent');\n      }\n\n      return ignoredColumns;\n    },\n    handleDataNumberOfViolationsViolators: function handleDataNumberOfViolationsViolators(marketplace) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this3.fetchDataNumberViolationsViolators(_this3.useShareTokenIfNeed({\n          marketplace: marketplace,\n          brand_id: _this3.selected.brand._id,\n          seller_type: _this3.selected.seller_type\n        })).then(function () {\n          window.mw_historical_number_of_violation_violator = _this3.dataNumberViolationsViolators;\n          resolve();\n        });\n      });\n    },\n    handleDataNumberViolations: function handleDataNumberViolations(marketplace) {\n      var _this4 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this4.fetchDataNumberViolations(_this4.useShareTokenIfNeed({\n          marketplace: marketplace,\n          brand_id: _this4.selected.brand._id,\n          seller_type: _this4.selected.seller_type\n        })).then(function () {\n          window.mw_historical_number_of_violations = _this4.dataNumberViolations;\n          resolve();\n        });\n      });\n    },\n    emptyRowData: function emptyRowData(data) {\n      var cols = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      if (!cols.length || !data || !data.cols || !data.rows) return data;\n      var names = data.cols.map(function (d) {\n        return d.name;\n      });\n      var indexs = cols.reduce(function (a, c) {\n        if (names.includes(c)) a.push(names.indexOf(c));\n        return a;\n      }, []).filter(function (e) {\n        return e >= 0;\n      });\n      indexs.forEach(function (i) {\n        data.rows = data.rows.map(function (r) {\n          r[i] = null;\n          return r;\n        });\n      });\n      return data;\n    },\n    syncMarketplaceParams: function syncMarketplaceParams(marketplace) {\n      return _.includes(marketplace, 'amazon') ? marketplace.replace(/[_]/g, '.') : marketplace;\n    },\n    _fetchDashboardWidgetData: function () {\n      var _fetchDashboardWidgetData2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this5 = this;\n\n        var marketplace, isTrueMap, promises;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                marketplace = this.syncMarketplaceParams(this.selected.marketplace);\n                isTrueMap = !!this.selected.brand.true_map_report;\n                promises = [this.handleDataHistorical(marketplace)];\n\n                if (isTrueMap) {\n                  promises.push(this.handleDataNumberOfViolationsViolators(marketplace));\n                  promises.push(this.handleDataNumberViolations(marketplace));\n                }\n\n                _context.next = 6;\n                return Promise.all(promises).then(function () {\n                  var widgets = _this5.mainConfig.widgetLayout.widgets;\n\n                  var _iterator = _createForOfIteratorHelper(widgets.entries()),\n                      _step;\n\n                  try {\n                    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                      var _step$value = _slicedToArray(_step.value, 2),\n                          index = _step$value[0],\n                          widget = _step$value[1];\n\n                      var widgetId = widget.config.widget_id;\n\n                      if (widgetId) {\n                        var text = _this5.selected.source === _this5.dashboardFilterSourceType.ALL_SELLERS ? _this5.dashboardAllSellerTitle[widgetId] : _this5.dashboardViolatorTitle[widgetId];\n                        _this5.mainConfig.widgetLayout.widgets[index].config.widget.title.text = text;\n                      }\n                    }\n                  } catch (err) {\n                    _iterator.e(err);\n                  } finally {\n                    _iterator.f();\n                  }\n\n                  window.mw_dashboard_main_config = $.extend(true, {}, _this5.mainConfig);\n\n                  if (!isTrueMap) {\n                    var cloneWidgets = _.clone(_this5.mainConfig.widgetLayout.widgets);\n\n                    window.mw_dashboard_main_config.widgetLayout.widgets = _.filter(cloneWidgets, function (item) {\n                      return !_.includes([_this5.dashboardWidgetId.number_of_violations_per_seller, _this5.dashboardWidgetId.number_of_violations_violators], item.config.widget_id);\n                    });\n                  }\n\n                  if (!_this5.sdkConfigInitialized) {\n                    // for first time\n                    _this5.sdkConfigInitialized = true;\n                  } else {\n                    // change dataSource effect to sdk\n                    _this5.sdkConfigForceReload++;\n                  }\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function _fetchDashboardWidgetData() {\n        return _fetchDashboardWidgetData2.apply(this, arguments);\n      }\n\n      return _fetchDashboardWidgetData;\n    }(),\n    _renderDashboardWidgets: function _renderDashboardWidgets() {\n      if (this.selected.brand && !this.selected.brand.show_upc_in_dashboard) {\n        this.handleCaseRemoveColumn('Historical Data Table', ['upc/ean']);\n      }\n\n      var isTrueMap = !!this.selected.brand.true_map_report;\n\n      if (!isTrueMap) {\n        this.handleCaseRemoveColumn('Historical Data Table', ['map_price', 'diff', 'diff_percent']);\n      } // let el = $(this.$el).find('.widgets-container:eq(0)')\n      // el.html(\n      //   '<cbpo-dashboard config-ref=\"mw_dashboard_main_config\" class=\"mw-sdk-styled\" />'\n      // )\n      // this.$CBPO.wgManager().init('.widgets-container')\n      // this.$forceUpdate()\n\n\n      this.sdkConfigForceReload++;\n    },\n    fetchAndRenderDashboardWidgets: function () {\n      var _fetchAndRenderDashboardWidgets = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this._fetchDashboardWidgetData();\n\n              case 2:\n                this._renderDashboardWidgets();\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function fetchAndRenderDashboardWidgets() {\n        return _fetchAndRenderDashboardWidgets.apply(this, arguments);\n      }\n\n      return fetchAndRenderDashboardWidgets;\n    }(),\n    fetchDate: function () {\n      var _fetchDate = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var marketplace;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                marketplace = this.syncMarketplaceParams(this.selected.marketplace);\n                _context3.next = 3;\n                return this.fetchDataDateHistorical(this.useShareTokenIfNeed({\n                  marketplace: marketplace,\n                  brand_id: this.selected.brand._id,\n                  seller_type: this.selected.seller_type,\n                  fulfillment: this.selected.fulfillment\n                }));\n\n              case 3:\n                this.dates = this.dataDateHistorical.dates;\n\n                if (this.dates.length > 0) {\n                  this.selectedDate = this.dates[0];\n                } else {\n                  this.selectedDate = null;\n                }\n\n                this.setSelectedDate(this.selectedDate);\n                this.fetchAndRenderDashboardWidgets();\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function fetchDate() {\n        return _fetchDate.apply(this, arguments);\n      }\n\n      return fetchDate;\n    }(),\n    dateChange: function dateChange(e) {\n      this.selectedDate = e.target.value;\n      this.setSelectedDate(this.selectedDate);\n      this.fetchAndRenderDashboardWidgets();\n    },\n    createEventButtonAction: function createEventButtonAction() {\n      var _this6 = this;\n\n      // Download button DAILY VIOLATOR widget\n      this.$CBPO.$bus.$on(\"trigger_button_history_\".concat(TYPE.DOWNLOAD_DAILY_VIOLATIONS), function () {\n        var marketplace = _this6.syncMarketplaceParams(_this6.selected.marketplace);\n\n        _this6.$CBPO.$bus.$emit(TYPE.DOWNLOAD_DAILY_VIOLATIONS + '_stateChange', true);\n\n        _this6.downloadDailyViolations(_this6.useShareTokenIfNeed({\n          date: _this6.selectedDate,\n          marketplace: marketplace,\n          brand_id: _this6.selected.brand._id,\n          seller_type: _this6.selected.seller_type,\n          fulfillment: _this6.selected.fulfillment\n        })).then(function (link) {\n          _this6.$CBPO.$bus.$emit(TYPE.DOWNLOAD_DAILY_VIOLATIONS + '_stateChange', false);\n\n          if (link && link.uri) {\n            var a = document.createElement('a');\n            a.href = link.uri;\n            a.click();\n          }\n\n          _this6.$CBPO.$bus.$emit(TYPE.DOWNLOAD_DAILY_VIOLATIONS + '_stateChange', false);\n        });\n      });\n    }\n  }),\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              this.fetchDate();\n              this.createEventButtonAction();\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  watch: {\n    '$route.query': function $routeQuery(val) {\n      this.fetchDate();\n    }\n  },\n  destroyed: function destroyed() {\n    this.$CBPO.$bus.$off(\"trigger_button_history_\".concat(TYPE.DOWNLOAD_DAILY_VIOLATIONS));\n  }\n};",null]}