{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Project\\CBPO\\plat-mw-web\\src\\store\\modules\\page\\maps\\index.js","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\store\\modules\\page\\maps\\index.js","mtime":1639628727995},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1626076679949}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _toConsumableArray from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.find-index\";\nimport _defineProperty from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _getters, _mutations, _actions;\n\nimport * as TYPE from '@/actionTypes';\nimport { MW_API } from '@/service';\nimport * as URL from '@/service/_constant';\nimport * as utils from '@/shared/utils';\nimport _ from 'lodash';\nimport { MarketPlacesResult } from '@/constants/Report';\nvar state = {\n  listMapPrice: {},\n  listGSMapPrice: {},\n  process: {},\n  loadingDownload: false,\n  defaultParams: {\n    page: 1,\n    limit: 100,\n    search: null,\n    report_id: null,\n    sort_by: null,\n    sort_dir: null,\n    marketplace: MarketPlacesResult.AMAZON_COM,\n    brand_name: null\n  },\n  defaultAmazonMapParams: {\n    page: 1,\n    limit: 100,\n    search: null,\n    report_id: null,\n    sort_by: null,\n    sort_dir: null,\n    marketplace: null,\n    brand_name: null\n  },\n  mapData: {},\n  gsMapData: {},\n  caMapData: {},\n  isLoadingMap: false,\n  isLoadingMapGs: false,\n  listDiscoveredGPID: []\n};\nvar getters = (_getters = {}, _defineProperty(_getters, TYPE.GET_MAPS, function (state) {\n  return state.listMapPrice;\n}), _defineProperty(_getters, TYPE.GET_GS_MAPS, function (state) {\n  return state.listGSMapPrice;\n}), _defineProperty(_getters, TYPE.GET_ONE_MAP, function (state) {\n  return state.mapData;\n}), _defineProperty(_getters, TYPE.GET_ONE_GS_MAP, function (state) {\n  return state.gsMapData;\n}), _defineProperty(_getters, TYPE.GET_PROCESS_MAPS, function (state) {\n  return state.process;\n}), _defineProperty(_getters, TYPE.GET_DEFAULT_PARAMS, function (state) {\n  return state.defaultParams;\n}), _defineProperty(_getters, TYPE.GET_DEFAULT_AMAZON_MAP_PARAMS, function (state) {\n  return state.defaultAmazonMapParams;\n}), _defineProperty(_getters, TYPE.GET_MAP_PRICING_LOADING, function (state) {\n  return state.isLoadingMap;\n}), _defineProperty(_getters, TYPE.GET_MAP_PRICING_GS_LOADING, function (state) {\n  return state.isLoadingMapGs;\n}), _defineProperty(_getters, TYPE.GET_LIST_DISCOVERED_GPID, function (state) {\n  return state.listDiscoveredGPID;\n}), _getters);\nvar mutations = (_mutations = {}, _defineProperty(_mutations, TYPE.SET_LIST_MAPS, function (state, listMapPrice) {\n  state.listMapPrice = listMapPrice;\n}), _defineProperty(_mutations, TYPE.SET_LIST_GS_MAPS, function (state, listGSMapPrice) {\n  state.listGSMapPrice = listGSMapPrice;\n}), _defineProperty(_mutations, TYPE.SET_ONE_MAP, function (state, mapData) {\n  state.mapData = mapData;\n}), _defineProperty(_mutations, TYPE.SET_ONE_GS_MAP, function (state, gsMapData) {\n  state.gsMapData = gsMapData;\n}), _defineProperty(_mutations, TYPE.SET_PROCESS_MAPS, function (state, process) {\n  state.process = process;\n}), _defineProperty(_mutations, TYPE.SET_URL_EXPORT, function (state, _ref) {\n  var loading = _ref.loading;\n  state.loadingDownload = loading;\n}), _defineProperty(_mutations, TYPE.SET_URL_GS_MAP_EXPORT, function (state, _ref2) {\n  var loading = _ref2.loading;\n  state.loadingDownload = loading;\n}), _defineProperty(_mutations, TYPE.UPDATE_TOTAL_GS_MAP, function (state, data) {\n  state.listGSMapPrice.total = data;\n}), _defineProperty(_mutations, TYPE.SET_LIST_MAPS_TOTAL, function (state, total) {\n  state.listMapPrice.total = total;\n}), _defineProperty(_mutations, TYPE.SET_MAP_PRICING_LOADING, function (state, payload) {\n  state.isLoadingMap = payload;\n}), _defineProperty(_mutations, TYPE.SET_MAP_PRICING_GS_LOADING, function (state, payload) {\n  state.isLoadingMapGs = payload;\n}), _defineProperty(_mutations, TYPE.UPDATE_LIST_DISCOVERED_GPID, function (state, payload) {\n  var mapIndex = _.findIndex(state.listGSMapPrice.items, function (item) {\n    return item.id === payload.id;\n  });\n\n  state.listGSMapPrice.items[mapIndex].discovered_gpids = payload.discovered_gpids;\n  state.listDiscoveredGPID = state.listGSMapPrice.items[mapIndex].discovered_gpids;\n}), _defineProperty(_mutations, TYPE.RESET_LIST_DISCOVERED_GPID, function (state, payload) {\n  state.listDiscoveredGPID = payload;\n}), _mutations);\n\nvar getShareToken = function getShareToken(payload) {\n  var token = _.has(payload, 'share_token') ? payload.share_token : null;\n\n  if (token) {\n    payload = _.omit(payload, ['share_token']);\n  }\n\n  var config = token ? {\n    share_token: token\n  } : {};\n  return {\n    config: config,\n    oriPayload: payload\n  };\n};\n\nvar actions = (_actions = {}, _defineProperty(_actions, TYPE.FETCH_LIST_MAPS, function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref3, params) {\n    var commit, _getShareToken, config, oriPayload, res;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref3.commit;\n            params = _.assign({}, state.defaultAmazonMapParams, params);\n            commit(TYPE.SET_MAP_PRICING_LOADING, true);\n            _context.prev = 3;\n            _getShareToken = getShareToken(params), config = _getShareToken.config, oriPayload = _getShareToken.oriPayload;\n            _context.next = 7;\n            return MW_API.get(\"\".concat(URL.GET_MAPS(), \"?\").concat(utils.buildUrlQueryString(oriPayload)), config);\n\n          case 7:\n            res = _context.sent;\n            commit(TYPE.SET_LIST_MAPS, res.data);\n            commit(TYPE.SET_MAP_PRICING_LOADING, false);\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](3);\n            console.log(_context.t0);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 12]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref4.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.FETCH_LIST_GS_MAPS, function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref5, params) {\n    var commit, res;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            commit = _ref5.commit;\n            params = _.assign({}, state.defaultParams, params);\n            commit(TYPE.SET_MAP_PRICING_GS_LOADING, true);\n            _context2.next = 5;\n            return MW_API.get(\"\".concat(URL.GET_GS_MAPS(), \"?\").concat(utils.buildUrlQueryString(params)));\n\n          case 5:\n            res = _context2.sent;\n            commit(TYPE.SET_LIST_GS_MAPS, res.data);\n            commit(TYPE.SET_MAP_PRICING_GS_LOADING, false);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref6.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.FETCH_ONE_MAP, function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref7, id) {\n    var commit, res;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            commit = _ref7.commit;\n            _context3.prev = 1;\n            _context3.next = 4;\n            return MW_API.get(URL.GET_EDIT_AND_REMOVE_A_MAP(id));\n\n          case 4:\n            res = _context3.sent;\n            commit(TYPE.SET_ONE_MAP, res.data);\n            _context3.next = 11;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](1);\n            console.log(_context3.t0);\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 8]]);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref8.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.FETCH_ONE_GS_MAP, function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(_ref9, id) {\n    var commit, res;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            commit = _ref9.commit;\n            _context4.next = 3;\n            return MW_API.get(URL.GET_EDIT_AND_REMOVE_A_GS_MAP(id));\n\n          case 3:\n            res = _context4.sent;\n            commit(TYPE.SET_ONE_GS_MAP, res.data);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref10.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.REMOTE_IMPORT_CSV_MAPS, function (_ref11, csv) {\n  var commit = _ref11.commit;\n  return new Promise( /*#__PURE__*/function () {\n    var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(resolve, reject) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return MW_API.put(URL.PUT_IMPORT_MAPS(), csv);\n\n            case 3:\n              res = _context5.sent;\n              commit(TYPE.SET_PROCESS_MAPS, res.data);\n              resolve(res.data);\n              _context5.next = 11;\n              break;\n\n            case 8:\n              _context5.prev = 8;\n              _context5.t0 = _context5[\"catch\"](0);\n              reject(_context5.t0.response);\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 8]]);\n    }));\n\n    return function (_x9, _x10) {\n      return _ref12.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.FETCH_URL_EXPORT, function (_ref13, params) {\n  var commit = _ref13.commit;\n  commit(TYPE.SET_URL_EXPORT, {\n    loading: true\n  });\n  return new Promise( /*#__PURE__*/function () {\n    var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(resolve, reject) {\n      var _getShareToken2, config, res;\n\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _getShareToken2 = getShareToken(params), config = _getShareToken2.config;\n              _context6.next = 4;\n              return MW_API.get(\"\".concat(URL.GET_EXPORT_MAP(), \"?\").concat(utils.buildUrlQueryString(params)), config);\n\n            case 4:\n              res = _context6.sent;\n              resolve(res.data);\n              commit(TYPE.SET_URL_EXPORT, {\n                url: res.data.url,\n                loading: false\n              });\n              _context6.next = 13;\n              break;\n\n            case 9:\n              _context6.prev = 9;\n              _context6.t0 = _context6[\"catch\"](0);\n              commit(TYPE.SET_URL_EXPORT, {\n                loading: false\n              });\n              reject(_context6.t0.data);\n\n            case 13:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 9]]);\n    }));\n\n    return function (_x11, _x12) {\n      return _ref14.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.FETCH_URL_GS_MAP_EXPORT, function (_ref15, params) {\n  var commit = _ref15.commit;\n  commit(TYPE.SET_URL_GS_MAP_EXPORT, {\n    loading: true\n  });\n  return new Promise( /*#__PURE__*/function () {\n    var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(resolve, reject) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return MW_API.get(\"\".concat(URL.GET_EXPORT_GS_MAP(), \"?\").concat(utils.buildUrlQueryString(params)));\n\n            case 3:\n              res = _context7.sent;\n              resolve(res.data);\n              commit(TYPE.SET_URL_EXPORT, {\n                url: res.data.url,\n                loading: false\n              });\n              _context7.next = 12;\n              break;\n\n            case 8:\n              _context7.prev = 8;\n              _context7.t0 = _context7[\"catch\"](0);\n              commit(TYPE.SET_URL_EXPORT, {\n                loading: false\n              });\n              reject(_context7.t0.data);\n\n            case 12:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[0, 8]]);\n    }));\n\n    return function (_x13, _x14) {\n      return _ref16.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.REMOVE_MAP, function (_ref17, id) {\n  var commit = _ref17.commit,\n      state = _ref17.state;\n  return new Promise( /*#__PURE__*/function () {\n    var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(resolve, reject) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return MW_API.delete(URL.GET_EDIT_AND_REMOVE_A_MAP(id));\n\n            case 3:\n              res = _context8.sent;\n\n              _.remove(state.listMapPrice.items, function (d) {\n                return d.id === id;\n              });\n\n              state.listMapPrice.items = _toConsumableArray(state.listMapPrice.items);\n              commit(TYPE.SET_LIST_MAPS_TOTAL, --state.listMapPrice.total);\n              resolve(res.data);\n              _context8.next = 13;\n              break;\n\n            case 10:\n              _context8.prev = 10;\n              _context8.t0 = _context8[\"catch\"](0);\n              reject(_context8.t0.response);\n\n            case 13:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[0, 10]]);\n    }));\n\n    return function (_x15, _x16) {\n      return _ref18.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.REMOVE_GS_MAP, function (_ref19, id) {\n  var state = _ref19.state;\n  return new Promise( /*#__PURE__*/function () {\n    var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(resolve, reject) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              _context9.next = 3;\n              return MW_API.delete(URL.GET_EDIT_AND_REMOVE_A_GS_MAP(id));\n\n            case 3:\n              res = _context9.sent;\n\n              _.remove(state.listGSMapPrice.items, function (d) {\n                return d.id === id;\n              });\n\n              state.listGSMapPrice.items = _toConsumableArray(state.listGSMapPrice.items);\n              resolve(res.data);\n              _context9.next = 12;\n              break;\n\n            case 9:\n              _context9.prev = 9;\n              _context9.t0 = _context9[\"catch\"](0);\n              reject(_context9.t0.response);\n\n            case 12:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[0, 9]]);\n    }));\n\n    return function (_x17, _x18) {\n      return _ref20.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.UPDATE_MAP, function (_ref21, _ref22) {\n  var state = _ref21.state;\n  var id = _ref22.id,\n      data = _ref22.data;\n  var updatedField = ['brand_name', 'sku', 'asin', 'upc', 'price', 'type', 'report_id', 'marketplace'];\n\n  var mapData = _.cloneDeep(data);\n\n  _.forEach(mapData, function (v, k) {\n    if (updatedField.indexOf(k.toLowerCase()) === -1) {\n      delete mapData[k];\n    }\n  });\n\n  return new Promise( /*#__PURE__*/function () {\n    var _ref23 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(resolve, reject) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.prev = 0;\n              _context10.next = 3;\n              return MW_API.put(URL.GET_EDIT_AND_REMOVE_A_MAP(id), mapData);\n\n            case 3:\n              res = _context10.sent;\n              resolve(res.data);\n              _context10.next = 10;\n              break;\n\n            case 7:\n              _context10.prev = 7;\n              _context10.t0 = _context10[\"catch\"](0);\n              reject(_context10.t0.response);\n\n            case 10:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[0, 7]]);\n    }));\n\n    return function (_x19, _x20) {\n      return _ref23.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.UPDATE_GS_MAP, function (_ref24, _ref25) {\n  var state = _ref24.state;\n  var id = _ref25.id,\n      data = _ref25.data;\n  var updatedField = ['brand_name', 'sku', 'asin', 'amazon_title', 'upc', 'price', 'gpid', 'report_id', 'size', 'color', 'gender'];\n\n  var mapData = _.cloneDeep(data);\n\n  _.forEach(mapData, function (v, k) {\n    if (updatedField.indexOf(k.toLowerCase()) === -1) {\n      delete mapData[k];\n    }\n  });\n\n  return new Promise( /*#__PURE__*/function () {\n    var _ref26 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(resolve, reject) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.prev = 0;\n              _context11.next = 3;\n              return MW_API.put(URL.GET_EDIT_AND_REMOVE_A_GS_MAP(id), mapData);\n\n            case 3:\n              res = _context11.sent;\n              resolve(res.data);\n              _context11.next = 10;\n              break;\n\n            case 7:\n              _context11.prev = 7;\n              _context11.t0 = _context11[\"catch\"](0);\n              reject(_context11.t0.response);\n\n            case 10:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[0, 7]]);\n    }));\n\n    return function (_x21, _x22) {\n      return _ref26.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.ACCEPT_DISCOVERED_GPID, function (_ref27, params) {\n  var state = _ref27.state,\n      commit = _ref27.commit;\n  var id = params.id,\n      gpid = params.gpid;\n  return new Promise( /*#__PURE__*/function () {\n    var _ref28 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(resolve, reject) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.prev = 0;\n              _context12.next = 3;\n              return MW_API.put(URL.ACCEPT_DISCOVERED_GPID(id), {\n                gpid: gpid\n              });\n\n            case 3:\n              res = _context12.sent;\n              resolve(res.data);\n              commit(TYPE.UPDATE_LIST_DISCOVERED_GPID, res.data);\n              _context12.next = 11;\n              break;\n\n            case 8:\n              _context12.prev = 8;\n              _context12.t0 = _context12[\"catch\"](0);\n              reject(_context12.t0.response);\n\n            case 11:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, null, [[0, 8]]);\n    }));\n\n    return function (_x23, _x24) {\n      return _ref28.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.DENIED_DISCOVERED_GPID, function (_ref29, params) {\n  var state = _ref29.state,\n      commit = _ref29.commit;\n  var id = params.id,\n      gpid = params.gpid;\n  return new Promise( /*#__PURE__*/function () {\n    var _ref30 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(resolve, reject) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.prev = 0;\n              _context13.next = 3;\n              return MW_API.put(URL.DENIED_DISCOVERED_GPID(id), {\n                gpid: gpid\n              });\n\n            case 3:\n              res = _context13.sent;\n              resolve(res.data);\n              commit(TYPE.UPDATE_LIST_DISCOVERED_GPID, res.data);\n              _context13.next = 11;\n              break;\n\n            case 8:\n              _context13.prev = 8;\n              _context13.t0 = _context13[\"catch\"](0);\n              reject(_context13.t0.response);\n\n            case 11:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13, null, [[0, 8]]);\n    }));\n\n    return function (_x25, _x26) {\n      return _ref30.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.REMOVE_DISCOVERED_GPID, function (_ref31, params) {\n  var state = _ref31.state,\n      commit = _ref31.commit;\n  return new Promise( /*#__PURE__*/function () {\n    var _ref32 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(resolve, reject) {\n      var id, gpid, res;\n      return regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.prev = 0;\n              id = params.id, gpid = params.gpid;\n              _context14.next = 4;\n              return MW_API.put(URL.REMOVE_DISCOVERED_GPID(id), {\n                gpid: gpid\n              });\n\n            case 4:\n              res = _context14.sent;\n              resolve(res.data);\n              _context14.next = 11;\n              break;\n\n            case 8:\n              _context14.prev = 8;\n              _context14.t0 = _context14[\"catch\"](0);\n              reject(_context14.t0.response);\n\n            case 11:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, null, [[0, 8]]);\n    }));\n\n    return function (_x27, _x28) {\n      return _ref32.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.UPDATE_TOTAL_GS_MAP, function (_ref33, data) {\n  var commit = _ref33.commit;\n  commit(TYPE.UPDATE_TOTAL_GS_MAP, data);\n}), _defineProperty(_actions, TYPE.GET_BRAND_NAMES, function (_ref34, params) {\n  var commit = _ref34.commit;\n  return new Promise( /*#__PURE__*/function () {\n    var _ref35 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(resolve, reject) {\n      var _yield$MW_API$get, data;\n\n      return regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.prev = 0;\n              _context15.next = 3;\n              return MW_API.get(\"\".concat(URL.GET_BRAND_NAMES(), \"?\").concat(utils.buildUrlQueryString(params)));\n\n            case 3:\n              _yield$MW_API$get = _context15.sent;\n              data = _yield$MW_API$get.data;\n              resolve(data);\n              _context15.next = 11;\n              break;\n\n            case 8:\n              _context15.prev = 8;\n              _context15.t0 = _context15[\"catch\"](0);\n              reject(_context15.t0);\n\n            case 11:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15, null, [[0, 8]]);\n    }));\n\n    return function (_x29, _x30) {\n      return _ref35.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.GET_GS_BRAND_NAMES, function (_ref36, params) {\n  var commit = _ref36.commit;\n  return new Promise( /*#__PURE__*/function () {\n    var _ref37 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(resolve, reject) {\n      var _yield$MW_API$get2, data;\n\n      return regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.prev = 0;\n              _context16.next = 3;\n              return MW_API.get(\"\".concat(URL.GET_GS_BRAND_NAMES(), \"?\").concat(utils.buildUrlQueryString(params)));\n\n            case 3:\n              _yield$MW_API$get2 = _context16.sent;\n              data = _yield$MW_API$get2.data;\n              resolve(data);\n              _context16.next = 11;\n              break;\n\n            case 8:\n              _context16.prev = 8;\n              _context16.t0 = _context16[\"catch\"](0);\n              reject(_context16.t0);\n\n            case 11:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16, null, [[0, 8]]);\n    }));\n\n    return function (_x31, _x32) {\n      return _ref37.apply(this, arguments);\n    };\n  }());\n}), _actions);\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["C:/Project/CBPO/plat-mw-web/src/store/modules/page/maps/index.js"],"names":["TYPE","MW_API","URL","utils","_","MarketPlacesResult","state","listMapPrice","listGSMapPrice","process","loadingDownload","defaultParams","page","limit","search","report_id","sort_by","sort_dir","marketplace","AMAZON_COM","brand_name","defaultAmazonMapParams","mapData","gsMapData","caMapData","isLoadingMap","isLoadingMapGs","listDiscoveredGPID","getters","GET_MAPS","GET_GS_MAPS","GET_ONE_MAP","GET_ONE_GS_MAP","GET_PROCESS_MAPS","GET_DEFAULT_PARAMS","GET_DEFAULT_AMAZON_MAP_PARAMS","GET_MAP_PRICING_LOADING","GET_MAP_PRICING_GS_LOADING","GET_LIST_DISCOVERED_GPID","mutations","SET_LIST_MAPS","SET_LIST_GS_MAPS","SET_ONE_MAP","SET_ONE_GS_MAP","SET_PROCESS_MAPS","SET_URL_EXPORT","loading","SET_URL_GS_MAP_EXPORT","UPDATE_TOTAL_GS_MAP","data","total","SET_LIST_MAPS_TOTAL","SET_MAP_PRICING_LOADING","payload","SET_MAP_PRICING_GS_LOADING","UPDATE_LIST_DISCOVERED_GPID","mapIndex","findIndex","items","item","id","discovered_gpids","RESET_LIST_DISCOVERED_GPID","getShareToken","token","has","share_token","omit","config","oriPayload","actions","FETCH_LIST_MAPS","params","commit","assign","get","buildUrlQueryString","res","console","log","FETCH_LIST_GS_MAPS","FETCH_ONE_MAP","GET_EDIT_AND_REMOVE_A_MAP","FETCH_ONE_GS_MAP","GET_EDIT_AND_REMOVE_A_GS_MAP","REMOTE_IMPORT_CSV_MAPS","csv","Promise","resolve","reject","put","PUT_IMPORT_MAPS","response","FETCH_URL_EXPORT","GET_EXPORT_MAP","url","FETCH_URL_GS_MAP_EXPORT","GET_EXPORT_GS_MAP","REMOVE_MAP","delete","remove","d","REMOVE_GS_MAP","UPDATE_MAP","updatedField","cloneDeep","forEach","v","k","indexOf","toLowerCase","UPDATE_GS_MAP","ACCEPT_DISCOVERED_GPID","gpid","DENIED_DISCOVERED_GPID","REMOVE_DISCOVERED_GPID","GET_BRAND_NAMES","GET_GS_BRAND_NAMES","namespaced"],"mappings":"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","sourcesContent":["import * as TYPE from '@/actionTypes'\r\nimport { MW_API } from '@/service'\r\nimport * as URL from '@/service/_constant'\r\nimport * as utils from '@/shared/utils'\r\nimport _ from 'lodash'\r\nimport { MarketPlacesResult } from '@/constants/Report'\r\n\r\nconst state = {\r\n  listMapPrice: {},\r\n  listGSMapPrice: {},\r\n  process: {},\r\n  loadingDownload: false,\r\n  defaultParams: {\r\n    page: 1,\r\n    limit: 100,\r\n    search: null,\r\n    report_id: null,\r\n    sort_by: null,\r\n    sort_dir: null,\r\n    marketplace: MarketPlacesResult.AMAZON_COM,\r\n    brand_name: null\r\n  },\r\n  defaultAmazonMapParams: {\r\n    page: 1,\r\n    limit: 100,\r\n    search: null,\r\n    report_id: null,\r\n    sort_by: null,\r\n    sort_dir: null,\r\n    marketplace: null,\r\n    brand_name: null\r\n  },\r\n  mapData: {},\r\n  gsMapData: {},\r\n  caMapData: {},\r\n  isLoadingMap: false,\r\n  isLoadingMapGs: false,\r\n  listDiscoveredGPID: []\r\n}\r\nconst getters = {\r\n  [TYPE.GET_MAPS]: (state) => state.listMapPrice,\r\n  [TYPE.GET_GS_MAPS]: (state) => state.listGSMapPrice,\r\n  [TYPE.GET_ONE_MAP]: (state) => state.mapData,\r\n  [TYPE.GET_ONE_GS_MAP]: (state) => state.gsMapData,\r\n  [TYPE.GET_PROCESS_MAPS]: (state) => state.process,\r\n  [TYPE.GET_DEFAULT_PARAMS]: (state) => state.defaultParams,\r\n  [TYPE.GET_DEFAULT_AMAZON_MAP_PARAMS]: (state) => state.defaultAmazonMapParams,\r\n  [TYPE.GET_MAP_PRICING_LOADING]: (state) => state.isLoadingMap,\r\n  [TYPE.GET_MAP_PRICING_GS_LOADING]: (state) => state.isLoadingMapGs,\r\n  [TYPE.GET_LIST_DISCOVERED_GPID]: (state) => state.listDiscoveredGPID\r\n}\r\nconst mutations = {\r\n  [TYPE.SET_LIST_MAPS](state, listMapPrice) {\r\n    state.listMapPrice = listMapPrice\r\n  },\r\n  [TYPE.SET_LIST_GS_MAPS](state, listGSMapPrice) {\r\n    state.listGSMapPrice = listGSMapPrice\r\n  },\r\n  [TYPE.SET_ONE_MAP](state, mapData) {\r\n    state.mapData = mapData\r\n  },\r\n  [TYPE.SET_ONE_GS_MAP](state, gsMapData) {\r\n    state.gsMapData = gsMapData\r\n  },\r\n  [TYPE.SET_PROCESS_MAPS](state, process) {\r\n    state.process = process\r\n  },\r\n  [TYPE.SET_URL_EXPORT](state, { loading }) {\r\n    state.loadingDownload = loading\r\n  },\r\n  [TYPE.SET_URL_GS_MAP_EXPORT](state, { loading }) {\r\n    state.loadingDownload = loading\r\n  },\r\n  [TYPE.UPDATE_TOTAL_GS_MAP](state, data) {\r\n    state.listGSMapPrice.total = data\r\n  },\r\n  [TYPE.SET_LIST_MAPS_TOTAL](state, total) {\r\n    state.listMapPrice.total = total\r\n  },\r\n  [TYPE.SET_MAP_PRICING_LOADING] (state, payload) {\r\n    state.isLoadingMap = payload\r\n  },\r\n  [TYPE.SET_MAP_PRICING_GS_LOADING] (state, payload) {\r\n    state.isLoadingMapGs = payload\r\n  },\r\n  [TYPE.UPDATE_LIST_DISCOVERED_GPID] (state, payload) {\r\n    let mapIndex = _.findIndex(state.listGSMapPrice.items, item => item.id === payload.id)\r\n    state.listGSMapPrice.items[mapIndex].discovered_gpids = payload.discovered_gpids\r\n    state.listDiscoveredGPID = state.listGSMapPrice.items[mapIndex].discovered_gpids\r\n  },\r\n  [TYPE.RESET_LIST_DISCOVERED_GPID] (state, payload) {\r\n    state.listDiscoveredGPID = payload\r\n  }\r\n}\r\n\r\nconst getShareToken = (payload) => {\r\n  const token = _.has(payload, 'share_token') ? payload.share_token : null\r\n  if (token) {\r\n    payload = _.omit(payload, ['share_token'])\r\n  }\r\n  const config = token ? { share_token: token } : {}\r\n  return { config: config, oriPayload: payload }\r\n}\r\n\r\nconst actions = {\r\n  async [TYPE.FETCH_LIST_MAPS]({ commit }, params) {\r\n    params = _.assign({}, state.defaultAmazonMapParams, params)\r\n    commit(TYPE.SET_MAP_PRICING_LOADING, true)\r\n    try {\r\n      const { config, oriPayload } = getShareToken(params)\r\n      const res = await MW_API.get(`${URL.GET_MAPS()}?${utils.buildUrlQueryString(oriPayload)}`, config)\r\n      commit(TYPE.SET_LIST_MAPS, res.data)\r\n      commit(TYPE.SET_MAP_PRICING_LOADING, false)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  },\r\n  async [TYPE.FETCH_LIST_GS_MAPS]({ commit }, params) {\r\n    params = _.assign({}, state.defaultParams, params)\r\n    commit(TYPE.SET_MAP_PRICING_GS_LOADING, true)\r\n    const res = await MW_API.get(`${URL.GET_GS_MAPS()}?${utils.buildUrlQueryString(params)}`)\r\n    commit(TYPE.SET_LIST_GS_MAPS, res.data)\r\n    commit(TYPE.SET_MAP_PRICING_GS_LOADING, false)\r\n  },\r\n  async [TYPE.FETCH_ONE_MAP]({ commit }, id) {\r\n    try {\r\n      const res = await MW_API.get(URL.GET_EDIT_AND_REMOVE_A_MAP(id))\r\n      commit(TYPE.SET_ONE_MAP, res.data)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  },\r\n  async [TYPE.FETCH_ONE_GS_MAP]({ commit }, id) {\r\n    const res = await MW_API.get(URL.GET_EDIT_AND_REMOVE_A_GS_MAP(id))\r\n    commit(TYPE.SET_ONE_GS_MAP, res.data)\r\n  },\r\n  [TYPE.REMOTE_IMPORT_CSV_MAPS]({ commit }, csv) {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await MW_API.put(URL.PUT_IMPORT_MAPS(), csv)\r\n        commit(TYPE.SET_PROCESS_MAPS, res.data)\r\n        resolve(res.data)\r\n      } catch (error) {\r\n        reject(error.response)\r\n      }\r\n    })\r\n  },\r\n  [TYPE.FETCH_URL_EXPORT]({ commit }, params) {\r\n    commit(TYPE.SET_URL_EXPORT, { loading: true })\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const { config } = getShareToken(params)\r\n        const res = await MW_API.get(`${URL.GET_EXPORT_MAP()}?${utils.buildUrlQueryString(params)}`, config)\r\n        resolve(res.data)\r\n        commit(TYPE.SET_URL_EXPORT, {\r\n          url: res.data.url,\r\n          loading: false\r\n        })\r\n      } catch (error) {\r\n        commit(TYPE.SET_URL_EXPORT, { loading: false })\r\n        reject(error.data)\r\n      }\r\n    })\r\n  },\r\n  [TYPE.FETCH_URL_GS_MAP_EXPORT]({ commit }, params) {\r\n    commit(TYPE.SET_URL_GS_MAP_EXPORT, { loading: true })\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await MW_API.get(`${URL.GET_EXPORT_GS_MAP()}?${utils.buildUrlQueryString(params)}`)\r\n        resolve(res.data)\r\n        commit(TYPE.SET_URL_EXPORT, {\r\n          url: res.data.url,\r\n          loading: false\r\n        })\r\n      } catch (error) {\r\n        commit(TYPE.SET_URL_EXPORT, { loading: false })\r\n        reject(error.data)\r\n      }\r\n    })\r\n  },\r\n  [TYPE.REMOVE_MAP]({ commit, state }, id) {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await MW_API.delete(URL.GET_EDIT_AND_REMOVE_A_MAP(id))\r\n        _.remove(state.listMapPrice.items, (d) => d.id === id)\r\n        state.listMapPrice.items = [...state.listMapPrice.items]\r\n        commit(TYPE.SET_LIST_MAPS_TOTAL, --state.listMapPrice.total)\r\n        resolve(res.data)\r\n      } catch (error) {\r\n        reject(error.response)\r\n      }\r\n    })\r\n  },\r\n  [TYPE.REMOVE_GS_MAP]({ state }, id) {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await MW_API.delete(URL.GET_EDIT_AND_REMOVE_A_GS_MAP(id))\r\n        _.remove(state.listGSMapPrice.items, (d) => d.id === id)\r\n\r\n        state.listGSMapPrice.items = [...state.listGSMapPrice.items]\r\n\r\n        resolve(res.data)\r\n      } catch (error) {\r\n        reject(error.response)\r\n      }\r\n    })\r\n  },\r\n  [TYPE.UPDATE_MAP]({ state }, { id, data }) {\r\n    let updatedField = ['brand_name', 'sku', 'asin', 'upc', 'price', 'type', 'report_id', 'marketplace']\r\n    const mapData = _.cloneDeep(data)\r\n    _.forEach(mapData, (v, k) => {\r\n      if (updatedField.indexOf(k.toLowerCase()) === -1) {\r\n        delete mapData[k]\r\n      }\r\n    })\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await MW_API.put(URL.GET_EDIT_AND_REMOVE_A_MAP(id), mapData)\r\n        resolve(res.data)\r\n      } catch (error) {\r\n        reject(error.response)\r\n      }\r\n    })\r\n  },\r\n  [TYPE.UPDATE_GS_MAP]({ state }, { id, data }) {\r\n    let updatedField = ['brand_name', 'sku', 'asin', 'amazon_title', 'upc', 'price', 'gpid', 'report_id', 'size', 'color', 'gender']\r\n    const mapData = _.cloneDeep(data)\r\n    _.forEach(mapData, (v, k) => {\r\n      if (updatedField.indexOf(k.toLowerCase()) === -1) {\r\n        delete mapData[k]\r\n      }\r\n    })\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await MW_API.put(URL.GET_EDIT_AND_REMOVE_A_GS_MAP(id), mapData)\r\n        resolve(res.data)\r\n      } catch (error) {\r\n        reject(error.response)\r\n      }\r\n    })\r\n  },\r\n  [TYPE.ACCEPT_DISCOVERED_GPID]({ state, commit }, params) {\r\n    const { id, gpid } = params\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await MW_API.put(URL.ACCEPT_DISCOVERED_GPID(id), { gpid: gpid })\r\n        resolve(res.data)\r\n        commit(TYPE.UPDATE_LIST_DISCOVERED_GPID, res.data)\r\n      } catch (error) {\r\n        reject(error.response)\r\n      }\r\n    })\r\n  },\r\n  [TYPE.DENIED_DISCOVERED_GPID]({ state, commit }, params) {\r\n    const { id, gpid } = params\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await MW_API.put(URL.DENIED_DISCOVERED_GPID(id), { gpid: gpid })\r\n        resolve(res.data)\r\n        commit(TYPE.UPDATE_LIST_DISCOVERED_GPID, res.data)\r\n      } catch (error) {\r\n        reject(error.response)\r\n      }\r\n    })\r\n  },\r\n  [TYPE.REMOVE_DISCOVERED_GPID]({ state, commit }, params) {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const { id, gpid } = params\r\n        const res = await MW_API.put(URL.REMOVE_DISCOVERED_GPID(id), { gpid: gpid })\r\n        resolve(res.data)\r\n      } catch (error) {\r\n        reject(error.response)\r\n      }\r\n    })\r\n  },\r\n  [TYPE.UPDATE_TOTAL_GS_MAP]({ commit }, data) {\r\n    commit(TYPE.UPDATE_TOTAL_GS_MAP, data)\r\n  },\r\n  [TYPE.GET_BRAND_NAMES] ({ commit }, params) {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const { data } = await MW_API.get(`${URL.GET_BRAND_NAMES()}?${utils.buildUrlQueryString(params)}`)\r\n        resolve(data)\r\n      } catch (error) {\r\n        reject(error)\r\n      }\r\n    })\r\n  },\r\n  [TYPE.GET_GS_BRAND_NAMES] ({ commit }, params) {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const { data } = await MW_API.get(`${URL.GET_GS_BRAND_NAMES()}?${utils.buildUrlQueryString(params)}`)\r\n        resolve(data)\r\n      } catch (error) {\r\n        reject(error)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  mutations,\r\n  actions\r\n}\r\n"]}]}