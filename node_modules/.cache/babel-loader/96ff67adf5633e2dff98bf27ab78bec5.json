{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\brands\\List.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\brands\\List.vue","mtime":1630397532404},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import { shuffleArray } from '@/shared/utils'\n// import TableContent from './TableContent' // use this for system mode handle job is report based job\nimport TableContent from \"./TableReportMapJob\"; // use this for system mode handle job mode map based job\n\nimport { mapGetters, mapActions } from 'vuex';\nimport * as TYPE from '@/actionTypes.js';\nimport vToasted from '@/shared/notification';\nimport PermissionsMixin from '@/components/common/PermissionsMixin';\nimport _nav from '@/_nav';\nimport action from '@/service/activity';\nexport default {\n  name: 'tables',\n  components: {\n    TableContent: TableContent\n  },\n  mixins: [vToasted, PermissionsMixin],\n  data: function data() {\n    return {\n      fields: {},\n      nav: _nav\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    brands: \"mw/brands/\".concat(TYPE.GET_LIST_BRANDS),\n    planConfig: \"mw/\".concat(TYPE.GET_PLAN_CONFIG),\n    organizationStats: \"mw/\".concat(TYPE.GET_ORGANIZATION_STATS)\n  })), {}, {\n    remainingSlotsReport: function remainingSlotsReport() {\n      if (this.organizationStats['reports_used'] > this.planConfig['max_of_reports']) {\n        return parseInt(this.organizationStats['reports_used'] - this.planConfig['max_of_reports']);\n      }\n\n      return false;\n    },\n    remainingSlotsReportAmazon: function remainingSlotsReportAmazon() {\n      if (this.organizationStats['reports_with_amazon_used'] > this.planConfig['max_of_reports_with_amazon']) {\n        return parseInt(this.organizationStats['reports_with_amazon_used'] - this.planConfig['max_of_reports_with_amazon']);\n      }\n\n      return false;\n    },\n    remainingSlotsReportGoogleShopping: function remainingSlotsReportGoogleShopping() {\n      if (this.organizationStats['reports_with_google_shopping_used'] > this.planConfig['max_of_reports_with_google_shopping']) {\n        return parseInt(this.organizationStats['reports_with_google_shopping_used'] - this.planConfig['max_of_reports_with_google_shopping']);\n      }\n\n      return false;\n    }\n  }),\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    fetchBrands: \"mw/brands/\".concat(TYPE.FETCH_LIST_BRANDS),\n    removeBrand: \"mw/brands/\".concat(TYPE.REMOVE_BRANDS),\n    runABrand: \"mw/brands/\".concat(TYPE.RUN_A_BRAND),\n    // forceRunABrand: `mw/brands/${TYPE.FORCE_RUN_A_BRAND}`,\n    downloadJobById: \"mw/brands/\".concat(TYPE.REMOTE_GET_LINK_DOWNLOAD_JOB),\n    onSeach: \"mw/brands/\".concat(TYPE.REMOTE_SEARCH_BRANDS),\n    onSort: \"mw/brands/\".concat(TYPE.REMOTE_SORT_BRANDS),\n    resetBrands: \"mw/brands/\".concat(TYPE.RESET_BRANDS)\n  })), {}, {\n    handleEditBrand: function handleEditBrand(data) {\n      this.$router.push({\n        name: 'MWEditBrands',\n        params: {\n          client_id: this.nav.clientId,\n          id: data._id\n        },\n        query: {\n          name: data.name_in_dashboard\n        }\n      });\n    },\n    loadData: function loadData() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.fetchBrands(params);\n      this.$router.push({\n        query: {\n          s: params.s,\n          limit: params.limit ? params.limit : '10',\n          page: params.page ? params.page : '1',\n          sort_by: params.sort_by ? params.sort_by : 'name_in_dashboard',\n          sort_dir: params.sort_dir ? params.sort_dir : 'asc'\n        }\n      });\n    },\n    handleRemoveBrand: function () {\n      var _handleRemoveBrand = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(data) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.removeBrand(data.id);\n\n              case 3:\n                this.vToasted('success', \"Report \".concat(data.name, \" has been deleted successfully\"));\n                _context.next = 9;\n                break;\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](0);\n                this.vToasted('error', _context.t0.data.message);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 6]]);\n      }));\n\n      function handleRemoveBrand(_x) {\n        return _handleRemoveBrand.apply(this, arguments);\n      }\n\n      return handleRemoveBrand;\n    }(),\n    handleRunABrand: function () {\n      var _handleRunABrand = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(e, runOptions) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                console.log('e ', e);\n                console.log('runOptions ', runOptions);\n                _context2.next = 5;\n                return this.runABrand({\n                  id: e._id,\n                  runOptions: runOptions\n                });\n\n              case 5:\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                this.vToasted('error', _context2.t0.message);\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 7]]);\n      }));\n\n      function handleRunABrand(_x2, _x3) {\n        return _handleRunABrand.apply(this, arguments);\n      }\n\n      return handleRunABrand;\n    }(),\n    trackDownload: function trackDownload(data) {\n      var payload = {\n        client_id: data.client_id,\n        report_name: data.name_in_dashboard,\n        report_id: data.id\n      };\n      action.downloadAction(payload);\n    },\n    handleExportForJob: function () {\n      var _handleExportForJob = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(item, index, marketplace, indexActiveMarketplaces, source) {\n        var res;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.trackDownload(item);\n                _context3.prev = 1;\n                this.$set(this.brands.items[index].activeMarketplaces[indexActiveMarketplaces].info, 'isLoad', true);\n                _context3.next = 5;\n                return this.downloadJobById({\n                  id: item._id,\n                  marketplace: marketplace,\n                  source: source\n                });\n\n              case 5:\n                res = _context3.sent;\n                window.location.href = res.uri;\n                _context3.next = 12;\n                break;\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](1);\n                this.vToasted('error', _context3.t0.message);\n\n              case 12:\n                _context3.prev = 12;\n                this.$set(this.brands.items[index].activeMarketplaces[indexActiveMarketplaces].info, 'isLoad', false);\n                return _context3.finish(12);\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[1, 9, 12, 15]]);\n      }));\n\n      function handleExportForJob(_x4, _x5, _x6, _x7, _x8) {\n        return _handleExportForJob.apply(this, arguments);\n      }\n\n      return handleExportForJob;\n    }()\n  }),\n  created: function created() {\n    var params = {\n      s: this.$route.query.s ? this.$route.query.s : '',\n      limit: this.$route.query.limit ? this.$route.query.limit : 10,\n      page: this.$route.query.page ? this.$route.query.page : 1,\n      sort_by: this.$route.query.sort_by ? this.$route.query.sort_by : 'name_in_dashboard',\n      sort_dir: this.$route.query.sort_dir ? this.$route.query.sort_dir : 'asc'\n    };\n    this.loadData(params);\n    this.fields = [{\n      key: 'name_in_dashboard',\n      label: 'Report Name',\n      sortable: true,\n      sortDirection: 'desc',\n      tdClass: 'align-middle'\n    }, {\n      key: 'active',\n      label: 'Active',\n      thClass: 'at-50 text-center align-middle',\n      tdClass: 'text-center mw-checkbox-active align-middle'\n    }, {\n      key: 'status',\n      label: 'Status',\n      thClass: 'text-center align-middle',\n      tdClass: 'text-center align-middle'\n    }, {\n      key: 'updated',\n      label: 'Modified',\n      thClass: 'md-120 text-center align-middle',\n      tdClass: 'align-middle text-center',\n      sortable: true\n    }, {\n      key: 'actions',\n      label: 'Actions',\n      thClass: 'text-center align-middle',\n      tdClass: 'col-manage align-middle text-center'\n    }];\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.resetBrands();\n  }\n};",{"version":3,"sources":["List.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"animated fadeIn\">\r\n    <b-row>\r\n      <b-col lg=\"12\">\r\n        <div class=\"warning-plan\">\r\n          <b-alert v-if=\"remainingSlotsReport\" show dismissible variant=\"warning\">Your plan allows <strong>{{planConfig['max_of_reports']}}</strong> {{ 'report' | pluralize(planConfig['max_of_reports'])}} but you have <strong>{{organizationStats['reports_used']}}</strong> active {{ 'one' | pluralize(organizationStats['reports_used'])}}. Please consider removing the unnecessary ones or we will randomly disable data processing for your <strong>{{remainingSlotsReport}}</strong> {{ 'one' | pluralize(remainingSlotsReport)}}.</b-alert>\r\n          <b-alert v-if=\"remainingSlotsReportAmazon\" show dismissible variant=\"warning\">Your plan allows <strong>{{planConfig['max_of_reports_with_amazon']}}</strong> Amazon {{ 'report' | pluralize(planConfig['max_of_reports_with_amazon'])}} but you have <strong>{{ organizationStats['reports_with_amazon_used']}}</strong> active {{ 'one' | pluralize(organizationStats['reports_with_amazon_used'])}}. Please consider removing the unnecessary ones or we will randomly disable data processing for your <strong>{{remainingSlotsReportAmazon}}</strong> {{ 'one' | pluralize(remainingSlotsReportAmazon)}}.</b-alert>\r\n          <b-alert v-if=\"remainingSlotsReportGoogleShopping\" show dismissible variant=\"warning\">Your plan allows <strong>{{planConfig['max_of_reports_with_google_shopping']}}</strong> Google Shopping {{ 'report' | pluralize(planConfig['max_of_reports_with_google_shopping'])}} but you have <strong>{{organizationStats['reports_with_google_shopping_used']}}</strong> active {{ 'one' | pluralize(organizationStats['reports_with_google_shopping_used'])}}. Please consider removing the unnecessary ones or we will randomly disable data processing for your <strong>{{remainingSlotsReportGoogleShopping}}</strong> {{ 'one' | pluralize(remainingSlotsReportGoogleShopping)}}.</b-alert>\r\n        </div>\r\n        <table-content\r\n          :fields=\"fields\"\r\n          fixed\r\n          bordered\r\n          striped\r\n          :hover=\"true\"\r\n          :caption=\"$route.meta.tableName\"\r\n          :removeBrands=\"handleRemoveBrand\"\r\n          :handleEditBrand=\"handleEditBrand\"\r\n          :handleRun=\"handleRunABrand\"\r\n          :dataSet=\"brands\"\r\n          :handleExportForJob=\"handleExportForJob\"\r\n          @paramsChange=\"loadData\"\r\n        ></table-content>\r\n      </b-col>\r\n    </b-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import { shuffleArray } from '@/shared/utils'\r\n// import TableContent from './TableContent' // use this for system mode handle job is report based job\r\nimport TableContent from './TableReportMapJob' // use this for system mode handle job mode map based job\r\nimport { mapGetters, mapActions } from 'vuex'\r\nimport * as TYPE from '@/actionTypes.js'\r\nimport vToasted from '@/shared/notification'\r\nimport PermissionsMixin from '@/components/common/PermissionsMixin'\r\nimport _nav from '@/_nav'\r\nimport action from '@/service/activity'\r\n\r\nexport default {\r\n  name: 'tables',\r\n  components: { TableContent },\r\n  mixins: [vToasted, PermissionsMixin],\r\n  data() {\r\n    return {\r\n      fields: {},\r\n      nav: _nav\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      brands: `mw/brands/${TYPE.GET_LIST_BRANDS}`,\r\n      planConfig: `mw/${TYPE.GET_PLAN_CONFIG}`,\r\n      organizationStats: `mw/${TYPE.GET_ORGANIZATION_STATS}`\r\n    }),\r\n    remainingSlotsReport() {\r\n      if (this.organizationStats['reports_used'] > this.planConfig['max_of_reports']) {\r\n        return parseInt(this.organizationStats['reports_used'] - this.planConfig['max_of_reports'])\r\n      }\r\n      return false\r\n    },\r\n    remainingSlotsReportAmazon() {\r\n      if (this.organizationStats['reports_with_amazon_used'] > this.planConfig['max_of_reports_with_amazon']) {\r\n        return parseInt(this.organizationStats['reports_with_amazon_used'] - this.planConfig['max_of_reports_with_amazon'])\r\n      }\r\n      return false\r\n    },\r\n    remainingSlotsReportGoogleShopping() {\r\n      if (this.organizationStats['reports_with_google_shopping_used'] > this.planConfig['max_of_reports_with_google_shopping']) {\r\n        return parseInt(this.organizationStats['reports_with_google_shopping_used'] - this.planConfig['max_of_reports_with_google_shopping'])\r\n      }\r\n      return false\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      fetchBrands: `mw/brands/${TYPE.FETCH_LIST_BRANDS}`,\r\n      removeBrand: `mw/brands/${TYPE.REMOVE_BRANDS}`,\r\n      runABrand: `mw/brands/${TYPE.RUN_A_BRAND}`,\r\n      // forceRunABrand: `mw/brands/${TYPE.FORCE_RUN_A_BRAND}`,\r\n      downloadJobById: `mw/brands/${TYPE.REMOTE_GET_LINK_DOWNLOAD_JOB}`,\r\n      onSeach: `mw/brands/${TYPE.REMOTE_SEARCH_BRANDS}`,\r\n      onSort: `mw/brands/${TYPE.REMOTE_SORT_BRANDS}`,\r\n      resetBrands: `mw/brands/${TYPE.RESET_BRANDS}`\r\n    }),\r\n    handleEditBrand(data) {\r\n      this.$router.push({\r\n        name: 'MWEditBrands',\r\n        params: { client_id: this.nav.clientId, id: data._id },\r\n        query: { name: data.name_in_dashboard }\r\n      })\r\n    },\r\n    loadData(params = {}) {\r\n      this.fetchBrands(params)\r\n      this.$router.push({\r\n        query: {\r\n          s: params.s,\r\n          limit: params.limit ? params.limit : '10',\r\n          page: params.page ? params.page : '1',\r\n          sort_by: params.sort_by ? params.sort_by : 'name_in_dashboard',\r\n          sort_dir: params.sort_dir ? params.sort_dir : 'asc'\r\n        }\r\n      })\r\n    },\r\n    async handleRemoveBrand(data) {\r\n      try {\r\n        await this.removeBrand(data.id)\r\n        this.vToasted('success', `Report ${data.name} has been deleted successfully`)\r\n      } catch (error) {\r\n        this.vToasted('error', error.data.message)\r\n      }\r\n    },\r\n    async handleRunABrand(e, runOptions) {\r\n      try {\r\n        console.log('e ', e)\r\n        console.log('runOptions ', runOptions)\r\n        await this.runABrand({ id: e._id, runOptions: runOptions })\r\n      } catch (error) {\r\n        this.vToasted('error', error.message)\r\n      }\r\n    },\r\n    trackDownload(data) {\r\n      let payload = {\r\n        client_id: data.client_id,\r\n        report_name: data.name_in_dashboard,\r\n        report_id: data.id\r\n      }\r\n      action.downloadAction(payload)\r\n    },\r\n    async handleExportForJob(item, index, marketplace, indexActiveMarketplaces, source) {\r\n      this.trackDownload(item)\r\n      try {\r\n        this.$set(this.brands.items[index].activeMarketplaces[indexActiveMarketplaces].info, 'isLoad', true)\r\n        const res = await this.downloadJobById({ id: item._id, marketplace: marketplace, source: source })\r\n        window.location.href = res.uri\r\n      } catch (error) {\r\n        this.vToasted('error', error.message)\r\n      } finally {\r\n        this.$set(this.brands.items[index].activeMarketplaces[indexActiveMarketplaces].info, 'isLoad', false)\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    let params = {\r\n      s: this.$route.query.s ? this.$route.query.s : '',\r\n      limit: this.$route.query.limit ? this.$route.query.limit : 10,\r\n      page: this.$route.query.page ? this.$route.query.page : 1,\r\n      sort_by: this.$route.query.sort_by ? this.$route.query.sort_by : 'name_in_dashboard',\r\n      sort_dir: this.$route.query.sort_dir ? this.$route.query.sort_dir : 'asc'\r\n    }\r\n    this.loadData(params)\r\n    this.fields = [\r\n      {\r\n        key: 'name_in_dashboard',\r\n        label: 'Report Name',\r\n        sortable: true,\r\n        sortDirection: 'desc',\r\n        tdClass: 'align-middle'\r\n      },\r\n      {\r\n        key: 'active',\r\n        label: 'Active',\r\n        thClass: 'at-50 text-center align-middle',\r\n        tdClass: 'text-center mw-checkbox-active align-middle'\r\n      },\r\n      {\r\n        key: 'status',\r\n        label: 'Status',\r\n        thClass: 'text-center align-middle',\r\n        tdClass: 'text-center align-middle'\r\n      },\r\n      {\r\n        key: 'updated',\r\n        label: 'Modified',\r\n        thClass: 'md-120 text-center align-middle',\r\n        tdClass: 'align-middle text-center',\r\n        sortable: true\r\n      },\r\n      {\r\n        key: 'actions',\r\n        label: 'Actions',\r\n        thClass: 'text-center align-middle',\r\n        tdClass: 'col-manage align-middle text-center'\r\n      }\r\n    ]\r\n  },\r\n  beforeDestroy() {\r\n    this.resetBrands()\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n.mw-160 {\r\n  width: 160px;\r\n}\r\n.at-50 {\r\n  width: 50px;\r\n}\r\n.mkp-170 {\r\n  width: 170px;\r\n}\r\n.md-120 {\r\n  width: 120px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/page/brands"}]}