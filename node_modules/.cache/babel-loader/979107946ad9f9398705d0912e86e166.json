{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\brands\\MarketplaceHistoryList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\brands\\MarketplaceHistoryList.vue","mtime":1626264502255},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1626076746842},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport MarketplaceHistoryListContent from \"./MarketplaceHistoryListContent\";\nimport PermissionsMixin from '@/components/common/PermissionsMixin';\nimport * as TYPE from '@/actionTypes.js';\nimport { mapGetters, mapActions } from 'vuex';\nimport _ from 'lodash';\nimport { MarketplaceLabel } from '@/constants/Report';\nexport default {\n  name: 'MWReportMarketplaceHistory',\n  components: {\n    MarketplaceHistoryListContent: MarketplaceHistoryListContent\n  },\n  mixins: [PermissionsMixin],\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    fetchListReportMarketplaceHistory: \"mw/brands/\".concat(TYPE.FETCH_LIST_REPORT_MARKETPLACE_HISTORY)\n  })), {}, {\n    loadData: function loadData() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      // eslint-disable-next-line\n      var _this$$route$query = this.$route.query,\n          brand_id = _this$$route$query.brand_id,\n          marketplace = _this$$route$query.marketplace,\n          name = _this$$route$query.name; // eslint-disable-next-line\n\n      this.fetchHistory(params);\n\n      if (_.isEmpty(params)) {\n        this.$router.replace({\n          query: {\n            brand_id: brand_id,\n            marketplace: marketplace,\n            limit: params.limit ? params.limit : '10',\n            page: params.page ? params.page : '1',\n            name: name\n          }\n        });\n      } else {\n        this.$router.push({\n          query: {\n            brand_id: brand_id,\n            marketplace: marketplace,\n            limit: params.limit ? params.limit : '10',\n            page: params.page ? params.page : '1',\n            name: name\n          }\n        });\n      }\n    },\n    fetchHistory: function fetchHistory(params) {\n      // eslint-disable-next-line\n      var _this$$route$query2 = this.$route.query,\n          brand_id = _this$$route$query2.brand_id,\n          marketplace = _this$$route$query2.marketplace;\n      this.fetchListReportMarketplaceHistory({\n        brand_id: brand_id,\n        marketplace: marketplace,\n        limit: params.limit ? params.limit : '10',\n        page: params.page ? params.page : '1'\n      });\n    }\n  }),\n  data: function data() {\n    return {\n      marketplaceLabel: _.cloneDeep(MarketplaceLabel)\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    getPermissions: \"mw/\".concat(TYPE.GET_PERMISSIONS),\n    defaultParams: \"mw/brands/\".concat(TYPE.GET_REPORT_MARKETPLACE_HISTORY_DEFAULT_PARAMS)\n  })), {}, {\n    params: function params() {\n      return _objectSpread({}, this.defaultParams) || {};\n    }\n  }),\n  created: function created() {\n    // eslint-disable-next-line\n    var _this$$route$query3 = this.$route.query,\n        brand_id = _this$$route$query3.brand_id,\n        marketplace = _this$$route$query3.marketplace; // eslint-disable-next-line\n\n    if (!brand_id || !marketplace) {\n      this.$router.push({\n        name: 'MWListBrands'\n      });\n      return;\n    }\n\n    this.loadData();\n    this.fields = [{\n      key: 'date',\n      label: 'Date'\n    }, {\n      key: 'total',\n      label: 'Total'\n    }, {\n      key: 'completed',\n      label: 'Completed'\n    }, {\n      key: 'download',\n      label: 'Download'\n    }];\n  },\n  mounted: function mounted() {\n    var _this$$route$query4 = this.$route.query,\n        marketplace = _this$$route$query4.marketplace,\n        name = _this$$route$query4.name;\n    var marketplaceText = this.marketplaceLabel[marketplace];\n    this.$route.meta.tableName = \"Report History of \".concat(name, \" in \").concat(marketplaceText);\n  },\n  destroyed: function destroyed() {\n    this.$store.state.mw.brands.defaultParamsReportMarketplaceHistory.page = 1;\n    this.$store.state.mw.brands.listReportMarketplaceHistory = [];\n  }\n};",null]}