{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Project\\CBPO\\plat-mw-web\\src\\store\\modules\\page\\reports\\index.js","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\store\\modules\\page\\reports\\index.js","mtime":1639556629576},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1626076679949}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.regexp.search\";\nimport _toConsumableArray from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.find-index\";\nimport _defineProperty from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _getters, _mutations, _actions;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as TYPE from '@/actionTypes'; // import { promiseOneReport } from './_dataConfig'\n\nimport _ from 'lodash';\nimport { MW_API } from '@/service/';\nimport * as URL from '@/service/_constant'; // import { ucfirst } from '@/shared/utils'\n\nimport * as utils from '@/shared/utils';\nimport mwFirebaseJob from '@/service/firebaseSvc';\nimport { MarketPlacesResult } from '@/constants/Report';\nimport Vue from 'vue'; // import Vue from 'vue'\n\nvar fieldAccess = ['active', 'marketplaces', 'list_authorized_seller_names', 'logo', 'name_in_dashboard', 'price_manager', 'ignore_screenshot', 'fulfillment', 'order', 'ignore_price_tracking', 'show_upc_in_dashboard', 'priority', 'watch_for_used_items', 'separate_mfn_fba_authorized_seller', 'fba_authorized_seller_names', 'mfn_authorized_seller_names', 'true_map_report'];\nvar state = {\n  listImportReports: {},\n  listReports: {\n    items: [],\n    total: 0\n  },\n  report: {\n    price_manager: {},\n    active: false\n  },\n  listReportMarketplaceHistory: {},\n  tempReport: {},\n  defaultParams: {\n    page: 1,\n    limit: 10,\n    s: null,\n    sort_by: 'name_in_dashboard',\n    sort_dir: 'asc'\n  },\n  defaultParamsImportReports: {\n    page: 1,\n    limit: 250,\n    sort_by: 'name_in_dashboard',\n    sort_dir: 'asc'\n  },\n  defaultParamsReportMarketplaceHistory: {\n    page: 1,\n    limit: 10,\n    report_id: null,\n    marketplace: null\n  },\n  isLoad: false,\n  isGSLoad: false,\n  runReportNr: 0,\n  getValidAmazonReport: [],\n  getValidAmazonCAReport: [],\n  getValidGSReport: [],\n  inventoryHistories: [],\n  inventorySchedules: [],\n  isLoadingReportHistory: false,\n  isLoadingInventoryHistory: false,\n  isLoadingListReports: false,\n  listAmazonReports: [],\n  listGSReports: []\n};\nvar getters = (_getters = {}, _defineProperty(_getters, TYPE.GET_LIST_REPORTS, function (state) {\n  return state.listReports;\n}), _defineProperty(_getters, TYPE.GET_ONE_REPORT, function (state) {\n  return state.report;\n}), _defineProperty(_getters, TYPE.GET_REPORT_LOADING, function (state) {\n  return state.isLoad;\n}), _defineProperty(_getters, TYPE.GET_GS_REPORT_LOADING, function (state) {\n  return state.isGSLoad;\n}), _defineProperty(_getters, TYPE.GET_DEFAULT_PARAMS, function (state) {\n  return state.defaultParams;\n}), _defineProperty(_getters, TYPE.GET_VALID_AMAZON_REPORTS, function (state) {\n  return state.getValidAmazonReport;\n}), _defineProperty(_getters, TYPE.GET_VALID_GS_REPORTS, function (state) {\n  return state.getValidGSReport;\n}), _defineProperty(_getters, TYPE.GET_REPORT_MARKETPLACE_HISTORY, function (state) {\n  return state.listReportMarketplaceHistory;\n}), _defineProperty(_getters, TYPE.GET_REPORT_MARKETPLACE_HISTORY_DEFAULT_PARAMS, function (state) {\n  return state.defaultParamsReportMarketplaceHistory;\n}), _defineProperty(_getters, TYPE.GET_INVENTORY_HISTORY, function (state) {\n  return state.inventoryHistories;\n}), _defineProperty(_getters, TYPE.GET_INVENTORY_SCHEDULES, function (state) {\n  return state.inventorySchedules;\n}), _defineProperty(_getters, TYPE.GET_LIST_IMPORT_REPORTS, function (state) {\n  return state.listImportReports;\n}), _defineProperty(_getters, TYPE.GET_HISTORY_LOADING, function (state) {\n  return state.isLoadingReportHistory;\n}), _defineProperty(_getters, TYPE.GET_INVENTORY_HISTORY_LOADING, function (state) {\n  return state.isLoadingInventoryHistory;\n}), _defineProperty(_getters, TYPE.GET_LIST_REPORT_LOADING, function (state) {\n  return state.isLoadingListReports;\n}), _defineProperty(_getters, TYPE.GET_AMAZON_LIST_REPORTS, function (state) {\n  return state.listAmazonReports;\n}), _defineProperty(_getters, TYPE.GET_GS_LIST_REPORTS, function (state) {\n  return state.listGSReports;\n}), _getters);\n\nvar getShareToken = function getShareToken(payload) {\n  var token = _.has(payload, 'share_token') ? payload.share_token : null;\n\n  if (token) {\n    payload = _.omit(payload, ['share_token']);\n  }\n\n  var config = token ? {\n    share_token: token\n  } : {};\n  return {\n    config: config,\n    oriPayload: payload\n  };\n};\n\nvar mutations = (_mutations = {}, _defineProperty(_mutations, TYPE.SET_LIST_REPORTS, function (state, payload) {\n  state.listReports = _objectSpread({}, payload);\n}), _defineProperty(_mutations, TYPE.SET_INVENTORY_STATUS_LIST_REPORTS, function (state, payload) {\n  var index = state.listReports.items.findIndex(function (element) {\n    return element._id === payload.report_id;\n  });\n\n  if (index !== -1) {\n    if (state.listReports.items[index].activeMarketplaces) {\n      var activeMarketplaces = state.listReports.items[index].activeMarketplaces;\n      var indexUpdateInfo = activeMarketplaces.findIndex(function (e) {\n        return e.value === payload.marketplace;\n      });\n      indexUpdateInfo !== -1 && Vue.set(activeMarketplaces[indexUpdateInfo].info, 'inventory_schedule', payload);\n    }\n\n    var marketplace = \"marketplace_\".concat(payload.marketplace.replace(/[.]/g, '_'));\n    Vue.set(state.listReports.items[index][marketplace], 'inventory_schedule', payload);\n  }\n}), _defineProperty(_mutations, TYPE.SET_LIST_REPORT_MARKETPLACE_HISTORY, function (state, payload) {\n  state.listReportMarketplaceHistory = _objectSpread({}, payload);\n}), _defineProperty(_mutations, TYPE.GET_VALID_AMAZON_REPORTS, function (state, payload) {\n  state.getValidAmazonReport = _objectSpread({}, payload);\n}), _defineProperty(_mutations, TYPE.GET_VALID_GS_REPORTS, function (state, payload) {\n  state.getValidGSReport = _objectSpread({}, payload);\n}), _defineProperty(_mutations, TYPE.SET_ONE_REPORT, function (state, payload) {\n  state.report = payload;\n}), _defineProperty(_mutations, TYPE.SET_REPORT_LOADING, function (state, payload) {\n  state.isLoad = payload;\n}), _defineProperty(_mutations, TYPE.SET_GS_REPORT_LOADING, function (state, payload) {\n  state.isGSLoad = payload;\n}), _defineProperty(_mutations, TYPE.UPDATE_REPORT_PROGRESS, function (state, payload) {\n  var index = state.listReports.items.findIndex(function (item) {\n    return item._id === payload.report_id;\n  });\n\n  if (index !== -1) {\n    if (state.runReportNr > 0) {\n      // console.log('payload', payload)\n      var indexItem = _.findIndex(state.listReports.items[index].activeMarketplaces, function (info) {\n        return info.value === payload.marketplace;\n      });\n\n      if (indexItem !== -1) {\n        if (!_.isEmpty(payload.inventory_schedule)) {\n          state.listReports.items[index].activeMarketplaces[indexItem].info.inventory_schedule = payload.inventory_schedule;\n        } else {\n          state.listReports.items[index].activeMarketplaces[indexItem].info.last_job_status = payload.status; // use this for system mode handle job is map based job\n\n          state.listReports.items[index].activeMarketplaces[indexItem].info.last_job_progress = payload.progress;\n\n          if (typeof payload.number_processed_map === 'number') {\n            state.listReports.items[index].activeMarketplaces[indexItem].info.number_processed_map = payload.number_processed_map;\n          }\n\n          if (typeof payload.number_total_map === 'number') {\n            state.listReports.items[index].activeMarketplaces[indexItem].info.number_total_map = payload.number_total_map;\n          }\n\n          console.log('report is updated');\n        }\n      }\n    } else {\n      state.runReportNr = state.runReportNr + 1;\n      console.log('not update - report');\n    }\n  } // console.log('after', state.items)\n\n}), _defineProperty(_mutations, TYPE.RESET_REPORT_RUN_NR, function (state, payload) {\n  state.runReportNr = 0;\n}), _defineProperty(_mutations, TYPE.SET_IS_DOWLOADING_REPORT, function (state, payload) {\n  // Vue.$set(state.listReports.items[payload.index].activeMarketplaces[payload.indexActiveMarketplaces], 'isLoad', payload.isLoad)\n  state.listReports.items[payload.index].activeMarketplaces[payload.indexActiveMarketplaces].isLoad = payload.isLoad;\n  console.log('state.listReports.items[payload.index].activeMarketplaces[payload.indexActiveMarketplaces].isLoad', state.listReports.items[payload.index].activeMarketplaces[payload.indexActiveMarketplaces].isLoad);\n}), _defineProperty(_mutations, TYPE.SET_INVENTORY_HISTORY, function (state, payload) {\n  state.inventoryHistories = _objectSpread({}, payload);\n}), _defineProperty(_mutations, TYPE.SET_INVENTORY_SCHEDULES, function (state, payload) {\n  state.inventorySchedules = _objectSpread({}, payload);\n}), _defineProperty(_mutations, TYPE.SET_IMPORT_REPORTS, function (state, payload) {\n  state.listImportReports = payload;\n}), _defineProperty(_mutations, TYPE.SET_HISTORY_LOADING, function (state, payload) {\n  state.isLoadingReportHistory = payload;\n}), _defineProperty(_mutations, TYPE.SET_INVENTORY_HISTORY_LOADING, function (state, payload) {\n  state.isLoadingInventoryHistory = payload;\n}), _defineProperty(_mutations, TYPE.SET_LIST_REPORT_LOADING, function (state, payload) {\n  state.isLoadingListReports = payload;\n}), _defineProperty(_mutations, TYPE.SET_EDIT_FORM_LIST_REPORTS, function (state, payload) {\n  state.listGSReports = payload.filter(function (report) {\n    return report.marketplaces.google_shopping === true;\n  });\n  state.listAmazonReports = payload.filter(function (report) {\n    return Object.keys(report.marketplaces).find(function (key) {\n      return key.includes('amazon') && report.marketplaces[key] === true;\n    });\n  });\n}), _mutations);\nvar actions = (_actions = {}, _defineProperty(_actions, TYPE.GET_VALID_AMAZON_REPORTS, function (_ref, params) {\n  var commit = _ref.commit,\n      dispatch = _ref.dispatch;\n  params = _.assign({}, state.getValidAmazonReport, params);\n  commit(TYPE.SET_REPORT_LOADING, true);\n  return new Promise( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resolve, reject) {\n      var _getShareToken, config, oriPayload, res;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _getShareToken = getShareToken(params), config = _getShareToken.config, oriPayload = _getShareToken.oriPayload;\n              _context.next = 4;\n              return MW_API.get(\"\".concat(URL.GET_VALID_AMAZON_REPORT(), \"?\").concat(utils.buildUrlQueryString(oriPayload)), config);\n\n            case 4:\n              res = _context.sent;\n              commit(TYPE.GET_VALID_AMAZON_REPORTS, res.data);\n              commit(TYPE.SET_REPORT_LOADING, false);\n              resolve(res.data);\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              reject(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.GET_VALID_GS_REPORTS, function (_ref3, params) {\n  var commit = _ref3.commit,\n      dispatch = _ref3.dispatch;\n  params = _.assign({}, state.getValidGSReport, params);\n  commit(TYPE.SET_REPORT_LOADING, true);\n  return new Promise( /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(resolve, reject) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return MW_API.get(\"\".concat(URL.GET_VALID_GS_REPORT(), \"?\").concat(utils.buildUrlQueryString(params)));\n\n            case 3:\n              res = _context2.sent;\n              commit(TYPE.GET_VALID_GS_REPORTS, res.data);\n              commit(TYPE.SET_REPORT_LOADING, false);\n              resolve(res.data);\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              reject(_context2.t0);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 9]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.FETCH_LIST_REPORTS, function (_ref5, params) {\n  var commit = _ref5.commit,\n      dispatch = _ref5.dispatch;\n  params = _.assign({}, state.defaultParams, params);\n  commit(TYPE.SET_REPORT_LOADING, true);\n  return new Promise( /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(resolve, reject) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return MW_API.get(\"\".concat(URL.GET_POST_REPORTS(), \"?\").concat(utils.buildUrlQueryString(params)));\n\n            case 3:\n              res = _context3.sent;\n\n              _.forEach(res.data.items, function (item, index) {\n                item.activeMarketplaces = [];\n\n                var keys = _.keys(item.marketplaces);\n\n                _.forEach(keys, function (key) {\n                  if (item.marketplaces[key]) {\n                    item[\"marketplace_\".concat(key)].isLoad = false;\n                    item.activeMarketplaces.push({\n                      key: key,\n                      value: _.includes(key, 'amazon') ? key.replace(/[_]/g, '.') : key,\n                      label: _.includes(key, 'amazon') ? _.upperFirst(key.replace(/[_]/g, '.')) : _.startCase(_.toLower(key.replace(/[_]/g, ' '))),\n                      info: item[\"marketplace_\".concat(key)]\n                    }); // TODO we already migrate data if marketplace is enable - script will create info with field marketplace_${marketplace_field} so i think case null will not happen\n                  }\n                });\n              });\n\n              commit(TYPE.SET_LIST_REPORTS, res.data);\n              commit(TYPE.SET_REPORT_LOADING, false);\n              dispatch(TYPE.LISTEN_TO_FIREBASE_EVENT_REPORT, res.data);\n              resolve(res.data);\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](0);\n              // console.log(error)\n              reject(_context3.t0);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 11]]);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.RESET_REPORTS, function (_ref7) {\n  var commit = _ref7.commit;\n\n  try {\n    var data = {\n      items: [],\n      total: 0\n    };\n    commit(TYPE.SET_LIST_REPORTS, data);\n  } catch (error) {\n    console.log(error);\n  }\n}), _defineProperty(_actions, TYPE.FETCH_LIST_REPORT_MARKETPLACE_HISTORY, function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(_ref8, params) {\n    var commit, res;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            commit = _ref8.commit;\n            _context4.prev = 1;\n            params = _.assign({}, state.defaultParamsReportMarketplaceHistory, params);\n            commit(TYPE.SET_HISTORY_LOADING, true);\n            _context4.next = 6;\n            return MW_API.get(\"\".concat(URL.GET_REPORT_MARKETPLACE_HISTORY(params.report_id, params.marketplace), \"?\").concat(utils.buildUrlQueryString(params)));\n\n          case 6:\n            res = _context4.sent;\n            commit(TYPE.SET_LIST_REPORT_MARKETPLACE_HISTORY, res.data);\n            commit(TYPE.SET_HISTORY_LOADING, false);\n            _context4.next = 15;\n            break;\n\n          case 11:\n            _context4.prev = 11;\n            _context4.t0 = _context4[\"catch\"](1);\n            commit(TYPE.SET_HISTORY_LOADING, false);\n            throw _context4.t0;\n\n          case 15:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[1, 11]]);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref9.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.REMOVE_REPORTS, function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(_ref10, id) {\n    var state;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            state = _ref10.state;\n            return _context6.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n              var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(resolve, reject) {\n                var res;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        _context5.prev = 0;\n                        _context5.next = 3;\n                        return MW_API.delete(URL.EDIT_AND_REMOVE_REPORTS(id));\n\n                      case 3:\n                        res = _context5.sent;\n\n                        _.remove(state.listReports.items, function (d) {\n                          return d._id === id;\n                        });\n\n                        state.listReports.items = _toConsumableArray(state.listReports.items);\n                        resolve(res.data);\n                        _context5.next = 12;\n                        break;\n\n                      case 9:\n                        _context5.prev = 9;\n                        _context5.t0 = _context5[\"catch\"](0);\n                        reject(_context5.t0.response);\n\n                      case 12:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[0, 9]]);\n              }));\n\n              return function (_x11, _x12) {\n                return _ref12.apply(this, arguments);\n              };\n            }()));\n\n          case 2:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref11.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.RUN_A_REPORT, function () {\n  var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(_ref13, info) {\n    var commit, state, dispatch, reportId, runOptions, marketplace;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            commit = _ref13.commit, state = _ref13.state, dispatch = _ref13.dispatch;\n            _context7.prev = 1;\n            reportId = info.id;\n            runOptions = info.runOptions;\n            marketplace = info.runOptions.marketplace; // let res = null\n\n            if (!_.includes(marketplace, 'amazon')) {\n              _context7.next = 10;\n              break;\n            }\n\n            _context7.next = 8;\n            return MW_API.post(URL.RUN_A_REPORT(reportId), _objectSpread({}, runOptions));\n\n          case 8:\n            _context7.next = 13;\n            break;\n\n          case 10:\n            if (!(marketplace === MarketPlacesResult.GOOGLE_SHOPPING)) {\n              _context7.next = 13;\n              break;\n            }\n\n            _context7.next = 13;\n            return MW_API.post(URL.RUN_A_GS_REPORT(reportId), _objectSpread({}, runOptions));\n\n          case 13:\n            _context7.next = 19;\n            break;\n\n          case 15:\n            _context7.prev = 15;\n            _context7.t0 = _context7[\"catch\"](1);\n            console.log('jobs', _context7.t0);\n            throw _.get(_context7.t0, 'response.data', _context7.t0);\n\n          case 19:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[1, 15]]);\n  }));\n\n  return function (_x13, _x14) {\n    return _ref14.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.CANCEL_A_REPORT, function () {\n  var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(_ref15, payload) {\n    var commit, params, result;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            commit = _ref15.commit;\n            _context8.prev = 1;\n            params = {\n              report_id: payload.report_id,\n              marketplace: payload.marketplace\n            };\n            _context8.next = 5;\n            return MW_API.post(URL.CANCEL_A_REPORT(params.report_id, params.marketplace));\n\n          case 5:\n            result = _context8.sent;\n            return _context8.abrupt(\"return\", result.data);\n\n          case 9:\n            _context8.prev = 9;\n            _context8.t0 = _context8[\"catch\"](1);\n            throw _context8.t0;\n\n          case 12:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[1, 9]]);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref16.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.REAL_TIME_STATUS_RUN, function (_ref17, _ref18) {\n  var commit = _ref17.commit,\n      state = _ref17.state,\n      dispatch = _ref17.dispatch;\n  var reportId = _ref18.reportId,\n      reResolve = _ref18.reResolve,\n      reReject = _ref18.reReject;\n  return new Promise( /*#__PURE__*/function () {\n    var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(resolve, reject) {\n      var res, data, report;\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              if (reResolve) {\n                resolve = reResolve;\n                reject = reReject;\n              }\n\n              _context9.prev = 1;\n              _context9.next = 4;\n              return MW_API.get(URL.CHECK_STATUS_RUN_A_REPORT(reportId));\n\n            case 4:\n              res = _context9.sent;\n              data = res.data;\n              report = state.listReports.items.find(function (e) {\n                return e.id === reportId;\n              });\n\n              if (report) {\n                report.last_job = data.last_job;\n                report.last_job_id = data.last_job_id;\n                commit(TYPE.SET_LIST_REPORTS, state.listReports);\n\n                if (res.data.last_job.status === 'running') {\n                  setTimeout(function () {\n                    console.log(reportId, 'realtime get status for job', new Date().getTime() / 1000);\n                    dispatch(TYPE.REAL_TIME_STATUS_RUN, {\n                      reportId: reportId,\n                      reResolve: resolve,\n                      reReject: reject\n                    });\n                  }, 4000);\n                } else {\n                  resolve();\n                }\n              } else {\n                resolve();\n              }\n\n              _context9.next = 14;\n              break;\n\n            case 10:\n              _context9.prev = 10;\n              _context9.t0 = _context9[\"catch\"](1);\n              console.log('realtime get status for job is error', _context9.t0);\n              reject(_context9.t0);\n\n            case 14:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[1, 10]]);\n    }));\n\n    return function (_x17, _x18) {\n      return _ref19.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.REMOTE_EDIT_REPORT, function () {\n  var _ref22 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(_ref20, _ref21) {\n    var commit, state, id, params, report;\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            commit = _ref20.commit, state = _ref20.state;\n            id = _ref21.id, params = _ref21.params;\n            report = _.cloneDeep(params);\n\n            _.forEach(report, function (v, k) {\n              if (fieldAccess.indexOf(k.toLowerCase()) === -1 && !_.includes(k, 'amazon') && !_.includes(k, 'google')) {\n                delete report[k];\n              }\n            });\n\n            return _context11.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n              var _ref23 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(resolve, reject) {\n                var res;\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        _context10.prev = 0;\n                        _context10.next = 3;\n                        return MW_API.put(URL.EDIT_AND_REMOVE_REPORTS(id), _objectSpread({}, report));\n\n                      case 3:\n                        res = _context10.sent;\n                        resolve(res.data);\n                        _context10.next = 10;\n                        break;\n\n                      case 7:\n                        _context10.prev = 7;\n                        _context10.t0 = _context10[\"catch\"](0);\n                        reject(_context10.t0.response);\n\n                      case 10:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10, null, [[0, 7]]);\n              }));\n\n              return function (_x21, _x22) {\n                return _ref23.apply(this, arguments);\n              };\n            }()));\n\n          case 5:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n\n  return function (_x19, _x20) {\n    return _ref22.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.REMOTE_POST_REPORT, function () {\n  var _ref25 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(_ref24, params) {\n    var commit, state, report;\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            commit = _ref24.commit, state = _ref24.state;\n            report = _.cloneDeep(params);\n\n            _.forEach(report, function (v, k) {\n              if (fieldAccess.indexOf(k.toLowerCase()) === -1 && !_.includes(k, 'amazon') && !_.includes(k, 'google')) {\n                delete report[k];\n              }\n            });\n\n            return _context13.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n              var _ref26 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(resolve, reject) {\n                var res;\n                return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                  while (1) {\n                    switch (_context12.prev = _context12.next) {\n                      case 0:\n                        _context12.prev = 0;\n                        _context12.next = 3;\n                        return MW_API.post(URL.GET_POST_REPORTS(), _objectSpread({}, report));\n\n                      case 3:\n                        res = _context12.sent;\n                        resolve(res.data);\n                        _context12.next = 10;\n                        break;\n\n                      case 7:\n                        _context12.prev = 7;\n                        _context12.t0 = _context12[\"catch\"](0);\n                        reject(_context12.t0.response);\n\n                      case 10:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }\n                }, _callee12, null, [[0, 7]]);\n              }));\n\n              return function (_x25, _x26) {\n                return _ref26.apply(this, arguments);\n              };\n            }()));\n\n          case 4:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n\n  return function (_x23, _x24) {\n    return _ref25.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.REMOTE_GET_LINK_DOWNLOAD_JOB, function () {\n  var _ref28 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(_ref27, params) {\n    var commit, state, dispatch;\n    return regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            commit = _ref27.commit, state = _ref27.state, dispatch = _ref27.dispatch;\n            return _context15.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n              var _ref29 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(resolve, reject) {\n                var id, marketplace, source, query, res;\n                return regeneratorRuntime.wrap(function _callee14$(_context14) {\n                  while (1) {\n                    switch (_context14.prev = _context14.next) {\n                      case 0:\n                        _context14.prev = 0;\n                        id = params.id, marketplace = params.marketplace, source = params.source;\n                        query = \"?report_id=\".concat(id, \"&marketplace=\").concat(marketplace);\n\n                        if (source) {\n                          query += \"&source=\".concat(source);\n                        }\n\n                        _context14.next = 6;\n                        return MW_API.get(\"\".concat(URL.DOWNLOAD_JOB_BY_ID(id)).concat(query));\n\n                      case 6:\n                        res = _context14.sent;\n                        resolve(res.data);\n                        _context14.next = 13;\n                        break;\n\n                      case 10:\n                        _context14.prev = 10;\n                        _context14.t0 = _context14[\"catch\"](0);\n                        reject(_context14.t0.response.data);\n\n                      case 13:\n                      case \"end\":\n                        return _context14.stop();\n                    }\n                  }\n                }, _callee14, null, [[0, 10]]);\n              }));\n\n              return function (_x29, _x30) {\n                return _ref29.apply(this, arguments);\n              };\n            }()));\n\n          case 2:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15);\n  }));\n\n  return function (_x27, _x28) {\n    return _ref28.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.FETCH_ONE_REPORT, function (_ref30, id) {\n  var commit = _ref30.commit,\n      state = _ref30.state,\n      dispatch = _ref30.dispatch;\n  return new Promise( /*#__PURE__*/function () {\n    var _ref31 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(resolve, reject) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.prev = 0;\n              _context16.next = 3;\n              return MW_API.get(URL.GET_ONE_REPORT_BY_ID(id));\n\n            case 3:\n              res = _context16.sent;\n              commit(TYPE.SET_ONE_REPORT, res.data);\n              resolve();\n              _context16.next = 11;\n              break;\n\n            case 8:\n              _context16.prev = 8;\n              _context16.t0 = _context16[\"catch\"](0);\n              reject(_context16.t0.data);\n\n            case 11:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16, null, [[0, 8]]);\n    }));\n\n    return function (_x31, _x32) {\n      return _ref31.apply(this, arguments);\n    };\n  }());\n}), _defineProperty(_actions, TYPE.REMOTE_SEARCH_REPORTS, function () {\n  var _ref33 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(_ref32, payload) {\n    var commit, res;\n    return regeneratorRuntime.wrap(function _callee17$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            commit = _ref32.commit;\n            _context17.prev = 1;\n            _context17.next = 4;\n            return MW_API.get(URL.GET_POST_REPORTS(), payload.search ? {\n              params: {\n                s: payload.search\n              }\n            } : {});\n\n          case 4:\n            res = _context17.sent;\n            state.currentPage = 1;\n            commit(TYPE.SET_LIST_REPORTS, res.data);\n            _context17.next = 12;\n            break;\n\n          case 9:\n            _context17.prev = 9;\n            _context17.t0 = _context17[\"catch\"](1);\n            console.log(_context17.t0.data);\n\n          case 12:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, _callee17, null, [[1, 9]]);\n  }));\n\n  return function (_x33, _x34) {\n    return _ref33.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.REMOTE_SORT_REPORTS, function () {\n  var _ref35 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(_ref34, payload) {\n    var commit, state, res;\n    return regeneratorRuntime.wrap(function _callee18$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            commit = _ref34.commit, state = _ref34.state;\n            _context18.prev = 1;\n            _context18.next = 4;\n            return MW_API.get(URL.GET_POST_REPORTS(), {\n              params: _objectSpread({\n                sort_dir: payload.sortDir,\n                sort_by: payload.sortBy\n              }, payload.search ? {\n                s: payload.search\n              } : {})\n            });\n\n          case 4:\n            res = _context18.sent;\n            state.currentPage = 1;\n            commit(TYPE.SET_LIST_REPORTS, res.data);\n            _context18.next = 12;\n            break;\n\n          case 9:\n            _context18.prev = 9;\n            _context18.t0 = _context18[\"catch\"](1);\n            console.log('err', _context18.t0.data);\n\n          case 12:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, _callee18, null, [[1, 9]]);\n  }));\n\n  return function (_x35, _x36) {\n    return _ref35.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, \"resetFirebase\", function resetFirebase(_ref36, payload) {\n  var commit = _ref36.commit;\n\n  if (payload.client_id) {\n    mwFirebaseJob.getFirebaseDb.ref(\"/mw_job_status_\".concat(payload.client_id)).off('value');\n  } else {\n    console.error('client_id is required to reset firebase');\n  }\n}), _defineProperty(_actions, TYPE.LISTEN_TO_FIREBASE_EVENT_REPORT, function (_ref37, payload) {\n  var commit = _ref37.commit;\n\n  if (payload.items[0].client_id) {\n    mwFirebaseJob.getFirebaseDb.ref(\"/mw_job_status_\".concat(payload.items[0].client_id)).off('value');\n    commit(TYPE.RESET_REPORT_RUN_NR);\n    mwFirebaseJob.getFirebaseDb.ref(\"/mw_job_status_\".concat(payload.items[0].client_id)).on('value', function (snapshot) {\n      if (snapshot.val().report_id) {\n        // console.log('mw_job_status', snapshot.val())\n        commit(TYPE.UPDATE_REPORT_PROGRESS, snapshot.val());\n      }\n    }, function (errorObject) {\n      console.log('The read failed: ' + errorObject.code);\n    });\n  } else {\n    console.error('client_id is required to get firebase');\n  }\n}), _defineProperty(_actions, TYPE.SET_IS_DOWLOADING_REPORT, function (_ref38, payload) {\n  var commit = _ref38.commit;\n  commit(TYPE.SET_IS_DOWLOADING_REPORT, payload);\n}), _defineProperty(_actions, TYPE.RUN_AN_INVENTORY, function () {\n  var _ref40 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(_ref39, payload) {\n    var commit, params, result;\n    return regeneratorRuntime.wrap(function _callee19$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            commit = _ref39.commit;\n            _context19.prev = 1;\n            params = {\n              report_id: payload.selectedInfo._id,\n              marketplace: payload.marketplace\n            };\n            _context19.next = 5;\n            return MW_API.post(URL.RUN_AN_INVENTORY(params.report_id, params.marketplace));\n\n          case 5:\n            result = _context19.sent;\n            commit(TYPE.SET_INVENTORY_STATUS_LIST_REPORTS, result.data);\n            return _context19.abrupt(\"return\", result.data);\n\n          case 10:\n            _context19.prev = 10;\n            _context19.t0 = _context19[\"catch\"](1);\n            throw _context19.t0;\n\n          case 13:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, _callee19, null, [[1, 10]]);\n  }));\n\n  return function (_x37, _x38) {\n    return _ref40.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.CANCEL_AN_INVENTORY, function () {\n  var _ref42 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(_ref41, payload) {\n    var commit, params, result;\n    return regeneratorRuntime.wrap(function _callee20$(_context20) {\n      while (1) {\n        switch (_context20.prev = _context20.next) {\n          case 0:\n            commit = _ref41.commit;\n            _context20.prev = 1;\n            params = {\n              report_id: payload.selectedInfo._id,\n              marketplace: payload.marketplace\n            };\n            _context20.next = 5;\n            return MW_API.post(URL.CANCEL_AN_INVENTORY(params.report_id, params.marketplace));\n\n          case 5:\n            result = _context20.sent;\n            commit(TYPE.SET_INVENTORY_STATUS_LIST_REPORTS, result.data);\n            return _context20.abrupt(\"return\", result.data);\n\n          case 10:\n            _context20.prev = 10;\n            _context20.t0 = _context20[\"catch\"](1);\n            throw _context20.t0;\n\n          case 13:\n          case \"end\":\n            return _context20.stop();\n        }\n      }\n    }, _callee20, null, [[1, 10]]);\n  }));\n\n  return function (_x39, _x40) {\n    return _ref42.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.FETCH_INVENTORY_HISTORY, function () {\n  var _ref44 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21(_ref43, params) {\n    var commit, query, result;\n    return regeneratorRuntime.wrap(function _callee21$(_context21) {\n      while (1) {\n        switch (_context21.prev = _context21.next) {\n          case 0:\n            commit = _ref43.commit;\n            _context21.prev = 1;\n            query = {\n              limit: params.limit,\n              page: params.page\n            };\n            commit(TYPE.SET_INVENTORY_HISTORY_LOADING, true);\n            _context21.next = 6;\n            return MW_API.get(\"\".concat(URL.FETCH_INVENTORY_HISTORY(params.report_id, params.marketplace), \"?\").concat(utils.buildUrlQueryString(query)));\n\n          case 6:\n            result = _context21.sent;\n            commit(TYPE.SET_INVENTORY_HISTORY, result.data);\n            commit(TYPE.SET_INVENTORY_HISTORY_LOADING, false);\n            return _context21.abrupt(\"return\", result.data);\n\n          case 12:\n            _context21.prev = 12;\n            _context21.t0 = _context21[\"catch\"](1);\n            commit(TYPE.SET_INVENTORY_HISTORY_LOADING, false);\n            throw _context21.t0;\n\n          case 16:\n          case \"end\":\n            return _context21.stop();\n        }\n      }\n    }, _callee21, null, [[1, 12]]);\n  }));\n\n  return function (_x41, _x42) {\n    return _ref44.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.FETCH_INVENTORY_SCHEDULES, function () {\n  var _ref46 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22(_ref45, params) {\n    var commit, query, result;\n    return regeneratorRuntime.wrap(function _callee22$(_context22) {\n      while (1) {\n        switch (_context22.prev = _context22.next) {\n          case 0:\n            commit = _ref45.commit;\n            _context22.prev = 1;\n            query = {\n              limit: params.limit,\n              page: params.page\n            };\n            _context22.next = 5;\n            return MW_API.get(\"\".concat(URL.FETCH_INVENTORY_SCHEDULES(params.report_id, params.marketplace), \"?\").concat(utils.buildUrlQueryString(query)));\n\n          case 5:\n            result = _context22.sent;\n            commit(TYPE.SET_INVENTORY_SCHEDULES, result.data);\n            return _context22.abrupt(\"return\", result.data);\n\n          case 10:\n            _context22.prev = 10;\n            _context22.t0 = _context22[\"catch\"](1);\n            throw _context22.t0;\n\n          case 13:\n          case \"end\":\n            return _context22.stop();\n        }\n      }\n    }, _callee22, null, [[1, 10]]);\n  }));\n\n  return function (_x43, _x44) {\n    return _ref46.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.ADD_INVENTORY_SCHEDULES, function () {\n  var _ref48 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23(_ref47, params) {\n    var commit, result;\n    return regeneratorRuntime.wrap(function _callee23$(_context23) {\n      while (1) {\n        switch (_context23.prev = _context23.next) {\n          case 0:\n            commit = _ref47.commit;\n            _context23.prev = 1;\n            _context23.next = 4;\n            return MW_API.post(URL.FETCH_INVENTORY_SCHEDULES(params.report_id, params.marketplace), {\n              from: params.from,\n              to: params.to\n            });\n\n          case 4:\n            result = _context23.sent;\n            return _context23.abrupt(\"return\", result.data);\n\n          case 8:\n            _context23.prev = 8;\n            _context23.t0 = _context23[\"catch\"](1);\n            throw _context23.t0;\n\n          case 11:\n          case \"end\":\n            return _context23.stop();\n        }\n      }\n    }, _callee23, null, [[1, 8]]);\n  }));\n\n  return function (_x45, _x46) {\n    return _ref48.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.REMOVE_INVENTORY_SCHEDULES, function () {\n  var _ref50 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24(_ref49, params) {\n    var commit, query, result;\n    return regeneratorRuntime.wrap(function _callee24$(_context24) {\n      while (1) {\n        switch (_context24.prev = _context24.next) {\n          case 0:\n            commit = _ref49.commit;\n            _context24.prev = 1;\n            query = {\n              from: params.from,\n              to: params.to\n            };\n            _context24.next = 5;\n            return MW_API.delete(\"\".concat(URL.FETCH_INVENTORY_SCHEDULES(params.report_id, params.marketplace), \"?\").concat(utils.buildUrlQueryString(query)));\n\n          case 5:\n            result = _context24.sent;\n            return _context24.abrupt(\"return\", result.data);\n\n          case 9:\n            _context24.prev = 9;\n            _context24.t0 = _context24[\"catch\"](1);\n            throw _context24.t0;\n\n          case 12:\n          case \"end\":\n            return _context24.stop();\n        }\n      }\n    }, _callee24, null, [[1, 9]]);\n  }));\n\n  return function (_x47, _x48) {\n    return _ref50.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.REMOVE_INVENTORY_SCHEDULE, function () {\n  var _ref52 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25(_ref51, params) {\n    var commit, result;\n    return regeneratorRuntime.wrap(function _callee25$(_context25) {\n      while (1) {\n        switch (_context25.prev = _context25.next) {\n          case 0:\n            commit = _ref51.commit;\n            _context25.prev = 1;\n            _context25.next = 4;\n            return MW_API.delete(URL.REMOVE_INVENTORY_SCHEDULE(params.report_id, params.marketplace, params.id));\n\n          case 4:\n            result = _context25.sent;\n            return _context25.abrupt(\"return\", result.data);\n\n          case 8:\n            _context25.prev = 8;\n            _context25.t0 = _context25[\"catch\"](1);\n            throw _context25.t0;\n\n          case 11:\n          case \"end\":\n            return _context25.stop();\n        }\n      }\n    }, _callee25, null, [[1, 8]]);\n  }));\n\n  return function (_x49, _x50) {\n    return _ref52.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.CHANGE_REPORT_SCHEDULE_MODE, function () {\n  var _ref54 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee26(_ref53, params) {\n    var commit, result;\n    return regeneratorRuntime.wrap(function _callee26$(_context26) {\n      while (1) {\n        switch (_context26.prev = _context26.next) {\n          case 0:\n            commit = _ref53.commit;\n            _context26.prev = 1;\n            _context26.next = 4;\n            return MW_API.put(URL.CHANGE_REPORT_SCHEDULE_MODE(params.report_id, params.marketplace), {\n              mode: params.mode\n            });\n\n          case 4:\n            result = _context26.sent;\n            return _context26.abrupt(\"return\", result.data);\n\n          case 8:\n            _context26.prev = 8;\n            _context26.t0 = _context26[\"catch\"](1);\n            throw _context26.t0;\n\n          case 11:\n          case \"end\":\n            return _context26.stop();\n        }\n      }\n    }, _callee26, null, [[1, 8]]);\n  }));\n\n  return function (_x51, _x52) {\n    return _ref54.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, TYPE.FETCH_IMPORT_REPORTS, function () {\n  var _ref56 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee27(_ref55, params) {\n    var commit, _yield$MW_API$get, items;\n\n    return regeneratorRuntime.wrap(function _callee27$(_context27) {\n      while (1) {\n        switch (_context27.prev = _context27.next) {\n          case 0:\n            commit = _ref55.commit;\n            _context27.prev = 1;\n            params = _.assign({}, state.defaultParamsImportReports, params);\n            commit(TYPE.SET_LIST_REPORT_LOADING, true);\n            _context27.next = 6;\n            return MW_API.get(URL.GET_POST_REPORTS(), {\n              params: _objectSpread({}, params)\n            });\n\n          case 6:\n            _yield$MW_API$get = _context27.sent;\n            items = _yield$MW_API$get.data.items;\n            commit(TYPE.SET_IMPORT_REPORTS, items);\n            commit(TYPE.SET_EDIT_FORM_LIST_REPORTS, items);\n            commit(TYPE.SET_LIST_REPORT_LOADING, false);\n            _context27.next = 17;\n            break;\n\n          case 13:\n            _context27.prev = 13;\n            _context27.t0 = _context27[\"catch\"](1);\n            commit(TYPE.SET_LIST_REPORT_LOADING, false);\n            throw _context27.t0;\n\n          case 17:\n          case \"end\":\n            return _context27.stop();\n        }\n      }\n    }, _callee27, null, [[1, 13]]);\n  }));\n\n  return function (_x53, _x54) {\n    return _ref56.apply(this, arguments);\n  };\n}()), _actions);\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["C:/Project/CBPO/plat-mw-web/src/store/modules/page/reports/index.js"],"names":["TYPE","_","MW_API","URL","utils","mwFirebaseJob","MarketPlacesResult","Vue","fieldAccess","state","listImportReports","listReports","items","total","report","price_manager","active","listReportMarketplaceHistory","tempReport","defaultParams","page","limit","s","sort_by","sort_dir","defaultParamsImportReports","defaultParamsReportMarketplaceHistory","report_id","marketplace","isLoad","isGSLoad","runReportNr","getValidAmazonReport","getValidAmazonCAReport","getValidGSReport","inventoryHistories","inventorySchedules","isLoadingReportHistory","isLoadingInventoryHistory","isLoadingListReports","listAmazonReports","listGSReports","getters","GET_LIST_REPORTS","GET_ONE_REPORT","GET_REPORT_LOADING","GET_GS_REPORT_LOADING","GET_DEFAULT_PARAMS","GET_VALID_AMAZON_REPORTS","GET_VALID_GS_REPORTS","GET_REPORT_MARKETPLACE_HISTORY","GET_REPORT_MARKETPLACE_HISTORY_DEFAULT_PARAMS","GET_INVENTORY_HISTORY","GET_INVENTORY_SCHEDULES","GET_LIST_IMPORT_REPORTS","GET_HISTORY_LOADING","GET_INVENTORY_HISTORY_LOADING","GET_LIST_REPORT_LOADING","GET_AMAZON_LIST_REPORTS","GET_GS_LIST_REPORTS","getShareToken","payload","token","has","share_token","omit","config","oriPayload","mutations","SET_LIST_REPORTS","SET_INVENTORY_STATUS_LIST_REPORTS","index","findIndex","element","_id","activeMarketplaces","indexUpdateInfo","e","value","set","info","replace","SET_LIST_REPORT_MARKETPLACE_HISTORY","SET_ONE_REPORT","SET_REPORT_LOADING","SET_GS_REPORT_LOADING","UPDATE_REPORT_PROGRESS","item","indexItem","isEmpty","inventory_schedule","last_job_status","status","last_job_progress","progress","number_processed_map","number_total_map","console","log","RESET_REPORT_RUN_NR","SET_IS_DOWLOADING_REPORT","indexActiveMarketplaces","SET_INVENTORY_HISTORY","SET_INVENTORY_SCHEDULES","SET_IMPORT_REPORTS","SET_HISTORY_LOADING","SET_INVENTORY_HISTORY_LOADING","SET_LIST_REPORT_LOADING","SET_EDIT_FORM_LIST_REPORTS","filter","marketplaces","google_shopping","Object","keys","find","key","includes","actions","params","commit","dispatch","assign","Promise","resolve","reject","get","GET_VALID_AMAZON_REPORT","buildUrlQueryString","res","data","GET_VALID_GS_REPORT","FETCH_LIST_REPORTS","GET_POST_REPORTS","forEach","push","label","upperFirst","startCase","toLower","LISTEN_TO_FIREBASE_EVENT_REPORT","RESET_REPORTS","error","FETCH_LIST_REPORT_MARKETPLACE_HISTORY","REMOVE_REPORTS","id","delete","EDIT_AND_REMOVE_REPORTS","remove","d","response","RUN_A_REPORT","reportId","runOptions","post","GOOGLE_SHOPPING","RUN_A_GS_REPORT","CANCEL_A_REPORT","result","REAL_TIME_STATUS_RUN","reResolve","reReject","CHECK_STATUS_RUN_A_REPORT","last_job","last_job_id","setTimeout","Date","getTime","REMOTE_EDIT_REPORT","cloneDeep","v","k","indexOf","toLowerCase","put","REMOTE_POST_REPORT","REMOTE_GET_LINK_DOWNLOAD_JOB","source","query","DOWNLOAD_JOB_BY_ID","FETCH_ONE_REPORT","GET_ONE_REPORT_BY_ID","REMOTE_SEARCH_REPORTS","search","currentPage","REMOTE_SORT_REPORTS","sortDir","sortBy","client_id","getFirebaseDb","ref","off","on","snapshot","val","errorObject","code","RUN_AN_INVENTORY","selectedInfo","CANCEL_AN_INVENTORY","FETCH_INVENTORY_HISTORY","FETCH_INVENTORY_SCHEDULES","ADD_INVENTORY_SCHEDULES","from","to","REMOVE_INVENTORY_SCHEDULES","REMOVE_INVENTORY_SCHEDULE","CHANGE_REPORT_SCHEDULE_MODE","mode","FETCH_IMPORT_REPORTS","namespaced"],"mappings":"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","sourcesContent":["import * as TYPE from '@/actionTypes'\r\n// import { promiseOneReport } from './_dataConfig'\r\nimport _ from 'lodash'\r\nimport { MW_API } from '@/service/'\r\nimport * as URL from '@/service/_constant'\r\n// import { ucfirst } from '@/shared/utils'\r\nimport * as utils from '@/shared/utils'\r\nimport mwFirebaseJob from '@/service/firebaseSvc'\r\nimport { MarketPlacesResult } from '@/constants/Report'\r\nimport Vue from 'vue'\r\n// import Vue from 'vue'\r\n\r\nconst fieldAccess = [\r\n  'active',\r\n  'marketplaces',\r\n  'list_authorized_seller_names',\r\n  'logo',\r\n  'name_in_dashboard',\r\n  'price_manager',\r\n  'ignore_screenshot',\r\n  'fulfillment',\r\n  'order',\r\n  'ignore_price_tracking',\r\n  'show_upc_in_dashboard',\r\n  'priority',\r\n  'watch_for_used_items',\r\n  'separate_mfn_fba_authorized_seller',\r\n  'fba_authorized_seller_names',\r\n  'mfn_authorized_seller_names',\r\n  'true_map_report'\r\n]\r\n\r\nconst state = {\r\n  listImportReports: {},\r\n  listReports: {\r\n    items: [],\r\n    total: 0\r\n  },\r\n  report: {\r\n    price_manager: {},\r\n    active: false\r\n  },\r\n  listReportMarketplaceHistory: {},\r\n  tempReport: {},\r\n  defaultParams: {\r\n    page: 1,\r\n    limit: 10,\r\n    s: null,\r\n    sort_by: 'name_in_dashboard',\r\n    sort_dir: 'asc'\r\n  },\r\n  defaultParamsImportReports: {\r\n    page: 1,\r\n    limit: 250,\r\n    sort_by: 'name_in_dashboard',\r\n    sort_dir: 'asc'\r\n  },\r\n  defaultParamsReportMarketplaceHistory: {\r\n    page: 1,\r\n    limit: 10,\r\n    report_id: null,\r\n    marketplace: null\r\n  },\r\n  isLoad: false,\r\n  isGSLoad: false,\r\n  runReportNr: 0,\r\n  getValidAmazonReport: [],\r\n  getValidAmazonCAReport: [],\r\n  getValidGSReport: [],\r\n  inventoryHistories: [],\r\n  inventorySchedules: [],\r\n  isLoadingReportHistory: false,\r\n  isLoadingInventoryHistory: false,\r\n  isLoadingListReports: false,\r\n  listAmazonReports: [],\r\n  listGSReports: []\r\n}\r\nconst getters = {\r\n  [TYPE.GET_LIST_REPORTS]: (state) => state.listReports,\r\n  [TYPE.GET_ONE_REPORT]: (state) => state.report,\r\n  [TYPE.GET_REPORT_LOADING]: (state) => state.isLoad,\r\n  [TYPE.GET_GS_REPORT_LOADING]: (state) => state.isGSLoad,\r\n  [TYPE.GET_DEFAULT_PARAMS]: (state) => state.defaultParams,\r\n  [TYPE.GET_VALID_AMAZON_REPORTS]: (state) => state.getValidAmazonReport,\r\n  [TYPE.GET_VALID_GS_REPORTS]: (state) => state.getValidGSReport,\r\n  [TYPE.GET_REPORT_MARKETPLACE_HISTORY]: (state) => state.listReportMarketplaceHistory,\r\n  [TYPE.GET_REPORT_MARKETPLACE_HISTORY_DEFAULT_PARAMS]: (state) => state.defaultParamsReportMarketplaceHistory,\r\n  [TYPE.GET_INVENTORY_HISTORY]: (state) => state.inventoryHistories,\r\n  [TYPE.GET_INVENTORY_SCHEDULES]: (state) => state.inventorySchedules,\r\n  [TYPE.GET_LIST_IMPORT_REPORTS]: (state) => state.listImportReports,\r\n  [TYPE.GET_HISTORY_LOADING]: (state) => state.isLoadingReportHistory,\r\n  [TYPE.GET_INVENTORY_HISTORY_LOADING]: (state) => state.isLoadingInventoryHistory,\r\n  [TYPE.GET_LIST_REPORT_LOADING]: (state) => state.isLoadingListReports,\r\n  [TYPE.GET_AMAZON_LIST_REPORTS]: (state) => state.listAmazonReports,\r\n  [TYPE.GET_GS_LIST_REPORTS]: (state) => state.listGSReports\r\n}\r\nconst getShareToken = (payload) => {\r\n  const token = _.has(payload, 'share_token') ? payload.share_token : null\r\n  if (token) {\r\n    payload = _.omit(payload, ['share_token'])\r\n  }\r\n  const config = token ? { share_token: token } : {}\r\n  return { config: config, oriPayload: payload }\r\n}\r\n\r\nconst mutations = {\r\n  [TYPE.SET_LIST_REPORTS] (state, payload) {\r\n    state.listReports = { ...payload }\r\n  },\r\n  [TYPE.SET_INVENTORY_STATUS_LIST_REPORTS] (state, payload) {\r\n    const index = state.listReports.items.findIndex(element => element._id === payload.report_id)\r\n    if (index !== -1) {\r\n      if (state.listReports.items[index].activeMarketplaces) {\r\n        const activeMarketplaces = state.listReports.items[index].activeMarketplaces\r\n        const indexUpdateInfo = activeMarketplaces.findIndex(e => e.value === payload.marketplace)\r\n        indexUpdateInfo !== -1 && Vue.set(activeMarketplaces[indexUpdateInfo].info, 'inventory_schedule', payload)\r\n      }\r\n      const marketplace = `marketplace_${payload.marketplace.replace(/[.]/g, '_')}`\r\n      Vue.set(state.listReports.items[index][marketplace], 'inventory_schedule', payload)\r\n    }\r\n  },\r\n  [TYPE.SET_LIST_REPORT_MARKETPLACE_HISTORY] (state, payload) {\r\n    state.listReportMarketplaceHistory = { ...payload }\r\n  },\r\n  [TYPE.GET_VALID_AMAZON_REPORTS] (state, payload) {\r\n    state.getValidAmazonReport = { ...payload }\r\n  },\r\n  [TYPE.GET_VALID_GS_REPORTS] (state, payload) {\r\n    state.getValidGSReport = { ...payload }\r\n  },\r\n  [TYPE.SET_ONE_REPORT] (state, payload) {\r\n    state.report = payload\r\n  },\r\n  [TYPE.SET_REPORT_LOADING] (state, payload) {\r\n    state.isLoad = payload\r\n  },\r\n  [TYPE.SET_GS_REPORT_LOADING] (state, payload) {\r\n    state.isGSLoad = payload\r\n  },\r\n  [TYPE.UPDATE_REPORT_PROGRESS] (state, payload) {\r\n    let index = state.listReports.items.findIndex(item => item._id === payload.report_id)\r\n    if (index !== -1) {\r\n      if (state.runReportNr > 0) {\r\n        // console.log('payload', payload)\r\n        const indexItem = _.findIndex(state.listReports.items[index].activeMarketplaces, (info) => { return info.value === payload.marketplace })\r\n        if (indexItem !== -1) {\r\n          if (!_.isEmpty(payload.inventory_schedule)) {\r\n            state.listReports.items[index].activeMarketplaces[indexItem].info.inventory_schedule = payload.inventory_schedule\r\n          } else {\r\n            state.listReports.items[index].activeMarketplaces[indexItem].info.last_job_status = payload.status\r\n            // use this for system mode handle job is map based job\r\n            state.listReports.items[index].activeMarketplaces[indexItem].info.last_job_progress = payload.progress\r\n            if (typeof (payload.number_processed_map) === 'number') {\r\n              state.listReports.items[index].activeMarketplaces[indexItem].info.number_processed_map = payload.number_processed_map\r\n            }\r\n            if (typeof (payload.number_total_map) === 'number') {\r\n              state.listReports.items[index].activeMarketplaces[indexItem].info.number_total_map = payload.number_total_map\r\n            }\r\n            console.log('report is updated')\r\n          }\r\n        }\r\n      } else {\r\n        state.runReportNr = state.runReportNr + 1\r\n        console.log('not update - report')\r\n      }\r\n    }\r\n    // console.log('after', state.items)\r\n  },\r\n  [TYPE.RESET_REPORT_RUN_NR] (state, payload) {\r\n    state.runReportNr = 0\r\n  },\r\n  [TYPE.SET_IS_DOWLOADING_REPORT] (state, payload) {\r\n    // Vue.$set(state.listReports.items[payload.index].activeMarketplaces[payload.indexActiveMarketplaces], 'isLoad', payload.isLoad)\r\n    state.listReports.items[payload.index].activeMarketplaces[payload.indexActiveMarketplaces].isLoad = payload.isLoad\r\n    console.log('state.listReports.items[payload.index].activeMarketplaces[payload.indexActiveMarketplaces].isLoad', state.listReports.items[payload.index].activeMarketplaces[payload.indexActiveMarketplaces].isLoad)\r\n  },\r\n  [TYPE.SET_INVENTORY_HISTORY] (state, payload) {\r\n    state.inventoryHistories = { ...payload }\r\n  },\r\n  [TYPE.SET_INVENTORY_SCHEDULES] (state, payload) {\r\n    state.inventorySchedules = { ...payload }\r\n  },\r\n  [TYPE.SET_IMPORT_REPORTS] (state, payload) {\r\n    state.listImportReports = payload\r\n  },\r\n  [TYPE.SET_HISTORY_LOADING] (state, payload) {\r\n    state.isLoadingReportHistory = payload\r\n  },\r\n  [TYPE.SET_INVENTORY_HISTORY_LOADING] (state, payload) {\r\n    state.isLoadingInventoryHistory = payload\r\n  },\r\n  [TYPE.SET_LIST_REPORT_LOADING] (state, payload) {\r\n    state.isLoadingListReports = payload\r\n  },\r\n  [TYPE.SET_EDIT_FORM_LIST_REPORTS] (state, payload) {\r\n    state.listGSReports = payload.filter(report => report.marketplaces.google_shopping === true)\r\n    state.listAmazonReports = payload.filter(report => {\r\n      return Object.keys(report.marketplaces).find(key => key.includes('amazon') && report.marketplaces[key] === true)\r\n    })\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  [TYPE.GET_VALID_AMAZON_REPORTS] ({ commit, dispatch }, params) {\r\n    params = _.assign({}, state.getValidAmazonReport, params)\r\n    commit(TYPE.SET_REPORT_LOADING, true)\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const { config, oriPayload } = getShareToken(params)\r\n        const res = await MW_API.get(`${URL.GET_VALID_AMAZON_REPORT()}?${utils.buildUrlQueryString(oriPayload)}`, config)\r\n        commit(TYPE.GET_VALID_AMAZON_REPORTS, res.data)\r\n        commit(TYPE.SET_REPORT_LOADING, false)\r\n        resolve(res.data)\r\n      } catch (error) {\r\n        reject(error)\r\n      }\r\n    })\r\n  },\r\n  [TYPE.GET_VALID_GS_REPORTS] ({ commit, dispatch }, params) {\r\n    params = _.assign({}, state.getValidGSReport, params)\r\n    commit(TYPE.SET_REPORT_LOADING, true)\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await MW_API.get(`${URL.GET_VALID_GS_REPORT()}?${utils.buildUrlQueryString(params)}`)\r\n        commit(TYPE.GET_VALID_GS_REPORTS, res.data)\r\n        commit(TYPE.SET_REPORT_LOADING, false)\r\n        resolve(res.data)\r\n      } catch (error) {\r\n        reject(error)\r\n      }\r\n    })\r\n  },\r\n  [TYPE.FETCH_LIST_REPORTS] ({ commit, dispatch }, params) {\r\n    params = _.assign({}, state.defaultParams, params)\r\n    commit(TYPE.SET_REPORT_LOADING, true)\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await MW_API.get(`${URL.GET_POST_REPORTS()}?${utils.buildUrlQueryString(params)}`)\r\n        _.forEach(res.data.items, (item, index) => {\r\n          item.activeMarketplaces = []\r\n          const keys = _.keys(item.marketplaces)\r\n          _.forEach(keys, (key) => {\r\n            if (item.marketplaces[key]) {\r\n              item[`marketplace_${key}`].isLoad = false\r\n              item.activeMarketplaces.push({\r\n                key: key,\r\n                value: _.includes(key, 'amazon') ? key.replace(/[_]/g, '.') : key,\r\n                label: _.includes(key, 'amazon') ? _.upperFirst(key.replace(/[_]/g, '.')) : _.startCase(_.toLower(key.replace(/[_]/g, ' '))),\r\n                info: item[`marketplace_${key}`]\r\n              }) // TODO we already migrate data if marketplace is enable - script will create info with field marketplace_${marketplace_field} so i think case null will not happen\r\n            }\r\n          })\r\n        })\r\n        commit(TYPE.SET_LIST_REPORTS, res.data)\r\n        commit(TYPE.SET_REPORT_LOADING, false)\r\n        dispatch(TYPE.LISTEN_TO_FIREBASE_EVENT_REPORT, res.data)\r\n        resolve(res.data)\r\n      } catch (error) {\r\n        // console.log(error)\r\n        reject(error)\r\n      }\r\n    })\r\n  },\r\n  [TYPE.RESET_REPORTS] ({ commit }) {\r\n    try {\r\n      let data = {\r\n        items: [],\r\n        total: 0\r\n      }\r\n      commit(TYPE.SET_LIST_REPORTS, data)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  },\r\n  async [TYPE.FETCH_LIST_REPORT_MARKETPLACE_HISTORY]({ commit }, params) {\r\n    try {\r\n      params = _.assign({}, state.defaultParamsReportMarketplaceHistory, params)\r\n      commit(TYPE.SET_HISTORY_LOADING, true)\r\n      const res = await MW_API.get(`${URL.GET_REPORT_MARKETPLACE_HISTORY(params.report_id, params.marketplace)}?${utils.buildUrlQueryString(params)}`)\r\n      commit(TYPE.SET_LIST_REPORT_MARKETPLACE_HISTORY, res.data)\r\n      commit(TYPE.SET_HISTORY_LOADING, false)\r\n    } catch (error) {\r\n      commit(TYPE.SET_HISTORY_LOADING, false)\r\n      throw error\r\n    }\r\n  },\r\n  async [TYPE.REMOVE_REPORTS] ({ state }, id) {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await MW_API.delete(URL.EDIT_AND_REMOVE_REPORTS(id))\r\n        _.remove(state.listReports.items, (d) => d._id === id)\r\n        state.listReports.items = [...state.listReports.items]\r\n        resolve(res.data)\r\n      } catch (error) {\r\n        reject(error.response)\r\n      }\r\n    })\r\n  },\r\n  async [TYPE.RUN_A_REPORT] ({ commit, state, dispatch }, info) {\r\n    // return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const reportId = info.id\r\n      const runOptions = info.runOptions\r\n      const marketplace = info.runOptions.marketplace\r\n      // let res = null\r\n      if (_.includes(marketplace, 'amazon')) {\r\n        await MW_API.post(URL.RUN_A_REPORT(reportId), {\r\n          ...runOptions\r\n        })\r\n      } else if (marketplace === MarketPlacesResult.GOOGLE_SHOPPING) {\r\n        await MW_API.post(URL.RUN_A_GS_REPORT(reportId), {\r\n          ...runOptions\r\n        })\r\n      }\r\n      // const { data } = res\r\n      // const report = state.listReports.items.find((e) => e._id === reportId)\r\n      // if (report) {\r\n      //   const index = _.findIndex(report.activeMarketplaces, (info) => { return info.value === marketplace })\r\n      // for system mode handle mode report based task\r\n      // report.activeMarketplaces[index].info.latest_job = {\r\n      //   status: data.status,\r\n      //   progress: data.progress\r\n      // }\r\n      // report.activeMarketplaces[index].info.last_job_id = data.id\r\n      // report.activeMarketplaces[index].info.last_job_status = data.status\r\n      // for system mode handle mode map based task\r\n      // report.activeMarketplaces[index].info.last_job_status = data.status\r\n      // report.activeMarketplaces[index].info.last_job_progress = 0\r\n      // if (data.system_mode_handling_mode === SystemJobHandlingMode.TASK_PER_MAP) {\r\n      //   report.activeMarketplaces[index].info.last_job_status = data.status\r\n      //   report.activeMarketplaces[index].info.last_job_progress = 0\r\n      // } else if (data.system_mode_handling_mode === SystemJobHandlingMode) {\r\n      //\r\n      // }\r\n      // }\r\n      // commit(TYPE.SET_LIST_REPORTS, state.listReports)\r\n      // if (res.data.status === 'running') {\r\n      //   await dispatch(TYPE.REAL_TIME_STATUS_RUN, { reportId })\r\n      // }\r\n      // console.log('end jobs', reportId)\r\n      // resolve()\r\n    } catch (error) {\r\n      console.log('jobs', error)\r\n      throw _.get(error, 'response.data', error)\r\n    }\r\n  },\r\n  async [TYPE.CANCEL_A_REPORT]({ commit }, payload) {\r\n    try {\r\n      const params = {\r\n        report_id: payload.report_id,\r\n        marketplace: payload.marketplace\r\n      }\r\n      const result = await MW_API.post(URL.CANCEL_A_REPORT(params.report_id, params.marketplace))\r\n      return result.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n  [TYPE.REAL_TIME_STATUS_RUN] (\r\n    { commit, state, dispatch },\r\n    { reportId, reResolve, reReject }\r\n  ) {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (reResolve) {\r\n        resolve = reResolve\r\n        reject = reReject\r\n      }\r\n      try {\r\n        const res = await MW_API.get(URL.CHECK_STATUS_RUN_A_REPORT(reportId))\r\n        const { data } = res\r\n        const report = state.listReports.items.find((e) => e.id === reportId)\r\n        if (report) {\r\n          report.last_job = data.last_job\r\n          report.last_job_id = data.last_job_id\r\n          commit(TYPE.SET_LIST_REPORTS, state.listReports)\r\n          if (res.data.last_job.status === 'running') {\r\n            setTimeout(() => {\r\n              console.log(\r\n                reportId,\r\n                'realtime get status for job',\r\n                new Date().getTime() / 1000\r\n              )\r\n              dispatch(TYPE.REAL_TIME_STATUS_RUN, {\r\n                reportId,\r\n                reResolve: resolve,\r\n                reReject: reject\r\n              })\r\n            }, 4000)\r\n          } else {\r\n            resolve()\r\n          }\r\n        } else {\r\n          resolve()\r\n        }\r\n      } catch (error) {\r\n        console.log('realtime get status for job is error', error)\r\n        reject(error)\r\n      }\r\n    })\r\n  },\r\n  async [TYPE.REMOTE_EDIT_REPORT] ({ commit, state }, { id, params }) {\r\n    const report = _.cloneDeep(params)\r\n    _.forEach(report, (v, k) => {\r\n      if (fieldAccess.indexOf(k.toLowerCase()) === -1 && (!_.includes(k, 'amazon') && !_.includes(k, 'google'))) {\r\n        delete report[k]\r\n      }\r\n    })\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await MW_API.put(URL.EDIT_AND_REMOVE_REPORTS(id), {\r\n          ...report\r\n        })\r\n        resolve(res.data)\r\n      } catch (error) {\r\n        reject(error.response)\r\n      }\r\n    })\r\n  },\r\n  async [TYPE.REMOTE_POST_REPORT] ({ commit, state }, params) {\r\n    const report = _.cloneDeep(params)\r\n    _.forEach(report, (v, k) => {\r\n      if (fieldAccess.indexOf(k.toLowerCase()) === -1 && (!_.includes(k, 'amazon') && !_.includes(k, 'google'))) {\r\n        delete report[k]\r\n      }\r\n    })\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await MW_API.post(URL.GET_POST_REPORTS(), {\r\n          ...report\r\n        })\r\n        resolve(res.data)\r\n      } catch (error) {\r\n        reject(error.response)\r\n      }\r\n    })\r\n  },\r\n  async [TYPE.REMOTE_GET_LINK_DOWNLOAD_JOB] ({ commit, state, dispatch }, params) {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const { id, marketplace, source } = params\r\n        let query = `?report_id=${id}&marketplace=${marketplace}`\r\n        if (source) {\r\n          query += `&source=${source}`\r\n        }\r\n        const res = await MW_API.get(`${URL.DOWNLOAD_JOB_BY_ID(id)}${query}`)\r\n        resolve(res.data)\r\n      } catch (error) {\r\n        reject(error.response.data)\r\n      }\r\n    })\r\n  },\r\n  [TYPE.FETCH_ONE_REPORT] ({ commit, state, dispatch }, id) {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await MW_API.get(URL.GET_ONE_REPORT_BY_ID(id))\r\n        commit(TYPE.SET_ONE_REPORT, res.data)\r\n        resolve()\r\n      } catch (error) {\r\n        reject(error.data)\r\n      }\r\n    })\r\n  },\r\n  async [TYPE.REMOTE_SEARCH_REPORTS] ({ commit }, payload) {\r\n    try {\r\n      const res = await MW_API.get(URL.GET_POST_REPORTS(), payload.search ? {\r\n        params: {\r\n          s: payload.search\r\n        }\r\n      } : {})\r\n      state.currentPage = 1\r\n      commit(TYPE.SET_LIST_REPORTS, res.data)\r\n    } catch (error) {\r\n      console.log(error.data)\r\n    }\r\n  },\r\n  async [TYPE.REMOTE_SORT_REPORTS] ({ commit, state }, payload) {\r\n    try {\r\n      const res = await MW_API.get(URL.GET_POST_REPORTS(), {\r\n        params: {\r\n          sort_dir: payload.sortDir,\r\n          sort_by: payload.sortBy,\r\n          ...(payload.search ? { s: payload.search } : {})\r\n        }\r\n      })\r\n      state.currentPage = 1\r\n      commit(TYPE.SET_LIST_REPORTS, res.data)\r\n    } catch (error) {\r\n      console.log('err', error.data)\r\n    }\r\n  },\r\n  resetFirebase ({ commit }, payload) {\r\n    if (payload.client_id) {\r\n      mwFirebaseJob.getFirebaseDb.ref(`/mw_job_status_${payload.client_id}`).off('value')\r\n    } else {\r\n      console.error('client_id is required to reset firebase')\r\n    }\r\n  },\r\n  [TYPE.LISTEN_TO_FIREBASE_EVENT_REPORT] ({ commit }, payload) {\r\n    if (payload.items[0].client_id) {\r\n      mwFirebaseJob.getFirebaseDb.ref(`/mw_job_status_${payload.items[0].client_id}`).off('value')\r\n      commit(TYPE.RESET_REPORT_RUN_NR)\r\n      mwFirebaseJob.getFirebaseDb.ref(`/mw_job_status_${payload.items[0].client_id}`).on('value',\r\n        function (snapshot) {\r\n          if (snapshot.val().report_id) {\r\n            // console.log('mw_job_status', snapshot.val())\r\n            commit(TYPE.UPDATE_REPORT_PROGRESS, snapshot.val())\r\n          }\r\n        },\r\n        function (errorObject) {\r\n          console.log('The read failed: ' + errorObject.code)\r\n        })\r\n    } else {\r\n      console.error('client_id is required to get firebase')\r\n    }\r\n  },\r\n  [TYPE.SET_IS_DOWLOADING_REPORT] ({commit}, payload) {\r\n    commit(TYPE.SET_IS_DOWLOADING_REPORT, payload)\r\n  },\r\n  async [TYPE.RUN_AN_INVENTORY]({commit}, payload) {\r\n    try {\r\n      const params = {\r\n        report_id: payload.selectedInfo._id,\r\n        marketplace: payload.marketplace\r\n      }\r\n      const result = await MW_API.post(URL.RUN_AN_INVENTORY(params.report_id, params.marketplace))\r\n      commit(TYPE.SET_INVENTORY_STATUS_LIST_REPORTS, result.data)\r\n      return result.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n  async [TYPE.CANCEL_AN_INVENTORY]({commit}, payload) {\r\n    try {\r\n      const params = {\r\n        report_id: payload.selectedInfo._id,\r\n        marketplace: payload.marketplace\r\n      }\r\n      const result = await MW_API.post(URL.CANCEL_AN_INVENTORY(params.report_id, params.marketplace))\r\n      commit(TYPE.SET_INVENTORY_STATUS_LIST_REPORTS, result.data)\r\n      return result.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n  async [TYPE.FETCH_INVENTORY_HISTORY]({ commit }, params) {\r\n    try {\r\n      const query = {\r\n        limit: params.limit,\r\n        page: params.page\r\n      }\r\n      commit(TYPE.SET_INVENTORY_HISTORY_LOADING, true)\r\n      const result = await MW_API.get(`${URL.FETCH_INVENTORY_HISTORY(params.report_id, params.marketplace)}?${utils.buildUrlQueryString(query)}`)\r\n      commit(TYPE.SET_INVENTORY_HISTORY, result.data)\r\n      commit(TYPE.SET_INVENTORY_HISTORY_LOADING, false)\r\n      return result.data\r\n    } catch (error) {\r\n      commit(TYPE.SET_INVENTORY_HISTORY_LOADING, false)\r\n      throw error\r\n    }\r\n  },\r\n  async [TYPE.FETCH_INVENTORY_SCHEDULES]({ commit }, params) {\r\n    try {\r\n      const query = {\r\n        limit: params.limit,\r\n        page: params.page\r\n      }\r\n      const result = await MW_API.get(`${URL.FETCH_INVENTORY_SCHEDULES(params.report_id, params.marketplace)}?${utils.buildUrlQueryString(query)}`)\r\n      commit(TYPE.SET_INVENTORY_SCHEDULES, result.data)\r\n      return result.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n  async [TYPE.ADD_INVENTORY_SCHEDULES]({ commit }, params) {\r\n    try {\r\n      const result = await MW_API.post(\r\n        URL.FETCH_INVENTORY_SCHEDULES(params.report_id, params.marketplace),\r\n        {\r\n          from: params.from,\r\n          to: params.to\r\n        }\r\n      )\r\n      return result.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n  async [TYPE.REMOVE_INVENTORY_SCHEDULES]({ commit }, params) {\r\n    try {\r\n      const query = {\r\n        from: params.from,\r\n        to: params.to\r\n      }\r\n      const result = await MW_API.delete(`${URL.FETCH_INVENTORY_SCHEDULES(params.report_id, params.marketplace)}?${utils.buildUrlQueryString(query)}`)\r\n      return result.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n  async [TYPE.REMOVE_INVENTORY_SCHEDULE]({ commit }, params) {\r\n    try {\r\n      const result = await MW_API.delete(URL.REMOVE_INVENTORY_SCHEDULE(params.report_id, params.marketplace, params.id))\r\n      return result.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n  async [TYPE.CHANGE_REPORT_SCHEDULE_MODE]({ commit }, params) {\r\n    try {\r\n      const result = await MW_API.put(\r\n        URL.CHANGE_REPORT_SCHEDULE_MODE(params.report_id, params.marketplace),\r\n        { mode: params.mode }\r\n      )\r\n      return result.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n  async [TYPE.FETCH_IMPORT_REPORTS] ({commit}, params) {\r\n    try {\r\n      params = _.assign({}, state.defaultParamsImportReports, params)\r\n      commit(TYPE.SET_LIST_REPORT_LOADING, true)\r\n      const { data: { items } } = await MW_API.get(URL.GET_POST_REPORTS(), {\r\n        params: {\r\n          ...params\r\n        }\r\n      })\r\n      commit(TYPE.SET_IMPORT_REPORTS, items)\r\n      commit(TYPE.SET_EDIT_FORM_LIST_REPORTS, items)\r\n      commit(TYPE.SET_LIST_REPORT_LOADING, false)\r\n    } catch (error) {\r\n      commit(TYPE.SET_LIST_REPORT_LOADING, false)\r\n      throw error\r\n    }\r\n  }\r\n}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  mutations,\r\n  actions\r\n}\r\n"]}]}