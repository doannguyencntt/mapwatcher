{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\sellerDashboard\\DashboardIndex.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\sellerDashboard\\DashboardIndex.vue","mtime":1626264502287},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1626076746842},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _nav from '@/_nav';\nimport * as TYPE from '@/actionTypes.js';\nimport _ from 'lodash';\nimport { mapActions, mapGetters } from 'vuex';\nimport config from \"./sdk-configs/mainTabConfig\";\nimport brandLogo from '@/assets/img/brand-demo.jpg';\nexport default {\n  name: 'MWSellerDashboardIndex',\n  components: {},\n  data: function data() {\n    return {\n      share_token: null,\n      sdkConfigInitialized: false,\n      nav: _nav,\n      isLoading: true\n    };\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    mainConfig: \"mw/dashboard/\".concat(TYPE.GET_DATA_CONFIG_VIOLATOR),\n    remoteFetchSetting: \"mw/settings/\".concat(TYPE.FETCH_SETTING),\n    fetchCompliedActiveRogue: \"mw/sellers/\".concat(TYPE.FETCH_SI_DASHBOARD_COMPLIED_ACTIVE_ROGUE),\n    fetchCompletion: \"mw/sellers/\".concat(TYPE.FETCH_SI_DASHBOARD_COMPLETION),\n    fetchGmr: \"mw/sellers/\".concat(TYPE.FETCH_SI_DASHBOARD_GMR),\n    fetchArbitrage: \"mw/sellers/\".concat(TYPE.FETCH_SI_DASHBOARD_ARBITRAGE),\n    fetchTotalListing: \"mw/sellers/\".concat(TYPE.FETCH_SI_DASHBOARD_TOTAL_LISTING),\n    fetchSellerStatus: \"mw/sellers/\".concat(TYPE.FETCH_SI_DASHBOARD_SELLER_STATUS)\n  })), {}, {\n    keepShareTokenForQuery: function keepShareTokenForQuery(query) {\n      if (this.share_token) {\n        _.assign(query, {\n          share_token: this.share_token\n        });\n      }\n\n      return query;\n    },\n    initMainDataSource: function initMainDataSource() {\n      window.ms_dashboard_seller_main_config = config;\n    },\n    updateSIDashboardTotalListing: function () {\n      var _updateSIDashboardTotalListing = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.fetchTotalListing(this.keepShareTokenForQuery({}));\n\n              case 2:\n                window.ms_dashboard_seller_total_listing = _context.sent;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function updateSIDashboardTotalListing() {\n        return _updateSIDashboardTotalListing.apply(this, arguments);\n      }\n\n      return updateSIDashboardTotalListing;\n    }(),\n    updateSIDashboardCompliedActiveRogue: function () {\n      var _updateSIDashboardCompliedActiveRogue = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.fetchCompliedActiveRogue(this.keepShareTokenForQuery({}));\n\n              case 2:\n                window.ms_dashboard_seller_complied_active_rogue = _context2.sent;\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function updateSIDashboardCompliedActiveRogue() {\n        return _updateSIDashboardCompliedActiveRogue.apply(this, arguments);\n      }\n\n      return updateSIDashboardCompliedActiveRogue;\n    }(),\n    updateSIDashboardCompletion: function () {\n      var _updateSIDashboardCompletion = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.fetchCompletion(this.keepShareTokenForQuery({}));\n\n              case 2:\n                window.ms_dashboard_seller_completion = _context3.sent;\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function updateSIDashboardCompletion() {\n        return _updateSIDashboardCompletion.apply(this, arguments);\n      }\n\n      return updateSIDashboardCompletion;\n    }(),\n    updateSIDashboardGmr: function () {\n      var _updateSIDashboardGmr = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.fetchGmr(this.keepShareTokenForQuery({}));\n\n              case 2:\n                window.ms_dashboard_seller_gmr = _context4.sent;\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function updateSIDashboardGmr() {\n        return _updateSIDashboardGmr.apply(this, arguments);\n      }\n\n      return updateSIDashboardGmr;\n    }(),\n    updateSIDashboardArbitrage: function () {\n      var _updateSIDashboardArbitrage = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.fetchArbitrage(this.keepShareTokenForQuery({}));\n\n              case 2:\n                window.ms_dashboard_seller_arbitrage = _context5.sent;\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function updateSIDashboardArbitrage() {\n        return _updateSIDashboardArbitrage.apply(this, arguments);\n      }\n\n      return updateSIDashboardArbitrage;\n    }(),\n    updateSIDashboardSellerStatus: function () {\n      var _updateSIDashboardSellerStatus = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.fetchSellerStatus(this.keepShareTokenForQuery({}));\n\n              case 2:\n                window.ms_dashboard_seller_status = _context6.sent;\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function updateSIDashboardSellerStatus() {\n        return _updateSIDashboardSellerStatus.apply(this, arguments);\n      }\n\n      return updateSIDashboardSellerStatus;\n    }(),\n    updateDataSrc: function () {\n      var _updateDataSrc = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n        var _this = this;\n\n        var apiList;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                apiList = this.prepareApisForData();\n                _context7.next = 3;\n                return Promise.all(apiList).then(function () {\n                  // TODO: SDK support API refresh data source\n                  _this.$nextTick(function () {\n                    _this.sdkConfigInitialized = true;\n                  });\n                });\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function updateDataSrc() {\n        return _updateDataSrc.apply(this, arguments);\n      }\n\n      return updateDataSrc;\n    }(),\n    prepareApisForData: function prepareApisForData() {\n      return [this.updateSIDashboardTotalListing(), this.updateSIDashboardCompliedActiveRogue(), this.updateSIDashboardCompletion(), this.updateSIDashboardGmr(), this.updateSIDashboardArbitrage(), this.updateSIDashboardSellerStatus()];\n    },\n    fetchSettings: function () {\n      var _fetchSettings = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n        var result;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n                _context8.next = 3;\n                return this.remoteFetchSetting(this.keepShareTokenForQuery({}));\n\n              case 3:\n                result = _context8.sent;\n                return _context8.abrupt(\"return\", result);\n\n              case 7:\n                _context8.prev = 7;\n                _context8.t0 = _context8[\"catch\"](0);\n                console.log(_context8.t0.data.message);\n                return _context8.abrupt(\"return\", false);\n\n              case 11:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[0, 7]]);\n      }));\n\n      function fetchSettings() {\n        return _fetchSettings.apply(this, arguments);\n      }\n\n      return fetchSettings;\n    }(),\n    updateBrandLogo: function updateBrandLogo(link) {\n      if (_.isEmpty(link)) {\n        link = brandLogo;\n      }\n\n      window.ms_dashboard_seller_main_config.widgetLayout.widgets[0].config.elements[0].config.content = \"<img src=\\\"\".concat(link, \"\\\">\");\n    }\n  }),\n  computed: _objectSpread(_objectSpread({}, mapGetters({})), {}, {\n    sharableRoute: function sharableRoute() {\n      var routeRegrex = /\\/share\\//;\n      return routeRegrex.test(this.$route.path) ? 'Share' : '';\n    }\n  }),\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n      var result;\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              this.share_token = this.$route.query.share_token;\n              _context9.next = 3;\n              return this.fetchSettings();\n\n            case 3:\n              result = _context9.sent;\n              this.initMainDataSource();\n              this.updateBrandLogo(result.default_brand_logo);\n              _context9.next = 8;\n              return this.updateDataSrc();\n\n            case 8:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }()\n};",null]}