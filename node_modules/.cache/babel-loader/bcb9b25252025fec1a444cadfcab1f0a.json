{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\reports\\Edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\reports\\Edit.vue","mtime":1637656130450},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _toConsumableArray from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _defineProperty from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ClipboardUtil } from 'plat-sdk/dist/clipboard';\nimport _ from 'lodash';\nimport { mapActions, mapGetters, mapMutations } from 'vuex';\nimport * as TYPE from '@/actionTypes.js';\nimport { required } from 'vuelidate/lib/validators';\nimport vToasted from '@/shared/notification';\nimport reportLogo from '@/assets/img/report-demo.jpg';\nimport VueTagsInput from '@johmun/vue-tags-input';\nimport _nav from '@/_nav';\nimport { MarketPlacesResult } from '@/constants/Report';\nimport MWReportMarketplacePicker from \"./ReportMarketplacePicker\";\nimport { FormType } from '@/constants/Form.js';\nexport default {\n  name: 'MWEditReports',\n  data: function data() {\n    return {\n      reloadTime: 0,\n      MarketPlacesResult: MarketPlacesResult,\n      reportLogo: reportLogo,\n      priority_options: [{\n        value: 10,\n        text: 'High'\n      }, {\n        value: 5,\n        text: 'Normal'\n      }],\n      inutTags: {\n        tag: '',\n        tags: [],\n        textarea: ''\n      },\n      fbaInutTags: {\n        tag: '',\n        tags: [],\n        textarea: ''\n      },\n      mfnInutTags: {\n        tag: '',\n        tags: [],\n        textarea: ''\n      },\n      nav: _nav,\n      dialog: {\n        remove: false,\n        run: false,\n        cancel: false\n      },\n      check: true\n    };\n  },\n  mixins: [vToasted],\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    dataSet: \"mw/reports/\".concat(TYPE.GET_ONE_REPORT),\n    fetchListReports: \"mw/reports/\".concat(TYPE.GET_LIST_REPORTS),\n    orgIs: \"mw/\".concat(TYPE.GET_ORG_IS)\n  })), {}, {\n    isCopySupport: function isCopySupport() {\n      return ClipboardUtil.isCopySupported();\n    },\n    isValidMarketplaces: function isValidMarketplaces() {\n      return this.dataSet.marketplaces ? Object.values(this.dataSet.marketplaces).includes(true) : false;\n    },\n    isShowPriority: function isShowPriority() {\n      return this.orgIs;\n    }\n  }),\n  methods: _objectSpread(_objectSpread(_objectSpread({}, mapActions({\n    remoteEditReport: \"mw/reports/\".concat(TYPE.REMOTE_EDIT_REPORT),\n    remoteImagesFileUpload: \"mw/images/\".concat(TYPE.REMOTE_UPLOAD_IMAGES),\n    fetchReport: \"mw/reports/\".concat(TYPE.FETCH_ONE_REPORT),\n    fetchReports: \"mw/reports/\".concat(TYPE.FETCH_LIST_REPORTS)\n  })), mapMutations({\n    setReport: \"mw/reports/\".concat(TYPE.SET_ONE_REPORT),\n    dataReset: \"mw/reports/\".concat(TYPE.SET_ONE_REPORT)\n  })), {}, {\n    handleMarketplaceChange: function handleMarketplaceChange(data) {\n      var parsedData = data.parsedData,\n          marketplaces = data.marketplaces;\n      this.resetMarketplaceInfo();\n\n      _.assignIn(this.dataSet, parsedData);\n\n      this.dataSet.marketplaces = marketplaces;\n    },\n    handleEditReport: function () {\n      var _handleEditReport = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var id;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.$v.$touch();\n\n                if (!this.$v.$invalid) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                this.dataSet.list_authorized_seller_names = this.inutTags.tags.map(function (e) {\n                  return e.text;\n                });\n                this.dataSet.fba_authorized_seller_names = this.fbaInutTags.tags.map(function (e) {\n                  return e.text;\n                });\n                this.dataSet.mfn_authorized_seller_names = this.mfnInutTags.tags.map(function (e) {\n                  return e.text;\n                });\n\n                if (!this.orgIs) {\n                  this.dataSet.priority = 5;\n                }\n\n                _context.prev = 7;\n                id = this.$route.params.id;\n                _context.next = 11;\n                return this.remoteEditReport({\n                  params: this.dataSet,\n                  id: id\n                });\n\n              case 11:\n                this.$router.push({\n                  name: 'MWListReports',\n                  params: {\n                    client_id: this.nav.clientId\n                  }\n                });\n                this.vToasted('success', \"Report \".concat(this.dataSet.name_in_dashboard, \" has been updated successfully.\"));\n                _context.next = 18;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](7);\n                this.vToasted('error', _context.t0.data.message);\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[7, 15]]);\n      }));\n\n      function handleEditReport() {\n        return _handleEditReport.apply(this, arguments);\n      }\n\n      return handleEditReport;\n    }(),\n    handleShowModal: function handleShowModal() {\n      if (this.dataSet.logo) {\n        this.dialog.run = true;\n      }\n    },\n    handleRemoveLogo: function handleRemoveLogo() {\n      this.dataSet.logo = '';\n    },\n    handleImagesFileUpload: function () {\n      var _handleImagesFileUpload = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(e) {\n        var formData, res, dataSet, message;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                formData = new FormData();\n                formData.append('file', e.target.files[0]);\n                formData.append('type', 'brand_logos');\n                _context2.prev = 3;\n                _context2.next = 6;\n                return this.remoteImagesFileUpload(formData);\n\n              case 6:\n                res = _context2.sent;\n                dataSet = _objectSpread(_objectSpread({}, this.dataSet), {}, {\n                  logo: res.url\n                });\n                this.$store.commit(\"mw/reports/\".concat(TYPE.SET_ONE_REPORT), dataSet);\n                _context2.next = 15;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](3);\n                message = _.get(_context2.t0, 'response.data.message', null);\n\n                if (message) {\n                  this.vToasted('error', message);\n                } else {\n                  console.log(_context2.t0);\n                }\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[3, 11]]);\n      }));\n\n      function handleImagesFileUpload(_x) {\n        return _handleImagesFileUpload.apply(this, arguments);\n      }\n\n      return handleImagesFileUpload;\n    }(),\n    handleEnterTextarea: function handleEnterTextarea() {\n      var _this$inutTags = this.inutTags,\n          tags = _this$inutTags.tags,\n          textarea = _this$inutTags.textarea;\n\n      var cutArray = _toConsumableArray(\"\".concat(textarea).split('\\n'));\n\n      this.inutTags.tags = [].concat(_toConsumableArray(tags), _toConsumableArray(cutArray.reduce(function (acc, cur) {\n        if (cur && !_.find(acc, function (o) {\n          return o.text === cur;\n        }) && !_.find(tags, function (o) {\n          return o.text === cur;\n        })) {\n          acc = [].concat(_toConsumableArray(acc), [{\n            text: cur.trim()\n          }]);\n        }\n\n        return acc;\n      }, [])));\n      this.inutTags.textarea = '';\n    },\n    handleMfnAuthorizedSellers: function handleMfnAuthorizedSellers() {\n      var _this$mfnInutTags = this.mfnInutTags,\n          tags = _this$mfnInutTags.tags,\n          textarea = _this$mfnInutTags.textarea;\n\n      var cutArray = _toConsumableArray(\"\".concat(textarea).split('\\n'));\n\n      this.mfnInutTags.tags = [].concat(_toConsumableArray(tags), _toConsumableArray(cutArray.reduce(function (acc, cur) {\n        if (cur && !_.find(acc, function (o) {\n          return o.text === cur;\n        }) && !_.find(tags, function (o) {\n          return o.text === cur;\n        })) {\n          acc = [].concat(_toConsumableArray(acc), [{\n            text: cur.trim()\n          }]);\n        }\n\n        return acc;\n      }, [])));\n      this.mfnInutTags.textarea = '';\n    },\n    handleFbaAuthorizedSellers: function handleFbaAuthorizedSellers() {\n      var _this$fbaInutTags = this.fbaInutTags,\n          tags = _this$fbaInutTags.tags,\n          textarea = _this$fbaInutTags.textarea;\n\n      var cutArray = _toConsumableArray(\"\".concat(textarea).split('\\n'));\n\n      this.fbaInutTags.tags = [].concat(_toConsumableArray(tags), _toConsumableArray(cutArray.reduce(function (acc, cur) {\n        if (cur && !_.find(acc, function (o) {\n          return o.text === cur;\n        }) && !_.find(tags, function (o) {\n          return o.text === cur;\n        })) {\n          acc = [].concat(_toConsumableArray(acc), [{\n            text: cur.trim()\n          }]);\n        }\n\n        return acc;\n      }, [])));\n      this.fbaInutTags.textarea = '';\n    },\n    handleFetchAndReloadData: function () {\n      var _handleFetchAndReloadData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var id, data;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                id = this.$route.params.id;\n                data = this.fetchListReports.items.filter(function (report) {\n                  return report._id === id;\n                })[0];\n\n                if (!_.isEmpty(data)) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                _context3.next = 6;\n                return this.fetchReport(id);\n\n              case 6:\n                this.reloadTime++;\n                _context3.next = 10;\n                break;\n\n              case 9:\n                this.$store.commit(\"mw/reports/\".concat(TYPE.SET_ONE_REPORT), data);\n\n              case 10:\n                this.inutTags.tags = this.dataSet.list_authorized_seller_names.map(function (e) {\n                  return {\n                    text: e,\n                    tiClasses: ['ti-valid']\n                  };\n                });\n\n                if (this.dataSet.fba_authorized_seller_names) {\n                  this.fbaInutTags.tags = this.dataSet.fba_authorized_seller_names.map(function (e) {\n                    return {\n                      text: e,\n                      tiClasses: ['ti-valid']\n                    };\n                  });\n                }\n\n                if (this.dataSet.mfn_authorized_seller_names) {\n                  this.mfnInutTags.tags = this.dataSet.mfn_authorized_seller_names.map(function (e) {\n                    return {\n                      text: e,\n                      tiClasses: ['ti-valid']\n                    };\n                  });\n                }\n\n                if (!this.dataSet.priority) {\n                  this.dataSet.priority = 5;\n                }\n\n                _context3.next = 19;\n                break;\n\n              case 16:\n                _context3.prev = 16;\n                _context3.t0 = _context3[\"catch\"](0);\n                this.vToasted('error', _context3.t0.message);\n\n              case 19:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 16]]);\n      }));\n\n      function handleFetchAndReloadData() {\n        return _handleFetchAndReloadData.apply(this, arguments);\n      }\n\n      return handleFetchAndReloadData;\n    }(),\n    backToListReport: function backToListReport() {\n      this.dataReset({});\n      this.$router.push({\n        name: 'MWListReports',\n        params: {\n          client_id: this.nav.clientId\n        }\n      });\n    },\n    getMarketplaceField: function getMarketplaceField(marketplace) {\n      return \"marketplace_\".concat(marketplace.replace(/[.]/g, '_'));\n    },\n    resetMarketplaceInfo: function resetMarketplaceInfo() {\n      var _this = this;\n\n      var marketplaces = _.values(MarketPlacesResult);\n\n      _.forEach(marketplaces, function (marketplace) {\n        var field = _this.getMarketplaceField(marketplace);\n\n        _this.dataSet[field] = null;\n      });\n    },\n    handleCopyRecord: function handleCopyRecord() {\n      ClipboardUtil.copy(_.assignIn(_.cloneDeep(this.dataSet), {\n        inutTags: this.inutTags\n      }, {\n        fbaInutTags: this.fbaInutTags\n      }, {\n        mfnInutTags: this.mfnInutTags\n      }, {\n        isEdit: true\n      }), FormType.REPORTS);\n      this.checkKey();\n      this.vToasted('success', 'Copied to clipboard.');\n    },\n    handlePasteRecord: function () {\n      var _handlePasteRecord = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var pasteData, defaultKey;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return ClipboardUtil.paste(_.cloneDeep(this.dataSet), FormType.REPORTS);\n\n              case 3:\n                pasteData = _context4.sent;\n\n                if (pasteData) {\n                  _context4.next = 7;\n                  break;\n                }\n\n                this.vToasted('error', 'You need to enable copy to clipboard');\n                return _context4.abrupt(\"return\");\n\n              case 7:\n                // validate if copy from another report EDIT\n                defaultKey = {\n                  client_id: this.dataSet.client_id,\n                  created: this.dataSet.created,\n                  deleted: this.dataSet.deleted,\n                  id: this.dataSet.id\n                }; // set tags\n\n                this.inutTags = pasteData.inutTags;\n                this.fbaInutTags = pasteData.fbaInutTags;\n                this.mfnInutTags = pasteData.mfnInutTags;\n\n                if (pasteData.isEdit) {\n                  // store default auto generate field in default key\n                  this.setReport(_.omit(_.defaults(defaultKey, pasteData), ['inutTags', 'fbaInutTags', 'mfnInutTags', 'isEdit']));\n                }\n\n                this.setReport(_.omit(_objectSpread(_objectSpread({}, defaultKey), pasteData), ['inutTags', 'fbaInutTags', 'mfnInutTags', 'isEdit']));\n                this.vToasted('success', 'Paste successfully');\n                _context4.next = 19;\n                break;\n\n              case 16:\n                _context4.prev = 16;\n                _context4.t0 = _context4[\"catch\"](0);\n                this.vToasted('error', 'You copy is not valid');\n\n              case 19:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 16]]);\n      }));\n\n      function handlePasteRecord() {\n        return _handlePasteRecord.apply(this, arguments);\n      }\n\n      return handlePasteRecord;\n    }(),\n    checkKey: function () {\n      var _checkKey = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        var result;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return ClipboardUtil.check(FormType.REPORTS);\n\n              case 2:\n                result = _context5.sent;\n                this.check = !result;\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function checkKey() {\n        return _checkKey.apply(this, arguments);\n      }\n\n      return checkKey;\n    }()\n  }),\n  created: function created() {\n    this.handleFetchAndReloadData();\n    this.checkKey();\n    window.addEventListener('focus', this.checkKey);\n  },\n  destroyed: function destroyed() {\n    window.removeEventListener('focus', this.checkKey);\n  },\n  validations: {\n    dataSet: {\n      // logo: {\n      //   required,\n      //   url\n      // },\n      marketplaces: {\n        valid: function valid() {\n          return this.isValidMarketplaces;\n        }\n      },\n      name_in_dashboard: {\n        required: required\n      },\n      order: {\n        required: required\n      }\n    }\n  },\n  components: {\n    VueTagsInput: VueTagsInput,\n    MWReportMarketplacePicker: MWReportMarketplacePicker\n  }\n};",{"version":3,"sources":["Edit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"animated fadeIn\" v-if=\"dataSet\">\r\n    <b-card>\r\n      <!-- header -->\r\n      <template v-slot:header>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n          <div class=\"d-flex align-items center\">\r\n            <p class=\"mx-0 my-0\">\r\n              <strong>Edit \"{{ dataSet.name_in_dashboard }}\" Report</strong>\r\n            </p>\r\n            <div class=\"card-header-actions ml-2\">\r\n              <b-button\r\n                size=\"sm\"\r\n                class=\"mr-1\"\r\n                variant=\"success\"\r\n                :disabled=\"check\"\r\n                @click=\"handlePasteRecord\"\r\n              >\r\n                Paste\r\n              </b-button>\r\n              <b-button\r\n                size=\"sm\"\r\n                class=\"ml-2\"\r\n                :disabled=\"!isCopySupport\"\r\n                variant=\"secondary\"\r\n                @click=\"handleCopyRecord\"\r\n              >\r\n                Copy\r\n              </b-button>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-header-actions\">\r\n            <div class=\"btn-close\">\r\n              <b-button\r\n                variant=\"secondary\"\r\n                class=\"btn btn-block\"\r\n                size=\"sm\"\r\n                @click=\"backToListReport()\"\r\n              >\r\n                <i class=\"icon-arrow-left-circle icons\"></i> Back\r\n              </b-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </template>\r\n      <!-- body -->\r\n      <b-form>\r\n        <div class=\"header-container\">\r\n          <b-row>\r\n            <b-col class=\"p-0\">\r\n              <b-col>\r\n                <label>\r\n                  <b>Name In Dashboard</b>\r\n                </label>\r\n                <b-form-input\r\n                  type=\"text\"\r\n                  @input=\"$v.dataSet.name_in_dashboard.$touch()\"\r\n                  :class=\"{\r\n                    'is-invalid':\r\n                      $v.dataSet.name_in_dashboard.$dirty &&\r\n                      $v.dataSet.name_in_dashboard.$error\r\n                  }\"\r\n                  v-model.trim=\"dataSet.name_in_dashboard\"\r\n                ></b-form-input>\r\n                <div\r\n                  class=\"mw-error\"\r\n                  v-if=\"\r\n                    !$v.dataSet.name_in_dashboard.required &&\r\n                    $v.dataSet.name_in_dashboard.$dirty\r\n                  \"\r\n                >\r\n                  Name in Dashboard is required.\r\n                </div>\r\n              </b-col>\r\n              <b-col class=\"mt-2\">\r\n                <b-form-checkbox\r\n                  v-model=\"dataSet.true_map_report\"\r\n                  class=\"mb-2 basicText font-weight-bold\"\r\n                  switch\r\n                  >True MAP report</b-form-checkbox\r\n                >\r\n                <p>\r\n                  Check this if this list is provided with TRUE MAP REPORT\r\n                  purpose (while the others may be just for RW purpose only).\r\n                </p>\r\n              </b-col>\r\n            </b-col>\r\n            <b-col class=\"p=0\">\r\n              <b-row>\r\n                <b-col>\r\n                  <img\r\n                    :src=\"dataSet.logo ? dataSet.logo : reportLogo\"\r\n                    class=\"my-1 img-thumbnail mx-auto d-block\"\r\n                    alt=\"Left image\"\r\n                  />\r\n                </b-col>\r\n              </b-row>\r\n              <b-row>\r\n                <b-col>\r\n                  <b-form-file\r\n                    class=\"mt-2\"\r\n                    ref=\"file-input\"\r\n                    @change=\"handleImagesFileUpload($event)\"\r\n                  ></b-form-file>\r\n                  <b-button\r\n                    size=\"sm\"\r\n                    class=\"mt-2 float-right\"\r\n                    variant=\"warning\"\r\n                    v-if=\"dataSet.logo\"\r\n                    @click=\"handleShowModal()\"\r\n                    >Remove</b-button\r\n                  >\r\n                </b-col>\r\n              </b-row>\r\n            </b-col>\r\n            <b-col>\r\n              <b-row class=\"p-0\">\r\n                <b-col>\r\n                  <b-form-checkbox\r\n                    v-model=\"dataSet.active\"\r\n                    class=\"mb-2 basicText font-weight-bold\"\r\n                    switch\r\n                    >Active</b-form-checkbox\r\n                  >\r\n                </b-col>\r\n              </b-row>\r\n              <b-row v-if=\"isShowPriority\">\r\n                <b-col>\r\n                  <label class=\"component-label m-0 mr-1 my-auto\"\r\n                    ><strong>Priority</strong></label\r\n                  >\r\n                  <b-form-select\r\n                    class=\"custom-width\"\r\n                    v-model=\"dataSet.priority\"\r\n                    :options=\"priority_options\"\r\n                    >Priority</b-form-select\r\n                  >\r\n                </b-col>\r\n              </b-row>\r\n              <b-row>\r\n                <b-col class=\"mt-2\">\r\n                  <label class=\"component-label m-0 mr-1 my-auto\">\r\n                    <strong class=\"h-100\">Order</strong>\r\n                  </label>\r\n                  <b-form-input\r\n                    class=\"custom-width d-inline-block\"\r\n                    type=\"number\"\r\n                    @input=\"$v.dataSet.order.$touch()\"\r\n                    :class=\"{\r\n                      'is-invalid':\r\n                        $v.dataSet.order.$dirty && $v.dataSet.order.$error\r\n                    }\"\r\n                    v-model=\"dataSet.order\"\r\n                  ></b-form-input>\r\n                  <div\r\n                    class=\"mw-error\"\r\n                    v-if=\"!$v.dataSet.order.required && $v.dataSet.order.$dirty\"\r\n                  >\r\n                    Order is required.\r\n                  </div>\r\n                </b-col>\r\n              </b-row>\r\n            </b-col>\r\n          </b-row>\r\n        </div>\r\n      </b-form>\r\n      <label class=\"mt-4\"><strong>Marketplaces</strong></label>\r\n      <MWReportMarketplacePicker\r\n        class=\"mt-2\"\r\n        ref=\"marketplaceBuilder\"\r\n        :key=\"reloadTime\"\r\n        :reportDoc=\"dataSet\"\r\n        @marketplaceChange=\"handleMarketplaceChange($event)\"\r\n        :isValidMarketplace=\"$v.dataSet.marketplaces.valid || $v.dataSet.marketplaces.$dirty\"\r\n      ></MWReportMarketplacePicker>\r\n      <b-row>\r\n        <b-col>\r\n          <b-form-checkbox\r\n            v-model=\"dataSet.separate_mfn_fba_authorized_seller\"\r\n            class=\"mb-2 basicText font-weight-bold\"\r\n            switch\r\n            >Separate MFN and FBA Authorized Sellers</b-form-checkbox\r\n          >\r\n        </b-col>\r\n      </b-row>\r\n      <b-row v-show=\"dataSet.separate_mfn_fba_authorized_seller\">\r\n        <b-col>\r\n          <label for=\"#\">\r\n            <strong>FBA Authorized Sellers</strong>\r\n          </label>\r\n          <vue-tags-input\r\n            v-model=\"fbaInutTags.tag\"\r\n            :tags=\"fbaInutTags.tags\"\r\n            @tags-changed=\"(newTags) => (fbaInutTags.tags = newTags)\"\r\n            class=\"mw-vue-tags-custom input-keyword un-rounded-bottom-border\"\r\n          />\r\n          <b-form-textarea\r\n            id=\"textarea-1\"\r\n            v-model=\"fbaInutTags.textarea\"\r\n            placeholder=\"Enter names.\"\r\n            rows=\"3\"\r\n            max-rows=\"6\"\r\n            class=\"tag-input textarea\"\r\n            @keyup.enter.native=\"handleFbaAuthorizedSellers()\"\r\n          ></b-form-textarea>\r\n        </b-col>\r\n        <b-col>\r\n          <label for=\"#\">\r\n            <strong>MFN Authorized Sellers</strong>\r\n          </label>\r\n          <vue-tags-input\r\n            v-model=\"mfnInutTags.tag\"\r\n            :tags=\"mfnInutTags.tags\"\r\n            @tags-changed=\"(newTags) => (mfnInutTags.tags = newTags)\"\r\n            class=\"mw-vue-tags-custom input-keyword\"\r\n          />\r\n          <b-form-textarea\r\n            id=\"textarea-2\"\r\n            v-model=\"mfnInutTags.textarea\"\r\n            placeholder=\"Enter names.\"\r\n            rows=\"3\"\r\n            max-rows=\"6\"\r\n            class=\"tag-input textarea\"\r\n            @keyup.enter.native=\"handleMfnAuthorizedSellers()\"\r\n          ></b-form-textarea>\r\n        </b-col>\r\n      </b-row>\r\n      <b-row v-show=\"!dataSet.separate_mfn_fba_authorized_seller\">\r\n        <b-col>\r\n          <b-form-group>\r\n            <label for=\"#\">\r\n              <strong>Authorized Sellers</strong>\r\n            </label>\r\n            <vue-tags-input\r\n              v-model=\"inutTags.tag\"\r\n              :tags=\"inutTags.tags\"\r\n              @tags-changed=\"(newTags) => (inutTags.tags = newTags)\"\r\n              class=\"mw-vue-tags-custom input-keyword\"\r\n            />\r\n            <b-form-textarea\r\n              id=\"textarea-3\"\r\n              v-model=\"inutTags.textarea\"\r\n              placeholder=\"Enter names.\"\r\n              rows=\"3\"\r\n              max-rows=\"6\"\r\n              class=\"textarea-keyword textarea\"\r\n              @keyup.enter.native=\"handleEnterTextarea()\"\r\n            />\r\n          </b-form-group>\r\n        </b-col>\r\n      </b-row>\r\n      <b-row class=\"mt-2\">\r\n        <b-col\r\n          class=\"d-flex justify-content-between col-md-6 col-lg-6 col-sm-12\"\r\n        >\r\n          <div class=\"column-1\">\r\n            <b-form-checkbox\r\n              v-model=\"dataSet.ignore_screenshot\"\r\n              class=\"mb-2 basicText font-weight-bold\"\r\n              switch\r\n              >Ignore Screenshot</b-form-checkbox\r\n            >\r\n            <b-form-checkbox\r\n              v-model=\"dataSet.ignore_price_tracking\"\r\n              class=\"mb-2 basicText font-weight-bold\"\r\n              switch\r\n              >Ignore price tracking</b-form-checkbox\r\n            >\r\n            <b-form-checkbox\r\n              v-model=\"dataSet.watch_for_used_items\"\r\n              class=\"mb-2 basicText font-weight-bold\"\r\n              switch\r\n              >Watch for used items</b-form-checkbox\r\n            >\r\n          </div>\r\n          <div class=\"column-2\">\r\n            <b-form-checkbox\r\n              v-model=\"dataSet.show_upc_in_dashboard\"\r\n              class=\"mb-2 basicText font-weight-bold\"\r\n              switch\r\n              >Show UPC/EAN in dashboard</b-form-checkbox\r\n            >\r\n            <b-form-checkbox\r\n              v-model=\"dataSet.fulfillment\"\r\n              class=\"mb-2 basicText font-weight-bold\"\r\n              switch\r\n              >Fulfillment filter in dashboard</b-form-checkbox\r\n            >\r\n          </div>\r\n        </b-col>\r\n        <b-modal\r\n          title=\"Please confirm\"\r\n          centered\r\n          v-model=\"dialog.run\"\r\n          @ok=\"handleRemoveLogo()\"\r\n        >\r\n          Are you sure you want to remove the logo?\r\n          <template v-slot:modal-footer=\"{ ok, cancel }\">\r\n            <b-button size=\"md\" variant=\"warning\" @click=\"ok()\">\r\n              <i class=\"icon-check icons\"></i> Yes\r\n            </b-button>\r\n            <b-button size=\"md\" variant=\"secondary\" @click=\"cancel()\">\r\n              <i class=\"icon-close icons\"></i> No\r\n            </b-button>\r\n          </template>\r\n        </b-modal>\r\n      </b-row>\r\n      <!-- footer -->\r\n      <template v-slot:footer>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n          <div class=\"footer__btns\">\r\n            <b-button\r\n              class=\"mr-1\"\r\n              variant=\"primary\"\r\n              size=\"sm\"\r\n              @click=\"handleEditReport\"\r\n            >\r\n              <i class=\"fa fa-dot-circle-o\"></i> Update\r\n            </b-button>\r\n            <b-button size=\"sm\" class=\"ml-2\" @click=\"backToListReport()\">\r\n              <i class=\"icon-arrow-left-circle\"></i> Cancel\r\n            </b-button>\r\n          </div>\r\n        </div>\r\n      </template>\r\n    </b-card>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { ClipboardUtil } from 'plat-sdk/dist/clipboard'\r\n\r\nimport _ from 'lodash'\r\nimport { mapActions, mapGetters, mapMutations } from 'vuex'\r\nimport * as TYPE from '@/actionTypes.js'\r\nimport { required } from 'vuelidate/lib/validators'\r\nimport vToasted from '@/shared/notification'\r\nimport reportLogo from '@/assets/img/report-demo.jpg'\r\nimport VueTagsInput from '@johmun/vue-tags-input'\r\nimport _nav from '@/_nav'\r\nimport { MarketPlacesResult } from '@/constants/Report'\r\nimport MWReportMarketplacePicker from './ReportMarketplacePicker'\r\nimport { FormType } from '@/constants/Form.js'\r\n\r\nexport default {\r\n  name: 'MWEditReports',\r\n  data() {\r\n    return {\r\n      reloadTime: 0,\r\n      MarketPlacesResult,\r\n      reportLogo,\r\n      priority_options: [\r\n        { value: 10, text: 'High' },\r\n        { value: 5, text: 'Normal' }\r\n      ],\r\n      inutTags: {\r\n        tag: '',\r\n        tags: [],\r\n        textarea: ''\r\n      },\r\n      fbaInutTags: {\r\n        tag: '',\r\n        tags: [],\r\n        textarea: ''\r\n      },\r\n      mfnInutTags: {\r\n        tag: '',\r\n        tags: [],\r\n        textarea: ''\r\n      },\r\n      nav: _nav,\r\n      dialog: {\r\n        remove: false,\r\n        run: false,\r\n        cancel: false\r\n      },\r\n      check: true\r\n    }\r\n  },\r\n  mixins: [vToasted],\r\n  computed: {\r\n    ...mapGetters({\r\n      dataSet: `mw/reports/${TYPE.GET_ONE_REPORT}`,\r\n      fetchListReports: `mw/reports/${TYPE.GET_LIST_REPORTS}`,\r\n      orgIs: `mw/${TYPE.GET_ORG_IS}`\r\n    }),\r\n    isCopySupport() {\r\n      return ClipboardUtil.isCopySupported()\r\n    },\r\n    isValidMarketplaces() {\r\n      return this.dataSet.marketplaces ? Object.values(this.dataSet.marketplaces).includes(true) : false\r\n    },\r\n    isShowPriority() {\r\n      return this.orgIs\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      remoteEditReport: `mw/reports/${TYPE.REMOTE_EDIT_REPORT}`,\r\n      remoteImagesFileUpload: `mw/images/${TYPE.REMOTE_UPLOAD_IMAGES}`,\r\n      fetchReport: `mw/reports/${TYPE.FETCH_ONE_REPORT}`,\r\n      fetchReports: `mw/reports/${TYPE.FETCH_LIST_REPORTS}`\r\n    }),\r\n    ...mapMutations({\r\n      setReport: `mw/reports/${TYPE.SET_ONE_REPORT}`,\r\n      dataReset: `mw/reports/${TYPE.SET_ONE_REPORT}`\r\n    }),\r\n    handleMarketplaceChange(data) {\r\n      const { parsedData, marketplaces } = data\r\n      this.resetMarketplaceInfo()\r\n      _.assignIn(this.dataSet, parsedData)\r\n      this.dataSet.marketplaces = marketplaces\r\n    },\r\n    async handleEditReport() {\r\n      this.$v.$touch()\r\n      if (this.$v.$invalid) {\r\n        return\r\n      }\r\n      this.dataSet.list_authorized_seller_names = this.inutTags.tags.map(\r\n        (e) => e.text\r\n      )\r\n      this.dataSet.fba_authorized_seller_names = this.fbaInutTags.tags.map(\r\n        (e) => e.text\r\n      )\r\n      this.dataSet.mfn_authorized_seller_names = this.mfnInutTags.tags.map(\r\n        (e) => e.text\r\n      )\r\n      if (!this.orgIs) {\r\n        this.dataSet.priority = 5\r\n      }\r\n      try {\r\n        const { id } = this.$route.params\r\n        await this.remoteEditReport({ params: this.dataSet, id })\r\n        this.$router.push({\r\n          name: 'MWListReports',\r\n          params: { client_id: this.nav.clientId }\r\n        })\r\n        this.vToasted(\r\n          'success',\r\n          `Report ${this.dataSet.name_in_dashboard} has been updated successfully.`\r\n        )\r\n      } catch (error) {\r\n        this.vToasted('error', error.data.message)\r\n      }\r\n    },\r\n    handleShowModal() {\r\n      if (this.dataSet.logo) {\r\n        this.dialog.run = true\r\n      }\r\n    },\r\n    handleRemoveLogo() {\r\n      this.dataSet.logo = ''\r\n    },\r\n    async handleImagesFileUpload(e) {\r\n      let formData = new FormData()\r\n      formData.append('file', e.target.files[0])\r\n      formData.append('type', 'brand_logos')\r\n      try {\r\n        const res = await this.remoteImagesFileUpload(formData)\r\n        let dataSet = {\r\n          ...this.dataSet,\r\n          logo: res.url\r\n        }\r\n        this.$store.commit(`mw/reports/${TYPE.SET_ONE_REPORT}`, dataSet)\r\n      } catch (error) {\r\n        let message = _.get(error, 'response.data.message', null)\r\n        if (message) {\r\n          this.vToasted('error', message)\r\n        } else {\r\n          console.log(error)\r\n        }\r\n      }\r\n    },\r\n    handleEnterTextarea() {\r\n      const { tags, textarea } = this.inutTags\r\n      const cutArray = [...`${textarea}`.split('\\n')]\r\n      this.inutTags.tags = [\r\n        ...tags,\r\n        ...cutArray.reduce((acc, cur) => {\r\n          if (\r\n            cur &&\r\n            !_.find(acc, (o) => o.text === cur) &&\r\n            !_.find(tags, (o) => o.text === cur)\r\n          ) {\r\n            acc = [...acc, { text: cur.trim() }]\r\n          }\r\n          return acc\r\n        }, [])\r\n      ]\r\n      this.inutTags.textarea = ''\r\n    },\r\n    handleMfnAuthorizedSellers() {\r\n      const { tags, textarea } = this.mfnInutTags\r\n      const cutArray = [...`${textarea}`.split('\\n')]\r\n      this.mfnInutTags.tags = [\r\n        ...tags,\r\n        ...cutArray.reduce((acc, cur) => {\r\n          if (\r\n            cur &&\r\n            !_.find(acc, (o) => o.text === cur) &&\r\n            !_.find(tags, (o) => o.text === cur)\r\n          ) {\r\n            acc = [...acc, { text: cur.trim() }]\r\n          }\r\n          return acc\r\n        }, [])\r\n      ]\r\n      this.mfnInutTags.textarea = ''\r\n    },\r\n    handleFbaAuthorizedSellers() {\r\n      const { tags, textarea } = this.fbaInutTags\r\n      const cutArray = [...`${textarea}`.split('\\n')]\r\n      this.fbaInutTags.tags = [\r\n        ...tags,\r\n        ...cutArray.reduce((acc, cur) => {\r\n          if (\r\n            cur &&\r\n            !_.find(acc, (o) => o.text === cur) &&\r\n            !_.find(tags, (o) => o.text === cur)\r\n          ) {\r\n            acc = [...acc, { text: cur.trim() }]\r\n          }\r\n          return acc\r\n        }, [])\r\n      ]\r\n      this.fbaInutTags.textarea = ''\r\n    },\r\n    async handleFetchAndReloadData() {\r\n      try {\r\n        const {\r\n          params: { id }\r\n        } = this.$route\r\n        let data = this.fetchListReports.items.filter(\r\n          (report) => report._id === id\r\n        )[0]\r\n        if (_.isEmpty(data)) {\r\n          await this.fetchReport(id)\r\n          this.reloadTime++\r\n        } else {\r\n          this.$store.commit(`mw/reports/${TYPE.SET_ONE_REPORT}`, data)\r\n        }\r\n        this.inutTags.tags = this.dataSet.list_authorized_seller_names.map(\r\n          (e) => ({\r\n            text: e,\r\n            tiClasses: ['ti-valid']\r\n          })\r\n        )\r\n        if (this.dataSet.fba_authorized_seller_names) {\r\n          this.fbaInutTags.tags = this.dataSet.fba_authorized_seller_names.map(\r\n            (e) => ({\r\n              text: e,\r\n              tiClasses: ['ti-valid']\r\n            })\r\n          )\r\n        }\r\n        if (this.dataSet.mfn_authorized_seller_names) {\r\n          this.mfnInutTags.tags = this.dataSet.mfn_authorized_seller_names.map(\r\n            (e) => ({\r\n              text: e,\r\n              tiClasses: ['ti-valid']\r\n            })\r\n          )\r\n        }\r\n        if (!this.dataSet.priority) {\r\n          this.dataSet.priority = 5\r\n        }\r\n      } catch (error) {\r\n        this.vToasted('error', error.message)\r\n      }\r\n    },\r\n    backToListReport() {\r\n      this.dataReset({})\r\n      this.$router.push({\r\n        name: 'MWListReports',\r\n        params: { client_id: this.nav.clientId }\r\n      })\r\n    },\r\n    getMarketplaceField(marketplace) {\r\n      return `marketplace_${marketplace.replace(/[.]/g, '_')}`\r\n    },\r\n    resetMarketplaceInfo() {\r\n      const marketplaces = _.values(MarketPlacesResult)\r\n      _.forEach(marketplaces, (marketplace) => {\r\n        const field = this.getMarketplaceField(marketplace)\r\n        this.dataSet[field] = null\r\n      })\r\n    },\r\n    handleCopyRecord() {\r\n      ClipboardUtil.copy(\r\n        _.assignIn(\r\n          _.cloneDeep(this.dataSet),\r\n          { inutTags: this.inutTags },\r\n          { fbaInutTags: this.fbaInutTags },\r\n          { mfnInutTags: this.mfnInutTags },\r\n          { isEdit: true }\r\n        ),\r\n        FormType.REPORTS\r\n      )\r\n      this.checkKey()\r\n      this.vToasted('success', 'Copied to clipboard.')\r\n    },\r\n\r\n    async handlePasteRecord() {\r\n      try {\r\n        const pasteData = await ClipboardUtil.paste(\r\n          _.cloneDeep(this.dataSet),\r\n          FormType.REPORTS\r\n        )\r\n\r\n        if (!pasteData) {\r\n          this.vToasted('error', 'You need to enable copy to clipboard')\r\n          return\r\n        }\r\n\r\n        // validate if copy from another report EDIT\r\n        const defaultKey = {\r\n          client_id: this.dataSet.client_id,\r\n          created: this.dataSet.created,\r\n          deleted: this.dataSet.deleted,\r\n          id: this.dataSet.id\r\n        }\r\n\r\n        // set tags\r\n        this.inutTags = pasteData.inutTags\r\n        this.fbaInutTags = pasteData.fbaInutTags\r\n        this.mfnInutTags = pasteData.mfnInutTags\r\n\r\n        if (pasteData.isEdit) {\r\n          // store default auto generate field in default key\r\n          this.setReport(\r\n            _.omit(_.defaults(defaultKey, pasteData), [\r\n              'inutTags',\r\n              'fbaInutTags',\r\n              'mfnInutTags',\r\n              'isEdit'\r\n            ])\r\n          )\r\n        }\r\n\r\n        this.setReport(\r\n          _.omit({ ...defaultKey, ...pasteData }, [\r\n            'inutTags',\r\n            'fbaInutTags',\r\n            'mfnInutTags',\r\n            'isEdit'\r\n          ])\r\n        )\r\n        this.vToasted('success', 'Paste successfully')\r\n      } catch (e) {\r\n        this.vToasted('error', 'You copy is not valid')\r\n      }\r\n    },\r\n    async checkKey() {\r\n      const result = await ClipboardUtil.check(FormType.REPORTS)\r\n\r\n      this.check = !result\r\n    }\r\n  },\r\n  created() {\r\n    this.handleFetchAndReloadData()\r\n    this.checkKey()\r\n    window.addEventListener('focus', this.checkKey)\r\n  },\r\n\r\n  destroyed() {\r\n    window.removeEventListener('focus', this.checkKey)\r\n  },\r\n  validations: {\r\n    dataSet: {\r\n      // logo: {\r\n      //   required,\r\n      //   url\r\n      // },\r\n      marketplaces: {\r\n        valid: function() {\r\n          return this.isValidMarketplaces\r\n        }\r\n      },\r\n      name_in_dashboard: {\r\n        required\r\n      },\r\n      order: {\r\n        required\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n    VueTagsInput,\r\n    MWReportMarketplacePicker\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n#btnDate {\r\n  &::v-deep {\r\n    max-width: 40px;\r\n  }\r\n}\r\n.optimize-dp {\r\n  &::v-deep {\r\n    .input-group {\r\n      .form-control {\r\n        /*border-radius: 0px 0.25rem 0.25rem 0px;*/\r\n        border-left: none;\r\n      }\r\n    }\r\n  }\r\n}\r\n::v-deep .form-control:focus {\r\n  box-shadow: none;\r\n  border-color: #e4e7ea;\r\n}\r\n::v-deep .tag-input {\r\n  border-top: 0px;\r\n  border-top-left-radius: 0px;\r\n  border-top-right-radius: 0px;\r\n}\r\n::v-deep .textarea {\r\n  overflow-y: auto !important;\r\n}\r\n::v-deep .mw-vue-tags-custom .ti-input {\r\n  border-bottom-right-radius: 0px;\r\n  border-bottom-left-radius: 0px;\r\n  height: auto !important;\r\n}\r\n.component-label {\r\n  min-width: 55px;\r\n}\r\n.custom-datepicker-control {\r\n  &::v-deep {\r\n    button.btn {\r\n      width: 83px;\r\n    }\r\n    .vdp-datepicker {\r\n      width: calc(100% - 83px);\r\n      margin-right: 0 !important;\r\n    }\r\n  }\r\n}\r\n.custom-width {\r\n  width: 100%;\r\n  max-width: 70%;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/page/reports"}]}