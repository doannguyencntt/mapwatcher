{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\maps\\Edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\maps\\Edit.vue","mtime":1639556629177},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find\";\nimport _defineProperty from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ClipboardUtil } from 'plat-sdk/dist/clipboard';\nimport { mapActions, mapGetters, mapMutations } from 'vuex';\nimport * as TYPE from '@/actionTypes.js';\nimport { required } from 'vuelidate/lib/validators';\nimport vToasted from '@/shared/notification';\nimport { isAsin, isUpcOrEan } from '@/shared/utils';\nimport { MapType } from '@/constants/Map';\nimport _nav from '@/_nav';\nimport _ from 'lodash';\nimport { FormType } from '@/constants/Form.js';\nexport default {\n  name: 'MWEditMaps',\n  data: function data() {\n    return {\n      MapType: MapType,\n      nav: _nav,\n      mapTypeList: [{\n        value: MapType.MAP,\n        text: 'MAP'\n      }, {\n        value: MapType.NON_MAP,\n        text: 'NON MAP'\n      }],\n      check: true,\n      isLoading: false\n    };\n  },\n  mixins: [vToasted],\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    mapData: \"mw/maps/\".concat(TYPE.GET_ONE_MAP),\n    planConfig: \"mw/\".concat(TYPE.GET_PLAN_CONFIG),\n    listAmazonReports: \"mw/reports/\".concat(TYPE.GET_AMAZON_LIST_REPORTS)\n  })), {}, {\n    sharableRoute: function sharableRoute() {\n      var routeRegrex = /\\/share\\//;\n      return routeRegrex.test(this.$route.path) ? 'Share' : '';\n    },\n    isCopySupport: function isCopySupport() {\n      return ClipboardUtil.isCopySupported();\n    },\n    reportOptions: function reportOptions() {\n      return this.listAmazonReports.map(function (item) {\n        return {\n          value: item._id,\n          text: item.name_in_dashboard\n        };\n      });\n    },\n    marketplaceOptions: function marketplaceOptions() {\n      var selectedReports = this.mapData.report_id ? [_.find(this.listAmazonReports, {\n        _id: this.mapData.report_id\n      })] : this.listAmazonReports;\n      var supportedMarkets = [];\n\n      _.forEach(selectedReports, function (report) {\n        var markets = _.get(report, 'marketplaces');\n\n        _.forEach(_.keys(markets), function (marketKey) {\n          var marketplace = marketKey.replaceAll('_', '.');\n          markets[marketKey] && !supportedMarkets.includes(marketplace) && supportedMarkets.push(marketplace);\n        });\n      });\n\n      return _.isEmpty(this.planConfig) ? supportedMarkets.map(function (market) {\n        return {\n          value: market,\n          text: _.upperFirst(market)\n        };\n      }) : this.planConfig.allowed_amazon_marketplaces.filter(function (market) {\n        return supportedMarkets.includes(market);\n      }).map(function (market) {\n        return {\n          value: market,\n          text: _.upperFirst(market)\n        };\n      });\n    }\n  }),\n  methods: _objectSpread(_objectSpread(_objectSpread({}, mapMutations({\n    setMapData: \"mw/maps/\".concat(TYPE.SET_ONE_MAP)\n  })), mapActions({\n    fetchMap: \"mw/maps/\".concat(TYPE.FETCH_ONE_MAP),\n    updateMap: \"mw/maps/\".concat(TYPE.UPDATE_MAP),\n    fetchListReports: \"mw/reports/\".concat(TYPE.FETCH_IMPORT_REPORTS)\n  })), {}, {\n    backToListMaps: function backToListMaps() {\n      this.$router.push({\n        name: \"MW\".concat(this.sharableRoute, \"ListMaps\"),\n        params: {\n          client_id: this.nav.clientId\n        },\n        query: _objectSpread({}, this.$router.history.current.query)\n      });\n    },\n    getMapById: function () {\n      var _getMapById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var id;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                id = this.$route.params.id;\n                this.isLoading = true;\n                _context.prev = 2;\n                _context.next = 5;\n                return this.fetchMap(id);\n\n              case 5:\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](2);\n                this.vToasted('error', _context.t0.message);\n\n              case 10:\n                this.isLoading = false;\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 7]]);\n      }));\n\n      function getMapById() {\n        return _getMapById.apply(this, arguments);\n      }\n\n      return getMapById;\n    }(),\n    handleEditMap: function () {\n      var _handleEditMap = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var id;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.$v.$touch();\n\n                if (!this.$v.$error) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                console.log('error');\n                return _context2.abrupt(\"return\");\n\n              case 4:\n                this.isLoading = true;\n                _context2.prev = 5;\n                id = this.$route.params.id;\n                _context2.next = 9;\n                return this.updateMap({\n                  id: id,\n                  data: this.mapData\n                });\n\n              case 9:\n                this.vToasted('success', 'This MAP has been updated successfully.');\n                _context2.next = 16;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](5);\n                console.log(_context2.t0);\n                this.vToasted('error', _context2.t0.data.message);\n\n              case 16:\n                this.isLoading = false;\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 12]]);\n      }));\n\n      function handleEditMap() {\n        return _handleEditMap.apply(this, arguments);\n      }\n\n      return handleEditMap;\n    }(),\n    handleCopyRecord: function handleCopyRecord() {\n      ClipboardUtil.copy(_.cloneDeep(this.mapData), FormType.MAP);\n      this.vToasted('success', 'Copied to clipboard');\n      this.checkKey();\n    },\n    handlePasteRecord: function () {\n      var _handlePasteRecord = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var pasteData;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return ClipboardUtil.paste(_.cloneDeep(this.mapData), FormType.MAP);\n\n              case 3:\n                pasteData = _context3.sent;\n\n                if (pasteData) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                this.vToasted('error', 'You need to enable copy to clipboard');\n                return _context3.abrupt(\"return\");\n\n              case 7:\n                this.setMapData(pasteData);\n                this.vToasted('success', 'Paste successfully');\n                _context3.next = 14;\n                break;\n\n              case 11:\n                _context3.prev = 11;\n                _context3.t0 = _context3[\"catch\"](0);\n                this.vToasted('error', 'Your copy is not valid');\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 11]]);\n      }));\n\n      function handlePasteRecord() {\n        return _handlePasteRecord.apply(this, arguments);\n      }\n\n      return handlePasteRecord;\n    }(),\n    checkKey: function () {\n      var _checkKey = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var result;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return ClipboardUtil.check(FormType.MAP);\n\n              case 2:\n                result = _context4.sent;\n                this.check = !result;\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function checkKey() {\n        return _checkKey.apply(this, arguments);\n      }\n\n      return checkKey;\n    }()\n  }),\n  created: function created() {\n    this.getMapById();\n    this.checkKey();\n    window.addEventListener('focus', this.checkKey);\n    this.fetchListReports();\n  },\n  destroyed: function destroyed() {\n    window.removeEventListener('focus', this.checkKey);\n  },\n  validations: {\n    mapData: {\n      upc: {\n        isUpcOrEan: isUpcOrEan\n      },\n      isValidAsin: function isValidAsin(value) {\n        return this.mapData.type === MapType.MAP && isAsin(this.mapData.asin) || this.mapData.type === MapType.NON_MAP && !_.isEmpty(this.mapData.asin) && isAsin(this.mapData.asin) || _.isEmpty(this.mapData.asin);\n      },\n      sku: {\n        required: required\n      },\n      asin: {\n        isRequiredAsin: function isRequiredAsin(value) {\n          if (_.isEmpty(value) && this.mapData.type === MapType.MAP) {\n            return false;\n          }\n\n          return true;\n        }\n      },\n      isValidPrice: function isValidPrice(value) {\n        var _this$mapData = this.mapData,\n            type = _this$mapData.type,\n            price = _this$mapData.price;\n\n        if (type === MapType.NON_MAP) {\n          return true;\n        }\n\n        return type === MapType.MAP && price;\n      }\n    }\n  }\n};",{"version":3,"sources":["Edit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"animated fadeIn\">\r\n    <b-row>\r\n      <b-col md=\"6\" lg=\"6\" sm=\"12\">\r\n        <b-card footer-tag=\"footer\">\r\n          <template v-slot:header>\r\n            <div class=\"d-flex justify-content-between align-items-center\">\r\n              <div class=\"d-flex align-items-center\">\r\n                <p class=\"mx-0 my-0\"><strong>EDIT MAP</strong></p>\r\n                <div class=\"card-header-actions ml-2\">\r\n                  <b-button\r\n                    size=\"sm\"\r\n                    class=\"mr-1\"\r\n                    variant=\"success\"\r\n                    :disabled=\"check\"\r\n                    @click=\"handlePasteRecord\"\r\n                  >\r\n                    Paste\r\n                  </b-button>\r\n                  <b-button\r\n                    size=\"sm\"\r\n                    class=\"ml-2\"\r\n                    variant=\"secondary\"\r\n                    :disabled=\"!isCopySupport\"\r\n                    @click=\"handleCopyRecord\"\r\n                  >\r\n                    Copy\r\n                  </b-button>\r\n                </div>\r\n              </div>\r\n              <div class=\"card-header-actions\">\r\n                <div class=\"btn-close\">\r\n                  <b-button\r\n                    variant=\"secondary\"\r\n                    class=\"btn btn-block\"\r\n                    size=\"sm\"\r\n                    @click=\"backToListMaps()\"\r\n                  >\r\n                    <i class=\"icon-arrow-left-circle icons\"></i> Back\r\n                  </b-button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </template>\r\n          <b-form>\r\n            <b-form-group>\r\n              <label>\r\n                <b>Report</b>\r\n              </label>\r\n              <b-form-select\r\n                v-model=\"mapData.report_id\"\r\n                :options=\"reportOptions\"\r\n              >\r\n                <template v-slot:first>\r\n                  <option :value=\"null\" disabled>All Reports</option>\r\n                </template>\r\n              </b-form-select>\r\n            </b-form-group>\r\n            <b-form-group>\r\n              <label>\r\n                <b>Marketplace</b>\r\n              </label>\r\n              <b-form-select\r\n                v-model=\"mapData.marketplace\"\r\n                :options=\"marketplaceOptions\"\r\n              >\r\n                <template v-slot:first>\r\n                  <option :value=\"null\" disabled>All Marketplaces</option>\r\n                </template>\r\n              </b-form-select>\r\n            </b-form-group>\r\n            <b-form-group>\r\n              <label>\r\n                <b>Brand Name</b>\r\n              </label>\r\n              <b-form-input\r\n                type=\"text\"\r\n                v-model.trim=\"mapData.brand_name\"\r\n              />\r\n            </b-form-group>\r\n            <b-form-group>\r\n              <label>\r\n                <b>SKU</b>\r\n              </label>\r\n              <b-form-input\r\n                type=\"text\"\r\n                @input=\"$v.mapData.sku.$touch()\"\r\n                :class=\"{\r\n                  'is-invalid': $v.mapData.sku.$dirty && $v.mapData.sku.$error\r\n                }\"\r\n                v-model.trim=\"mapData.sku\"\r\n              ></b-form-input>\r\n              <div\r\n                class=\"mw-error invalid-feedback\"\r\n                v-if=\"!$v.mapData.sku.required && $v.mapData.sku.$dirty\"\r\n              >\r\n                SKU is required.\r\n              </div>\r\n            </b-form-group>\r\n            <b-form-group>\r\n              <label>\r\n                <b>ASIN</b>\r\n              </label>\r\n              <b-form-input\r\n                type=\"text\"\r\n                :class=\"{ 'is-invalid': !$v.mapData.isValidAsin || !$v.mapData.asin.isRequiredAsin}\"\r\n                v-model.trim=\"mapData.asin\"\r\n              ></b-form-input>\r\n              <div\r\n                class=\"mw-error invalid-feedback\"\r\n                v-if=\"!$v.mapData.isValidAsin\"\r\n              >\r\n                ASIN is invalid.\r\n              </div>\r\n              <div\r\n                class=\"mw-error invalid-feedback\"\r\n                v-if=\"!$v.mapData.asin.isRequiredAsin\"\r\n              >\r\n                Asin is required.\r\n              </div>\r\n            </b-form-group>\r\n            <b-form-group>\r\n              <label>\r\n                <b>UPC/EAN</b>\r\n              </label>\r\n              <b-form-input\r\n                type=\"text\"\r\n                @input=\"$v.mapData.upc.$touch()\"\r\n                :class=\"{\r\n                  'is-invalid':\r\n                    $v.mapData.upc.$dirty && !$v.mapData.upc.isUpcOrEan\r\n                }\"\r\n                v-model.trim=\"mapData.upc\"\r\n              ></b-form-input>\r\n              <div\r\n                class=\"mw-error invalid-feedback\"\r\n                v-if=\"!$v.mapData.upc.isUpcOrEan && $v.mapData.upc.$dirty\"\r\n              >\r\n                UPC/EAN is invalid.\r\n              </div>\r\n            </b-form-group>\r\n            <b-form-group>\r\n              <label>\r\n                <b>Price</b>\r\n              </label>\r\n              <b-form-input\r\n                type=\"number\"\r\n                @input=\"$v.mapData.price.$touch()\"\r\n                :class=\"{ 'is-invalid': !$v.mapData.isValidPrice }\"\r\n                v-model.trim=\"mapData.price\"\r\n              ></b-form-input>\r\n              <div\r\n                class=\"mw-error invalid-feedback\"\r\n                v-if=\"!$v.mapData.isValidPrice\"\r\n              >\r\n                Price is required.\r\n              </div>\r\n            </b-form-group>\r\n            <b-form-group>\r\n              <label>\r\n                <b>Type</b>\r\n              </label>\r\n              <b-form-select v-model=\"mapData.type\" :options=\"mapTypeList\">\r\n              </b-form-select>\r\n            </b-form-group>\r\n          </b-form>\r\n          <template v-slot:footer>\r\n            <div class=\"d-flex justify-content-between\">\r\n              <div class=\"footer__btns\">\r\n                <b-button\r\n                  class=\"mr-1\"\r\n                  variant=\"primary\"\r\n                  size=\"sm\"\r\n                  @click=\"handleEditMap\"\r\n                  :disabled=\"isLoading\"\r\n                >\r\n                  <i class=\"fa fa-dot-circle-o\"></i> Update\r\n                </b-button>\r\n                <b-button size=\"sm\" class=\"ml-2\" @click=\"backToListMaps()\">\r\n                  <i class=\"icon-arrow-left-circle\"></i> Cancel\r\n                </b-button>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </b-card>\r\n      </b-col>\r\n    </b-row>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { ClipboardUtil } from 'plat-sdk/dist/clipboard'\r\nimport { mapActions, mapGetters, mapMutations } from 'vuex'\r\nimport * as TYPE from '@/actionTypes.js'\r\nimport { required } from 'vuelidate/lib/validators'\r\nimport vToasted from '@/shared/notification'\r\nimport { isAsin, isUpcOrEan } from '@/shared/utils'\r\nimport { MapType } from '@/constants/Map'\r\nimport _nav from '@/_nav'\r\nimport _ from 'lodash'\r\nimport { FormType } from '@/constants/Form.js'\r\n\r\nexport default {\r\n  name: 'MWEditMaps',\r\n  data() {\r\n    return {\r\n      MapType,\r\n      nav: _nav,\r\n      mapTypeList: [\r\n        { value: MapType.MAP, text: 'MAP' },\r\n        { value: MapType.NON_MAP, text: 'NON MAP' }\r\n      ],\r\n      check: true,\r\n      isLoading: false\r\n    }\r\n  },\r\n  mixins: [vToasted],\r\n  computed: {\r\n    ...mapGetters({\r\n      mapData: `mw/maps/${TYPE.GET_ONE_MAP}`,\r\n      planConfig: `mw/${TYPE.GET_PLAN_CONFIG}`,\r\n      listAmazonReports: `mw/reports/${TYPE.GET_AMAZON_LIST_REPORTS}`\r\n    }),\r\n    sharableRoute() {\r\n      const routeRegrex = /\\/share\\//\r\n      return routeRegrex.test(this.$route.path) ? 'Share' : ''\r\n    },\r\n    isCopySupport() {\r\n      return ClipboardUtil.isCopySupported()\r\n    },\r\n    reportOptions() {\r\n      return this.listAmazonReports.map((item) => ({\r\n        value: item._id,\r\n        text: item.name_in_dashboard\r\n      }))\r\n    },\r\n    marketplaceOptions() {\r\n      const selectedReports = this.mapData.report_id\r\n        ? [_.find(this.listAmazonReports, { _id: this.mapData.report_id })]\r\n        : this.listAmazonReports\r\n      let supportedMarkets = []\r\n      _.forEach(selectedReports, (report) => {\r\n        const markets = _.get(report, 'marketplaces')\r\n        _.forEach(_.keys(markets), (marketKey) => {\r\n          const marketplace = marketKey.replaceAll('_', '.')\r\n          markets[marketKey] &&\r\n            !supportedMarkets.includes(marketplace) &&\r\n            supportedMarkets.push(marketplace)\r\n        })\r\n      })\r\n      return _.isEmpty(this.planConfig)\r\n        ? supportedMarkets\r\n          .map((market) => ({ value: market, text: _.upperFirst(market) }))\r\n        : this.planConfig.allowed_amazon_marketplaces\r\n          .filter((market) => supportedMarkets.includes(market))\r\n          .map((market) => ({ value: market, text: _.upperFirst(market) }))\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapMutations({\r\n      setMapData: `mw/maps/${TYPE.SET_ONE_MAP}`\r\n    }),\r\n    ...mapActions({\r\n      fetchMap: `mw/maps/${TYPE.FETCH_ONE_MAP}`,\r\n      updateMap: `mw/maps/${TYPE.UPDATE_MAP}`,\r\n      fetchListReports: `mw/reports/${TYPE.FETCH_IMPORT_REPORTS}`\r\n    }),\r\n    backToListMaps() {\r\n      this.$router.push({\r\n        name: `MW${this.sharableRoute}ListMaps`,\r\n        params: { client_id: this.nav.clientId },\r\n        query: { ...this.$router.history.current.query }\r\n      })\r\n    },\r\n    async getMapById() {\r\n      const {\r\n        params: { id }\r\n      } = this.$route\r\n      this.isLoading = true\r\n      try {\r\n        await this.fetchMap(id)\r\n      } catch (error) {\r\n        this.vToasted('error', error.message)\r\n      }\r\n      this.isLoading = false\r\n    },\r\n    async handleEditMap() {\r\n      this.$v.$touch()\r\n      if (this.$v.$error) {\r\n        console.log('error')\r\n        return\r\n      }\r\n      this.isLoading = true\r\n      try {\r\n        const { id } = this.$route.params\r\n        await this.updateMap({ id, data: this.mapData })\r\n        this.vToasted('success', 'This MAP has been updated successfully.')\r\n      } catch (error) {\r\n        console.log(error)\r\n        this.vToasted('error', error.data.message)\r\n      }\r\n      this.isLoading = false\r\n    },\r\n\r\n    handleCopyRecord() {\r\n      ClipboardUtil.copy(_.cloneDeep(this.mapData), FormType.MAP)\r\n      this.vToasted('success', 'Copied to clipboard')\r\n      this.checkKey()\r\n    },\r\n\r\n    async handlePasteRecord() {\r\n      try {\r\n        const pasteData = await ClipboardUtil.paste(\r\n          _.cloneDeep(this.mapData),\r\n          FormType.MAP\r\n        )\r\n        if (!pasteData) {\r\n          this.vToasted('error', 'You need to enable copy to clipboard')\r\n          return\r\n        }\r\n        this.setMapData(pasteData)\r\n        this.vToasted('success', 'Paste successfully')\r\n      } catch (e) {\r\n        this.vToasted('error', 'Your copy is not valid')\r\n      }\r\n    },\r\n    async checkKey() {\r\n      const result = await ClipboardUtil.check(FormType.MAP)\r\n      this.check = !result\r\n    }\r\n  },\r\n  created() {\r\n    this.getMapById()\r\n    this.checkKey()\r\n    window.addEventListener('focus', this.checkKey)\r\n    this.fetchListReports()\r\n  },\r\n  destroyed() {\r\n    window.removeEventListener('focus', this.checkKey)\r\n  },\r\n  validations: {\r\n    mapData: {\r\n      upc: {\r\n        isUpcOrEan: isUpcOrEan\r\n      },\r\n      isValidAsin(value) {\r\n        return (\r\n          (this.mapData.type === MapType.MAP && isAsin(this.mapData.asin)) ||\r\n          (this.mapData.type === MapType.NON_MAP &&\r\n            !_.isEmpty(this.mapData.asin) &&\r\n            isAsin(this.mapData.asin)) ||\r\n          _.isEmpty(this.mapData.asin)\r\n        )\r\n      },\r\n      sku: {\r\n        required\r\n      },\r\n      asin: {\r\n        isRequiredAsin(value) {\r\n          if (_.isEmpty(value) && this.mapData.type === MapType.MAP) {\r\n            return false\r\n          }\r\n          return true\r\n        }\r\n      },\r\n      isValidPrice(value) {\r\n        const { type, price } = this.mapData\r\n        if (type === MapType.NON_MAP) {\r\n          return true\r\n        }\r\n        return type === MapType.MAP && price\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components/page/maps"}]}