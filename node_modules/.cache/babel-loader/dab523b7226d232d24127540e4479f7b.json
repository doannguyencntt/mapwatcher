{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\sellerEnforcements\\Edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\sellerEnforcements\\Edit.vue","mtime":1630397532710},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ClipboardUtil } from 'plat-sdk/dist/clipboard';\nimport _ from 'lodash';\nimport { mapActions, mapGetters } from 'vuex';\nimport * as TYPE from '@/actionTypes.js';\nimport { required, email } from 'vuelidate/lib/validators';\nimport vToasted from '@/shared/notification';\nimport { SellerEnforcementFrequencyType } from '@/constants/SellerEnforcement';\nimport { FormType } from '@/constants/Form.js';\nimport _nav from '@/_nav';\nexport default {\n  name: 'MWEditSellerEnforcements',\n  data: function data() {\n    return {\n      sellerEnforcementFrequencyType: _.cloneDeep(SellerEnforcementFrequencyType),\n      frequency_options: [{\n        value: SellerEnforcementFrequencyType.MANUAL,\n        text: _.upperFirst(SellerEnforcementFrequencyType.MANUAL)\n      }, {\n        value: SellerEnforcementFrequencyType.DAILY,\n        text: _.upperFirst(SellerEnforcementFrequencyType.DAILY)\n      }],\n      dataSet: {\n        sender_email: '',\n        sender_name: '',\n        name: '',\n        frequency: SellerEnforcementFrequencyType.MANUAL\n      },\n      nav: _nav,\n      sellerId: '',\n      oldSellerName: '',\n      check: true\n    };\n  },\n  mixins: [vToasted],\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    remoteEditSeller: \"mw/sellerEnforcements/\".concat(TYPE.REMOTE_EDIT_SELLER_ENFORCEMENT)\n  })), {}, {\n    handleSave: function () {\n      var _handleSave = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var id, name;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.$v.$touch();\n\n                if (!this.$v.$error) {\n                  _context.next = 4;\n                  break;\n                }\n\n                console.log(this.$v.dataSet);\n                return _context.abrupt(\"return\");\n\n              case 4:\n                _context.prev = 4;\n                id = this.sellerId;\n                name = this.oldSellerName;\n                _context.next = 9;\n                return this.remoteEditSeller({\n                  params: this.dataSet,\n                  id: id\n                });\n\n              case 9:\n                this.vToasted('success', \"Seller \".concat(name, \" has been updated successfully.\"));\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](4);\n                this.vToasted('error', _context.t0.data.message);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[4, 12]]);\n      }));\n\n      function handleSave() {\n        return _handleSave.apply(this, arguments);\n      }\n\n      return handleSave;\n    }(),\n    backToListSeller: function backToListSeller() {\n      this.$router.push({\n        name: 'MWListSellerEnforcements',\n        params: {\n          client_id: this.nav.clientId\n        }\n      });\n    },\n    handleCopyRecord: function handleCopyRecord() {\n      ClipboardUtil.copy(_.cloneDeep(this.dataSet), FormType.SELLER);\n      this.vToasted('success', 'Copied to clipboard.');\n      this.checkKey();\n    },\n    handlePasteRecord: function () {\n      var _handlePasteRecord = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var pasteData;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return ClipboardUtil.paste(_.cloneDeep(this.dataSet), FormType.SELLER);\n\n              case 3:\n                pasteData = _context2.sent;\n\n                if (pasteData) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                this.vToasted('error', 'You need to enable copy to clipboard');\n                return _context2.abrupt(\"return\");\n\n              case 7:\n                this.dataSet = _objectSpread({}, pasteData);\n                this.vToasted('success', 'Paste successfully');\n                _context2.next = 14;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](0);\n                this.vToasted('error', 'Your copy is not valid');\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 11]]);\n      }));\n\n      function handlePasteRecord() {\n        return _handlePasteRecord.apply(this, arguments);\n      }\n\n      return handlePasteRecord;\n    }(),\n    checkKey: function () {\n      var _checkKey = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var result;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return ClipboardUtil.check(FormType.SELLER);\n\n              case 2:\n                result = _context3.sent;\n                this.check = !result;\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function checkKey() {\n        return _checkKey.apply(this, arguments);\n      }\n\n      return checkKey;\n    }()\n  }),\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    getPermissions: \"mw/\".concat(TYPE.GET_PERMISSIONS)\n  })), {}, {\n    isSupport: function isSupport() {\n      return ClipboardUtil.isCopySupported();\n    }\n  }),\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var _this$$route$query$se, id, senderEmail, senderName, name, frequency;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              this.checkKey();\n\n              if (this.$route.query.seller) {\n                _context4.next = 4;\n                break;\n              }\n\n              this.backToListSeller();\n              return _context4.abrupt(\"return\");\n\n            case 4:\n              _this$$route$query$se = this.$route.query.seller, id = _this$$route$query$se.id, senderEmail = _this$$route$query$se.sender_email, senderName = _this$$route$query$se.sender_name, name = _this$$route$query$se.name, frequency = _this$$route$query$se.frequency;\n\n              if (!(!id || !name || !frequency)) {\n                _context4.next = 8;\n                break;\n              }\n\n              this.backToListSeller();\n              return _context4.abrupt(\"return\");\n\n            case 8:\n              this.dataSet.sender_email = senderEmail;\n              this.dataSet.sender_name = senderName;\n              this.dataSet.name = name;\n              this.dataSet.frequency = frequency;\n              this.sellerId = id;\n              this.oldSellerName = name;\n              window.addEventListener('focus', this.checkKey);\n\n            case 15:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  destroyed: function destroyed() {\n    window.removeEventListener('focus', this.checkKey);\n  },\n  validations: {\n    dataSet: {\n      sender_email: {\n        email: email\n      },\n      sender_name: {},\n      name: {\n        required: required\n      }\n    }\n  }\n};",{"version":3,"sources":["Edit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"animated fadeIn\">\r\n    <b-card>\r\n      <!-- header -->\r\n      <template v-slot:header>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <p class=\"mx-0 my-0\">\r\n              <strong>{{ $route.meta.tableName }}</strong>\r\n            </p>\r\n            <div class=\"card-header-actions ml-2\">\r\n              <b-button\r\n                size=\"sm\"\r\n                class=\"mr-1\"\r\n                variant=\"success\"\r\n                :disabled=\"check\"\r\n                @click=\"handlePasteRecord\"\r\n              >\r\n                Paste\r\n              </b-button>\r\n              <b-button\r\n                size=\"sm\"\r\n                class=\"ml-2\"\r\n                :disabled=\"!isCopySupport\"\r\n                variant=\"secondary\"\r\n                @click=\"handleCopyRecord\"\r\n              >\r\n                Copy\r\n              </b-button>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-header-actions\">\r\n            <div class=\"btn-close\">\r\n              <b-button\r\n                variant=\"secondary\"\r\n                class=\"btn btn-block\"\r\n                size=\"sm\"\r\n                @click=\"backToListSeller()\"\r\n              >\r\n                <i class=\"icon-arrow-left-circle icons\"></i> Back\r\n              </b-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </template>\r\n      <!-- body -->\r\n      <b-form>\r\n        <b-row>\r\n          <b-col>\r\n            <label>\r\n              <b>Sender Email</b>\r\n            </label>\r\n            <b-form-input\r\n              type=\"text\"\r\n              @blur=\"$v.dataSet.sender_email.$touch()\"\r\n              :class=\"{\r\n                'is-invalid':\r\n                  $v.dataSet.sender_email.$dirty &&\r\n                  $v.dataSet.sender_email.$error\r\n              }\"\r\n              v-model.trim=\"dataSet.sender_email\"\r\n            ></b-form-input>\r\n            <div\r\n              class=\"mw-error\"\r\n              v-if=\"\r\n                $v.dataSet.sender_email.$invalid &&\r\n                $v.dataSet.sender_email.$dirty\r\n              \"\r\n            >\r\n              Sender Email is invalid.\r\n            </div>\r\n          </b-col>\r\n          <b-col>\r\n            <label>\r\n              <b>Sender Name</b>\r\n            </label>\r\n            <b-form-input\r\n              type=\"text\"\r\n              @input=\"$v.dataSet.sender_name.$touch()\"\r\n              :class=\"{\r\n                'is-invalid':\r\n                  $v.dataSet.sender_name.$dirty && $v.dataSet.sender_name.$error\r\n              }\"\r\n              v-model.trim=\"dataSet.sender_name\"\r\n              class=\"custom-width\"\r\n            ></b-form-input>\r\n            <!-- <div class=\"mw-error\" v-if=\"!$v.dataSet.sender_name.required && $v.dataSet.sender_name.$dirty\">Sender Name is required.</div> -->\r\n          </b-col>\r\n        </b-row>\r\n        <b-row class=\"sender-message\">\r\n          <b-col>\r\n            <p class=\"mw-error\">\r\n              You can setup these fields later but they are required to delivery\r\n              seller enforcement email.\r\n            </p>\r\n            <p class=\"mw-error\">\r\n              Please check with administrator to make sure your sender is\r\n              whitelisted.\r\n            </p>\r\n          </b-col>\r\n        </b-row>\r\n        <b-row class=\"mt-3\">\r\n          <b-col>\r\n            <label>\r\n              <b>Seller Name</b>\r\n            </label>\r\n            <b-form-input\r\n              type=\"text\"\r\n              @input=\"$v.dataSet.name.$touch()\"\r\n              :class=\"{\r\n                'is-invalid': $v.dataSet.name.$dirty && $v.dataSet.name.$error\r\n              }\"\r\n              v-model.trim=\"dataSet.name\"\r\n            ></b-form-input>\r\n            <div\r\n              class=\"mw-error\"\r\n              v-if=\"!$v.dataSet.name.required && $v.dataSet.name.$dirty\"\r\n            >\r\n              Seller Name is required.\r\n            </div>\r\n          </b-col>\r\n          <b-col>\r\n            <label>\r\n              <b>Frequency</b>\r\n            </label>\r\n            <br />\r\n            <b-form-select\r\n              class=\"custom-width\"\r\n              v-model=\"dataSet.frequency\"\r\n              :options=\"frequency_options\"\r\n              >Frequency</b-form-select\r\n            >\r\n          </b-col>\r\n        </b-row>\r\n      </b-form>\r\n      <!-- footer -->\r\n      <template v-slot:footer>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n          <div class=\"footer__btns\">\r\n            <b-button\r\n              v-if=\"\r\n                getPermissions.module_enabled &&\r\n                getPermissions.permissions.seedit\r\n              \"\r\n              size=\"sm\"\r\n              class=\"mr-1\"\r\n              variant=\"primary\"\r\n              @click=\"handleSave\"\r\n            >\r\n              <i class=\"fa fa-dot-circle-o\"></i> Submit\r\n            </b-button>\r\n            <b-button size=\"sm\" class=\"ml-2\" @click=\"backToListSeller()\">\r\n              <i class=\"icon-arrow-left-circle\"></i> Cancel\r\n            </b-button>\r\n          </div>\r\n        </div>\r\n      </template>\r\n    </b-card>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { ClipboardUtil } from 'plat-sdk/dist/clipboard'\r\nimport _ from 'lodash'\r\nimport { mapActions, mapGetters } from 'vuex'\r\nimport * as TYPE from '@/actionTypes.js'\r\nimport { required, email } from 'vuelidate/lib/validators'\r\nimport vToasted from '@/shared/notification'\r\nimport { SellerEnforcementFrequencyType } from '@/constants/SellerEnforcement'\r\nimport { FormType } from '@/constants/Form.js'\r\n\r\nimport _nav from '@/_nav'\r\n\r\nexport default {\r\n  name: 'MWEditSellerEnforcements',\r\n  data() {\r\n    return {\r\n      sellerEnforcementFrequencyType: _.cloneDeep(\r\n        SellerEnforcementFrequencyType\r\n      ),\r\n      frequency_options: [\r\n        {\r\n          value: SellerEnforcementFrequencyType.MANUAL,\r\n          text: _.upperFirst(SellerEnforcementFrequencyType.MANUAL)\r\n        },\r\n        {\r\n          value: SellerEnforcementFrequencyType.DAILY,\r\n          text: _.upperFirst(SellerEnforcementFrequencyType.DAILY)\r\n        }\r\n      ],\r\n      dataSet: {\r\n        sender_email: '',\r\n        sender_name: '',\r\n        name: '',\r\n        frequency: SellerEnforcementFrequencyType.MANUAL\r\n      },\r\n      nav: _nav,\r\n      sellerId: '',\r\n      oldSellerName: '',\r\n      check: true\r\n    }\r\n  },\r\n  mixins: [vToasted],\r\n  methods: {\r\n    ...mapActions({\r\n      remoteEditSeller: `mw/sellerEnforcements/${TYPE.REMOTE_EDIT_SELLER_ENFORCEMENT}`\r\n    }),\r\n    async handleSave() {\r\n      this.$v.$touch()\r\n      if (this.$v.$error) {\r\n        console.log(this.$v.dataSet)\r\n        return\r\n      }\r\n      try {\r\n        const id = this.sellerId\r\n        const name = this.oldSellerName\r\n        await this.remoteEditSeller({ params: this.dataSet, id })\r\n        this.vToasted(\r\n          'success',\r\n          `Seller ${name} has been updated successfully.`\r\n        )\r\n      } catch (error) {\r\n        this.vToasted('error', error.data.message)\r\n      }\r\n    },\r\n    backToListSeller() {\r\n      this.$router.push({\r\n        name: 'MWListSellerEnforcements',\r\n        params: { client_id: this.nav.clientId }\r\n      })\r\n    },\r\n\r\n    handleCopyRecord() {\r\n      ClipboardUtil.copy(_.cloneDeep(this.dataSet), FormType.SELLER)\r\n      this.vToasted('success', 'Copied to clipboard.')\r\n      this.checkKey()\r\n    },\r\n\r\n    async handlePasteRecord() {\r\n      try {\r\n        const pasteData = await ClipboardUtil.paste(\r\n          _.cloneDeep(this.dataSet),\r\n          FormType.SELLER\r\n        )\r\n\r\n        if (!pasteData) {\r\n          this.vToasted('error', 'You need to enable copy to clipboard')\r\n          return\r\n        }\r\n\r\n        this.dataSet = {\r\n          ...pasteData\r\n        }\r\n\r\n        this.vToasted('success', 'Paste successfully')\r\n      } catch (e) {\r\n        this.vToasted('error', 'Your copy is not valid')\r\n      }\r\n    },\r\n    async checkKey() {\r\n      const result = await ClipboardUtil.check(FormType.SELLER)\r\n\r\n      this.check = !result\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getPermissions: `mw/${TYPE.GET_PERMISSIONS}`\r\n    }),\r\n    isSupport() {\r\n      return ClipboardUtil.isCopySupported()\r\n    }\r\n  },\r\n  async created() {\r\n    this.checkKey()\r\n    if (!this.$route.query.seller) {\r\n      this.backToListSeller()\r\n      return\r\n    }\r\n    const {\r\n      id,\r\n      sender_email: senderEmail,\r\n      sender_name: senderName,\r\n      name,\r\n      frequency\r\n    } = this.$route.query.seller\r\n    if (!id || !name || !frequency) {\r\n      this.backToListSeller()\r\n      return\r\n    }\r\n    this.dataSet.sender_email = senderEmail\r\n    this.dataSet.sender_name = senderName\r\n    this.dataSet.name = name\r\n    this.dataSet.frequency = frequency\r\n    this.sellerId = id\r\n    this.oldSellerName = name\r\n\r\n    window.addEventListener('focus', this.checkKey)\r\n  },\r\n  destroyed() {\r\n    window.removeEventListener('focus', this.checkKey)\r\n  },\r\n  validations: {\r\n    dataSet: {\r\n      sender_email: {\r\n        email\r\n      },\r\n      sender_name: {},\r\n      name: {\r\n        required\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n::v-deep .card-header-actions {\r\n  margin-right: 0;\r\n}\r\n::v-deep .form-control:focus {\r\n  box-shadow: none;\r\n  border-color: #e4e7ea;\r\n}\r\n::v-deep .tag-input {\r\n  border-top: 0px;\r\n  border-top-left-radius: 0px;\r\n  border-top-right-radius: 0px;\r\n}\r\n.textarea {\r\n  overflow-y: auto !important;\r\n}\r\n::v-deep .mw-vue-tags-custom .ti-input {\r\n  border-bottom-right-radius: 0px;\r\n  border-bottom-left-radius: 0px;\r\n  height: auto !important;\r\n}\r\n.component-label {\r\n  min-width: 55px;\r\n}\r\n.custom-datepicker-control {\r\n  &::v-deep {\r\n    button.btn {\r\n      width: 83px;\r\n    }\r\n    .vdp-datepicker {\r\n      width: calc(100% - 83px);\r\n      margin-right: 0 !important;\r\n    }\r\n  }\r\n}\r\n.custom-width {\r\n  width: 100%;\r\n  max-width: 70%;\r\n}\r\n.sender-message {\r\n  margin-top: 5px;\r\n  p {\r\n    margin-bottom: 0;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/page/sellerEnforcements"}]}