{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Project\\CBPO\\plat-mw-web\\src\\service\\index.js","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\service\\index.js","mtime":1630397532839},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1626076679949}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.map\";\nimport axios from 'axios';\nimport _ from 'lodash';\nvar API_BASE_URL = process.env.VUE_APP_MW_API_BASE_URL;\nvar DUMMY_TOKEN = process.env.VUE_APP_MW_DEV_ACCESS_TOKEN;\nexport var MW_API = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 600000\n}); // Declare a Map to store the identification and cancellation functions for each request\n\nvar cancellableHolder = new Map();\n/**\r\n * Add Request\r\n * @param {Object} config\r\n */\n\nvar setupCancellable = function setupCancellable(config) {\n  if (config.cancelPreviousCallTicket) {\n    config.cancelToken = config.cancelToken || new axios.CancelToken(function (cancel) {\n      if (!cancellableHolder.has(config.cancelPreviousCallTicket)) {\n        // If the current request does not exist in pending, add it\n        cancellableHolder.set(config.cancelPreviousCallTicket, cancel);\n      }\n    });\n  }\n};\n/**\r\n * Remove Request\r\n * @param {Object} config\r\n */\n\n\nvar cancelIfExist = function cancelIfExist(config) {\n  if (cancellableHolder.has(config.cancelPreviousCallTicket)) {\n    // If the current request identity exists in pending, you need to cancel the current request and remove it\n    var cancel = cancellableHolder.get(config.cancelPreviousCallTicket);\n    cancel(config.cancelPreviousCallTicket);\n    cancellableHolder.delete(config.cancelPreviousCallTicket);\n  }\n};\n/**\r\n * Remove Cancel Label\r\n * @param {Object} config\r\n */\n\n\nvar removeCancellableIfExist = function removeCancellableIfExist(config) {\n  if (cancellableHolder.has(config.cancelPreviousCallTicket)) {\n    cancellableHolder.delete(config.cancelPreviousCallTicket);\n  }\n};\n\nMW_API.interceptors.request.use(function (config) {\n  cancelIfExist(config); // Check previous requests to cancel before the request starts\n\n  setupCancellable(config); // Add current request to pending\n\n  var token = null;\n\n  if (_.has(config, 'share_token')) {\n    token = config.share_token;\n  } else {\n    token = localStorage.getItem('ps_access_token') || DUMMY_TOKEN;\n  }\n\n  if (token) {\n    config.headers.Authorization = 'Bearer ' + token;\n  }\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\nMW_API.interceptors.response.use(function (response) {\n  removeCancellableIfExist(response.config); // Remove this request at the end of the request\n\n  return response;\n}, function (error) {\n  return Promise.reject(error);\n});",{"version":3,"sources":["C:/Project/CBPO/plat-mw-web/src/service/index.js"],"names":["axios","_","API_BASE_URL","process","env","VUE_APP_MW_API_BASE_URL","DUMMY_TOKEN","VUE_APP_MW_DEV_ACCESS_TOKEN","MW_API","create","baseURL","timeout","cancellableHolder","Map","setupCancellable","config","cancelPreviousCallTicket","cancelToken","CancelToken","cancel","has","set","cancelIfExist","get","delete","removeCancellableIfExist","interceptors","request","use","token","share_token","localStorage","getItem","headers","Authorization","error","Promise","reject","response"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport _ from 'lodash'\r\n\r\nconst API_BASE_URL = process.env.VUE_APP_MW_API_BASE_URL\r\nconst DUMMY_TOKEN = process.env.VUE_APP_MW_DEV_ACCESS_TOKEN\r\nexport const MW_API = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 600000\r\n})\r\n\r\n// Declare a Map to store the identification and cancellation functions for each request\r\nconst cancellableHolder = new Map()\r\n/**\r\n * Add Request\r\n * @param {Object} config\r\n */\r\nconst setupCancellable = (config) => {\r\n  if (config.cancelPreviousCallTicket) {\r\n    config.cancelToken = config.cancelToken || new axios.CancelToken(cancel => {\r\n      if (!cancellableHolder.has(config.cancelPreviousCallTicket)) { // If the current request does not exist in pending, add it\r\n        cancellableHolder.set(config.cancelPreviousCallTicket, cancel)\r\n      }\r\n    })\r\n  }\r\n}\r\n/**\r\n * Remove Request\r\n * @param {Object} config\r\n */\r\nconst cancelIfExist = (config) => {\r\n  if (cancellableHolder.has(config.cancelPreviousCallTicket)) { // If the current request identity exists in pending, you need to cancel the current request and remove it\r\n    const cancel = cancellableHolder.get(config.cancelPreviousCallTicket)\r\n    cancel(config.cancelPreviousCallTicket)\r\n    cancellableHolder.delete(config.cancelPreviousCallTicket)\r\n  }\r\n}\r\n/**\r\n * Remove Cancel Label\r\n * @param {Object} config\r\n */\r\nconst removeCancellableIfExist = (config) => {\r\n  if (cancellableHolder.has(config.cancelPreviousCallTicket)) {\r\n    cancellableHolder.delete(config.cancelPreviousCallTicket)\r\n  }\r\n}\r\n\r\nMW_API.interceptors.request.use(function (config) {\r\n  cancelIfExist(config) // Check previous requests to cancel before the request starts\r\n  setupCancellable(config) // Add current request to pending\r\n  let token = null\r\n  if (_.has(config, 'share_token')) {\r\n    token = config.share_token\r\n  } else {\r\n    token = localStorage.getItem('ps_access_token') || DUMMY_TOKEN\r\n  }\r\n  if (token) {\r\n    config.headers.Authorization = 'Bearer ' + token\r\n  }\r\n  return config\r\n}, function (error) {\r\n  return Promise.reject(error)\r\n})\r\n\r\nMW_API.interceptors.response.use(function (response) {\r\n  removeCancellableIfExist(response.config) // Remove this request at the end of the request\r\n  return response\r\n}, function (error) {\r\n  return Promise.reject(error)\r\n})\r\n"]}]}