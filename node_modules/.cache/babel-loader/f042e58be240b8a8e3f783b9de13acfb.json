{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\gs-maps\\Edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\gs-maps\\Edit.vue","mtime":1639628727982},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters, mapMutations } from 'vuex';\nimport { ClipboardUtil } from 'plat-sdk/dist/clipboard';\nimport * as TYPE from '@/actionTypes.js';\nimport { required } from 'vuelidate/lib/validators';\nimport vToasted from '@/shared/notification';\nimport { isUpcOrEan, isAsinAndNotEmpty } from '@/shared/utils';\nimport _nav from '@/_nav';\nimport _ from 'lodash';\nimport { FormType } from '@/constants/Form.js';\nexport default {\n  name: 'MWEditGSMaps',\n  data: function data() {\n    return {\n      nav: _nav,\n      check: true,\n      isLoading: false\n    };\n  },\n  mixins: [vToasted],\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    mapData: \"mw/maps/\".concat(TYPE.GET_ONE_GS_MAP),\n    defaultParams: \"mw/maps/\".concat(TYPE.GET_DEFAULT_PARAMS),\n    listGSReports: \"mw/reports/\".concat(TYPE.GET_GS_LIST_REPORTS)\n  })), {}, {\n    isCopySupport: function isCopySupport() {\n      return ClipboardUtil.isCopySupported();\n    },\n    reportOptions: function reportOptions() {\n      return this.listGSReports.map(function (item) {\n        return {\n          value: item._id,\n          text: item.name_in_dashboard\n        };\n      });\n    }\n  }),\n  methods: _objectSpread(_objectSpread(_objectSpread({}, mapMutations({\n    setMapData: \"mw/maps/\".concat(TYPE.SET_ONE_GS_MAP)\n  })), mapActions({\n    fetchMap: \"mw/maps/\".concat(TYPE.FETCH_ONE_GS_MAP),\n    updateMap: \"mw/maps/\".concat(TYPE.UPDATE_GS_MAP),\n    fetchListReports: \"mw/reports/\".concat(TYPE.FETCH_IMPORT_REPORTS)\n  })), {}, {\n    backToListMaps: function backToListMaps() {\n      this.$router.push({\n        name: 'MWGSListMaps',\n        params: {\n          client_id: this.nav.clientId\n        },\n        query: _objectSpread({}, this.$router.history.current.query)\n      });\n    },\n    getMapById: function () {\n      var _getMapById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var id;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.isLoading = true;\n                id = this.$route.params.id;\n                _context.prev = 2;\n                _context.next = 5;\n                return this.fetchMap(id);\n\n              case 5:\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](2);\n                this.vToasted('error', _context.t0.message);\n\n              case 10:\n                this.isLoading = false;\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 7]]);\n      }));\n\n      function getMapById() {\n        return _getMapById.apply(this, arguments);\n      }\n\n      return getMapById;\n    }(),\n    asinNotEmpty: function asinNotEmpty() {\n      if (!this.mapData || !this.mapData.asin) {\n        return false;\n      }\n\n      return this.mapData.asin.length > 0;\n    },\n    handleEditMap: function () {\n      var _handleEditMap = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var id;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.$v.$touch();\n\n                if (!this.$v.$error) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                console.log('error');\n                return _context2.abrupt(\"return\");\n\n              case 4:\n                this.isLoading = true;\n                _context2.prev = 5;\n                id = this.$route.params.id;\n                _context2.next = 9;\n                return this.updateMap({\n                  id: id,\n                  data: this.mapData\n                });\n\n              case 9:\n                this.vToasted('success', 'This MAP has been updated successfully.');\n                _context2.next = 15;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](5);\n                this.vToasted('error', _context2.t0.data.message);\n\n              case 15:\n                this.isLoading = false;\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 12]]);\n      }));\n\n      function handleEditMap() {\n        return _handleEditMap.apply(this, arguments);\n      }\n\n      return handleEditMap;\n    }(),\n    handleCopyRecord: function handleCopyRecord() {\n      ClipboardUtil.copy(_.cloneDeep(this.mapData), FormType.MAP_GS);\n      this.vToasted('success', 'Copied to clipboard.');\n      this.checkKey();\n    },\n    handlePasteRecord: function () {\n      var _handlePasteRecord = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var pasteData;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return ClipboardUtil.paste(_.cloneDeep(this.mapData), FormType.MAP_GS);\n\n              case 3:\n                pasteData = _context3.sent;\n\n                if (pasteData) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                this.vToasted('error', 'You need to enable copy to clipboard');\n                return _context3.abrupt(\"return\");\n\n              case 7:\n                this.setMapData(pasteData);\n                this.vToasted('success', 'Paste successfully');\n                _context3.next = 14;\n                break;\n\n              case 11:\n                _context3.prev = 11;\n                _context3.t0 = _context3[\"catch\"](0);\n                this.vToasted('error', 'You copy is not valid');\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 11]]);\n      }));\n\n      function handlePasteRecord() {\n        return _handlePasteRecord.apply(this, arguments);\n      }\n\n      return handlePasteRecord;\n    }(),\n    checkKey: function () {\n      var _checkKey = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var result;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return ClipboardUtil.check(FormType.MAP_GS);\n\n              case 2:\n                result = _context4.sent;\n                this.check = !result;\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function checkKey() {\n        return _checkKey.apply(this, arguments);\n      }\n\n      return checkKey;\n    }()\n  }),\n  created: function created() {\n    this.getMapById();\n    this.checkKey();\n    window.addEventListener('focus', this.checkKey);\n    this.fetchListReports();\n  },\n  destroyed: function destroyed() {\n    window.removeEventListener('focus', this.checkKey);\n  },\n  validations: {\n    mapData: {\n      upc: {\n        isUpcOrEan: isUpcOrEan\n      },\n      asin: {\n        isAsinAndNotEmpty: isAsinAndNotEmpty\n      },\n      sku: {\n        required: required\n      },\n      price: {\n        required: required\n      }\n    }\n  }\n};",{"version":3,"sources":["Edit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"animated fadeIn\">\r\n    <b-row>\r\n      <b-col md=\"6\" lg=\"6\" sm=\"12\">\r\n        <b-card footer-tag=\"footer\">\r\n          <template v-slot:header>\r\n            <div class=\"d-flex justify-content-between align-items-center\">\r\n              <div class=\"d-flex align-items-center\">\r\n                <p class=\"mx-0 my-0\"><strong>EDIT MAP</strong></p>\r\n                <div class=\"card-header-actions ml-2\">\r\n                  <b-button\r\n                    size=\"sm\"\r\n                    class=\"mr-1\"\r\n                    :disabled=\"check\"\r\n                    variant=\"success\"\r\n                    @click=\"handlePasteRecord\"\r\n                  >\r\n                    Paste\r\n                  </b-button>\r\n                  <b-button\r\n                    size=\"sm\"\r\n                    class=\"ml-2\"\r\n                    :disabled=\"!isCopySupport\"\r\n                    variant=\"secondary\"\r\n                    @click=\"handleCopyRecord\"\r\n                  >\r\n                    Copy\r\n                  </b-button>\r\n                </div>\r\n              </div>\r\n              <div class=\"card-header-actions\">\r\n                <div class=\"btn-close\">\r\n                  <b-button\r\n                    variant=\"secondary\"\r\n                    class=\"btn btn-block\"\r\n                    size=\"sm\"\r\n                    @click=\"backToListMaps()\"\r\n                  >\r\n                    <i class=\"icon-arrow-left-circle icons\"></i> Back\r\n                  </b-button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </template>\r\n          <b-form>\r\n            <b-form-group>\r\n              <label>\r\n                <b>Report</b>\r\n              </label>\r\n              <b-form-select\r\n                v-model=\"mapData.report_id\"\r\n                :options=\"reportOptions\"\r\n              >\r\n                <template v-slot:first>\r\n                  <option :value=\"null\" disabled>All Reports</option>\r\n                </template>\r\n              </b-form-select>\r\n            </b-form-group>\r\n            <b-form-group>\r\n              <label>\r\n                <b>Brand Name</b>\r\n              </label>\r\n              <b-form-input\r\n                type=\"text\"\r\n                v-model.trim=\"mapData.brand_name\"\r\n              />\r\n            </b-form-group>\r\n            <b-form-group>\r\n              <label>\r\n                <b>SKU</b>\r\n              </label>\r\n              <b-form-input\r\n                type=\"text\"\r\n                @input=\"$v.mapData.sku.$touch()\"\r\n                :class=\"{\r\n                  'is-invalid': $v.mapData.sku.$dirty && $v.mapData.sku.$error\r\n                }\"\r\n                v-model.trim=\"mapData.sku\"\r\n              ></b-form-input>\r\n              <div\r\n                class=\"mw-error invalid-feedback\"\r\n                v-if=\"!$v.mapData.sku.required && $v.mapData.sku.$dirty\"\r\n              >\r\n                SKU is required.\r\n              </div>\r\n            </b-form-group>\r\n            <b-form-group>\r\n              <label>\r\n                <b>ASIN</b>\r\n              </label>\r\n              <b-form-input\r\n                type=\"text\"\r\n                @input=\"$v.mapData.asin.$touch()\"\r\n                :class=\"{\r\n                  'is-invalid':\r\n                    asinNotEmpty() &&\r\n                    $v.mapData.asin.$dirty &&\r\n                    $v.mapData.asin.$error\r\n                }\"\r\n                v-model.trim=\"mapData.asin\"\r\n              ></b-form-input>\r\n              <div\r\n                class=\"mw-error invalid-feedback\"\r\n                v-if=\"\r\n                  asinNotEmpty() &&\r\n                  !$v.mapData.asin.isAsinAndNotEmpty &&\r\n                  $v.mapData.asin.$dirty\r\n                \"\r\n              >\r\n                ASIN is invalid.\r\n              </div>\r\n            </b-form-group>\r\n            <b-form-group>\r\n              <label>\r\n                <b>Amazon Title</b>\r\n              </label>\r\n              <b-form-input\r\n                type=\"text\"\r\n                v-model.trim=\"mapData.amazon_title\"\r\n              />\r\n            </b-form-group>\r\n            <b-form-group>\r\n              <label>\r\n                <b>UPC/EAN</b>\r\n              </label>\r\n              <b-form-input\r\n                type=\"text\"\r\n                @input=\"$v.mapData.upc.$touch()\"\r\n                :class=\"{\r\n                  'is-invalid':\r\n                    $v.mapData.upc.$dirty && !$v.mapData.upc.isUpcOrEan\r\n                }\"\r\n                v-model.trim=\"mapData.upc\"\r\n              ></b-form-input>\r\n              <div\r\n                class=\"mw-error invalid-feedback\"\r\n                v-if=\"!$v.mapData.upc.isUpcOrEan && $v.mapData.upc.$dirty\"\r\n              >\r\n                UPC/EAN is invalid.\r\n              </div>\r\n            </b-form-group>\r\n            <b-form-group>\r\n              <label>\r\n                <b>Price</b>\r\n              </label>\r\n              <b-form-input\r\n                type=\"number\"\r\n                @input=\"$v.mapData.price.$touch()\"\r\n                :class=\"{\r\n                  'is-invalid':\r\n                    $v.mapData.price.$dirty && $v.mapData.price.$error\r\n                }\"\r\n                v-model.trim=\"mapData.price\"\r\n              ></b-form-input>\r\n              <div\r\n                class=\"mw-error invalid-feedback\"\r\n                v-if=\"!$v.mapData.price.required && $v.mapData.price.$dirty\"\r\n              >\r\n                Price is required.\r\n              </div>\r\n            </b-form-group>\r\n            <b-form-group>\r\n              <label>\r\n                <b>GPID</b>\r\n              </label>\r\n              <b-form-input\r\n                type=\"text\"\r\n                v-model.trim=\"mapData.gpid\"\r\n              ></b-form-input>\r\n            </b-form-group>\r\n            <b-form-group>\r\n              <label>\r\n                <b>Size</b>\r\n              </label>\r\n              <b-form-input\r\n                type=\"text\"\r\n                v-model.trim=\"mapData.size\"\r\n              />\r\n            </b-form-group>\r\n            <b-form-group>\r\n              <label>\r\n                <b>Color</b>\r\n              </label>\r\n              <b-form-input\r\n                type=\"text\"\r\n                v-model.trim=\"mapData.color\"\r\n              />\r\n            </b-form-group>\r\n            <b-form-group>\r\n              <label>\r\n                <b>Gender</b>\r\n              </label>\r\n              <b-form-input\r\n                type=\"text\"\r\n                v-model.trim=\"mapData.gender\"\r\n              />\r\n            </b-form-group>\r\n          </b-form>\r\n          <template v-slot:footer>\r\n            <div class=\"d-flex justify-content-between\">\r\n              <div class=\"footer__btns\">\r\n                <b-button\r\n                  class=\"mr-1\"\r\n                  variant=\"primary\"\r\n                  size=\"sm\"\r\n                  @click=\"handleEditMap\"\r\n                  :disabled=\"isLoading\"\r\n                >\r\n                  <i class=\"fa fa-dot-circle-o\"></i> Update\r\n                </b-button>\r\n                <b-button size=\"sm\" class=\"ml-2\" @click=\"backToListMaps()\">\r\n                  <i class=\"icon-arrow-left-circle\"></i> Cancel\r\n                </b-button>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </b-card>\r\n      </b-col>\r\n    </b-row>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { mapActions, mapGetters, mapMutations } from 'vuex'\r\nimport { ClipboardUtil } from 'plat-sdk/dist/clipboard'\r\nimport * as TYPE from '@/actionTypes.js'\r\nimport { required } from 'vuelidate/lib/validators'\r\nimport vToasted from '@/shared/notification'\r\nimport { isUpcOrEan, isAsinAndNotEmpty } from '@/shared/utils'\r\nimport _nav from '@/_nav'\r\nimport _ from 'lodash'\r\nimport { FormType } from '@/constants/Form.js'\r\n\r\nexport default {\r\n  name: 'MWEditGSMaps',\r\n  data() {\r\n    return {\r\n      nav: _nav,\r\n      check: true,\r\n      isLoading: false\r\n    }\r\n  },\r\n  mixins: [vToasted],\r\n  computed: {\r\n    ...mapGetters({\r\n      mapData: `mw/maps/${TYPE.GET_ONE_GS_MAP}`,\r\n      defaultParams: `mw/maps/${TYPE.GET_DEFAULT_PARAMS}`,\r\n      listGSReports: `mw/reports/${TYPE.GET_GS_LIST_REPORTS}`\r\n    }),\r\n    isCopySupport() {\r\n      return ClipboardUtil.isCopySupported()\r\n    },\r\n    reportOptions() {\r\n      return this.listGSReports.map((item) => ({\r\n        value: item._id,\r\n        text: item.name_in_dashboard\r\n      }))\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapMutations({\r\n      setMapData: `mw/maps/${TYPE.SET_ONE_GS_MAP}`\r\n    }),\r\n    ...mapActions({\r\n      fetchMap: `mw/maps/${TYPE.FETCH_ONE_GS_MAP}`,\r\n      updateMap: `mw/maps/${TYPE.UPDATE_GS_MAP}`,\r\n      fetchListReports: `mw/reports/${TYPE.FETCH_IMPORT_REPORTS}`\r\n    }),\r\n    backToListMaps() {\r\n      this.$router.push({\r\n        name: 'MWGSListMaps',\r\n        params: { client_id: this.nav.clientId },\r\n        query: { ...this.$router.history.current.query }\r\n      })\r\n    },\r\n    async getMapById() {\r\n      this.isLoading = true\r\n      const {\r\n        params: { id }\r\n      } = this.$route\r\n      try {\r\n        await this.fetchMap(id)\r\n      } catch (error) {\r\n        this.vToasted('error', error.message)\r\n      }\r\n      this.isLoading = false\r\n    },\r\n    asinNotEmpty() {\r\n      if (!this.mapData || !this.mapData.asin) {\r\n        return false\r\n      }\r\n      return this.mapData.asin.length > 0\r\n    },\r\n    async handleEditMap() {\r\n      this.$v.$touch()\r\n      if (this.$v.$error) {\r\n        console.log('error')\r\n        return\r\n      }\r\n      this.isLoading = true\r\n      try {\r\n        const { id } = this.$route.params\r\n        await this.updateMap({ id, data: this.mapData })\r\n        this.vToasted('success', 'This MAP has been updated successfully.')\r\n      } catch (error) {\r\n        this.vToasted('error', error.data.message)\r\n      }\r\n      this.isLoading = false\r\n    },\r\n\r\n    handleCopyRecord() {\r\n      ClipboardUtil.copy(_.cloneDeep(this.mapData), FormType.MAP_GS)\r\n      this.vToasted('success', 'Copied to clipboard.')\r\n      this.checkKey()\r\n    },\r\n\r\n    async handlePasteRecord() {\r\n      try {\r\n        const pasteData = await ClipboardUtil.paste(\r\n          _.cloneDeep(this.mapData),\r\n          FormType.MAP_GS\r\n        )\r\n        if (!pasteData) {\r\n          this.vToasted('error', 'You need to enable copy to clipboard')\r\n          return\r\n        }\r\n        this.setMapData(pasteData)\r\n        this.vToasted('success', 'Paste successfully')\r\n      } catch (e) {\r\n        this.vToasted('error', 'You copy is not valid')\r\n      }\r\n    },\r\n\r\n    async checkKey() {\r\n      const result = await ClipboardUtil.check(FormType.MAP_GS)\r\n\r\n      this.check = !result\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.getMapById()\r\n    this.checkKey()\r\n    window.addEventListener('focus', this.checkKey)\r\n    this.fetchListReports()\r\n  },\r\n\r\n  destroyed() {\r\n    window.removeEventListener('focus', this.checkKey)\r\n  },\r\n\r\n  validations: {\r\n    mapData: {\r\n      upc: {\r\n        isUpcOrEan: isUpcOrEan\r\n      },\r\n      asin: {\r\n        isAsinAndNotEmpty\r\n      },\r\n      sku: {\r\n        required\r\n      },\r\n      price: {\r\n        required\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components/page/gs-maps"}]}