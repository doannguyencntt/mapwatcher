{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\sellerEnforcements\\Content.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\sellerEnforcements\\Content.vue","mtime":1626264502302},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1626076746842},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1626076746842},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapActions } from 'vuex';\nimport vToasted from '@/shared/notification';\nimport * as TYPE from '@/actionTypes.js';\nimport _ from 'lodash';\nimport _nav from '@/_nav';\nimport { SellerEnforcementFrequencyType } from '@/constants/SellerEnforcement';\nimport { VueEditor } from 'vue2-editor';\nimport vSelect from 'vue-select';\nimport moment from 'moment';\nexport default {\n  name: 'c-table',\n  inheritAttrs: false,\n  mixins: [vToasted],\n  props: {\n    caption: {\n      type: String,\n      default: 'Table'\n    },\n    hover: {\n      type: Boolean,\n      default: false\n    },\n    striped: {\n      type: Boolean,\n      default: false\n    },\n    bordered: {\n      type: Boolean,\n      default: false\n    },\n    small: {\n      type: Boolean,\n      default: false\n    },\n    fixed: {\n      type: Boolean,\n      default: false\n    },\n    tableData: {\n      type: [Array, Function],\n      default: function _default() {\n        return [];\n      }\n    },\n    fields: {\n      type: [Array, Object],\n      default: function _default() {\n        return [];\n      }\n    },\n    dark: {\n      type: Boolean,\n      default: false\n    },\n    totalRows: {\n      type: Number,\n      default: 0\n    },\n    handleChangePage: {\n      type: [Function]\n    }\n  },\n  data: function data() {\n    return {\n      sellerEnforcementFrequencyType: _.cloneDeep(SellerEnforcementFrequencyType),\n      dialog: {\n        remove: false,\n        letter: false,\n        switch: false,\n        update_sender: false,\n        send_mail: false\n      },\n      selected: {\n        remove: null,\n        switch: null,\n        item: null,\n        history_dates: [],\n        send_mail: {\n          total_contact: 0,\n          date: null\n        },\n        letter: {\n          body: {},\n          include_document: false\n        }\n      },\n      vueEditorCustomToolbar: [[{\n        'font': []\n      }], [{\n        'header': [false, 1, 2, 3, 4, 5, 6]\n      }], [{\n        'size': ['small', false, 'large', 'huge']\n      }], ['bold', 'italic', 'underline'], [{\n        'align': ''\n      }, {\n        'align': 'center'\n      }, {\n        'align': 'right'\n      }, {\n        'align': 'justify'\n      }], [{\n        'header': 1\n      }, {\n        'header': 2\n      }], [{\n        'list': 'ordered'\n      }, {\n        'list': 'bullet'\n      }], [{\n        'script': 'sub'\n      }, {\n        'script': 'super'\n      }], [{\n        'indent': '-1'\n      }, {\n        'indent': '+1'\n      }], [{\n        'color': []\n      }, {\n        'background': []\n      }], ['link', 'formula'], [{\n        'direction': 'rtl'\n      }], ['clean']],\n      defaultLetterContent: '<p>Dear {{ contact-name }},</p>' + '<p>We would like to inform that you have violation .Total number of violation is {{ violation-count }}.</p>' + '<p>Please see the attached file.</p>' + '<p>Regards,</p>' + '<p>Investigate Team</p>',\n      nav: _nav\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    getPermissions: \"mw/\".concat(TYPE.GET_PERMISSIONS),\n    defaultParams: \"mw/sellerEnforcements/\".concat(TYPE.GET_DEFAULT_SELLER_ENFORCEMENT_PARAMS),\n    listSellers: \"mw/sellerEnforcements/\".concat(TYPE.GET_LIST_SELLER_ENFORCEMENT)\n  })), {}, {\n    params: function params() {\n      console.log(this.defaultParams);\n      return _objectSpread({}, this.defaultParams) || {};\n    },\n    getItems: function getItems() {\n      return this.listSellers.items;\n    },\n    captions: function captions() {\n      var fields = this.fields;\n      return fields;\n    }\n  }),\n  components: {\n    VueEditor: VueEditor,\n    vSelect: vSelect\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    removeSeller: \"mw/sellerEnforcements/\".concat(TYPE.REMOVE_SELLER_ENFORCEMENT),\n    changeFrequency: \"mw/sellerEnforcements/\".concat(TYPE.CHANGE_FREQUENCY_SELLER_ENFORCEMENT),\n    remoteEditSeller: \"mw/sellerEnforcements/\".concat(TYPE.REMOTE_EDIT_SELLER_ENFORCEMENT),\n    manualSendMail: \"mw/sellerEnforcements/\".concat(TYPE.REMOTE_MANUAL_SEND_MAIL_SELLER_ENFORCEMENT),\n    getHistoryDates: \"mw/sellerEnforcements/\".concat(TYPE.GET_SELLER_ENFORCEMENT_HISTORY_DATES)\n  })), {}, {\n    paramsChange: function paramsChange() {\n      this.$emit('paramsChange', this.params);\n    },\n    handleEditItem: function handleEditItem(seller) {\n      this.$router.push({\n        name: 'MWEditSellerEnforcements',\n        params: {\n          client_id: this.nav.clientId,\n          id: seller.id\n        },\n        query: {\n          seller: seller\n        }\n      });\n    },\n    handleManualSendMail: function () {\n      var _handleManualSendMail = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this$selected$item, id, contacts, name;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$selected$item = this.selected.item, id = _this$selected$item.id, contacts = _this$selected$item.contacts, name = _this$selected$item.name;\n\n                if (!_.isEmpty(contacts)) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.vToasted('error', \"\".concat(name, \" seller has empty contact list.\")));\n\n              case 3:\n                _context.prev = 3;\n                _context.next = 6;\n                return this.manualSendMail({\n                  id: id,\n                  date: this.selected.send_mail.date\n                });\n\n              case 6:\n                this.vToasted('success', \"\".concat(name, \" seller's violations on \").concat(this.selected.send_mail.date, \" have been successfully sent to all contacts.\"));\n                this.dialog.send_mail = false;\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](3);\n                this.vToasted('error', _context.t0.message);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 10]]);\n      }));\n\n      function handleManualSendMail() {\n        return _handleManualSendMail.apply(this, arguments);\n      }\n\n      return handleManualSendMail;\n    }(),\n    handleRemoveItem: function handleRemoveItem(item) {\n      this.dialog.remove = true;\n      this.selected.remove = {\n        id: item.id,\n        name: item.name\n      };\n    },\n    handleUpdateLetter: function () {\n      var _handleUpdateLetter = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var name, id;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                name = this.selected.item.name;\n                id = this.selected.item.id;\n                _context2.next = 5;\n                return this.remoteEditSeller({\n                  params: {\n                    letter: this.selected.letter\n                  },\n                  id: id\n                });\n\n              case 5:\n                this.vToasted('success', \"Letter of seller \".concat(name, \" has been updated successfully.\"));\n                this.paramsChange();\n                this.dialog.letter = false;\n                _context2.next = 13;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](0);\n                this.vToasted('error', _context2.t0.data.message);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 10]]);\n      }));\n\n      function handleUpdateLetter() {\n        return _handleUpdateLetter.apply(this, arguments);\n      }\n\n      return handleUpdateLetter;\n    }(),\n    handleEditLetter: function handleEditLetter(item) {\n      this.selected.item = item;\n\n      if (!_.isEmpty(item.letter.body)) {\n        this.selected.letter.body = item.letter.body;\n      } else {\n        this.selected.letter.body = this.defaultLetterContent;\n      }\n\n      this.selected.letter.include_document = item.letter.include_document;\n      this.dialog.letter = true;\n    },\n    handleChangeFrequency: function handleChangeFrequency(seller) {\n      this.dialog.switch = true;\n      this.selected.switch = {\n        id: seller.id,\n        frequency: seller.frequency,\n        name: seller.name\n      };\n    },\n    handleGotoEditContacts: function handleGotoEditContacts(seller) {\n      var id = seller.id;\n      this.$router.push({\n        name: 'MWSellerEnforcementContacts',\n        params: {\n          client_id: this.nav.clientId,\n          id: id\n        }\n      });\n    },\n    handleSendMail: function () {\n      var _handleSendMail = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(seller) {\n        var histories;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!seller.sender_email) {\n                  _context3.next = 11;\n                  break;\n                }\n\n                this.selected.item = seller;\n                this.selected.send_mail.total_contact = _.size(seller.contacts);\n                this.dialog.send_mail = true;\n                _context3.next = 6;\n                return this.getHistoryDates(seller.id);\n\n              case 6:\n                histories = _context3.sent;\n                this.selected.history_dates = _.map(histories, function (history) {\n                  return moment(history.date_string, 'YYYYMMDD').format('MM-DD-YYYY');\n                });\n\n                if (!_.isEmpty(this.selected.history_dates)) {\n                  this.selected.send_mail.date = this.selected.history_dates[0];\n                } else {\n                  this.selected.send_mail.date = moment().format('MM-DD-YYYY');\n                }\n\n                _context3.next = 12;\n                break;\n\n              case 11:\n                this.dialog.update_sender = true;\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function handleSendMail(_x) {\n        return _handleSendMail.apply(this, arguments);\n      }\n\n      return handleSendMail;\n    }(),\n    handleGotoHistories: function handleGotoHistories(seller) {\n      var id = seller.id;\n      this.$router.push({\n        name: 'MWSellerEnforcementHistories',\n        params: {\n          client_id: this.nav.clientId,\n          id: id\n        }\n      });\n    },\n    changeFrequencyMode: function changeFrequencyMode() {\n      var _this$selected$switch = this.selected.switch,\n          id = _this$selected$switch.id,\n          frequency = _this$selected$switch.frequency,\n          name = _this$selected$switch.name;\n      var updatedFrequency = frequency === this.sellerEnforcementFrequencyType.MANUAL ? this.sellerEnforcementFrequencyType.DAILY : this.sellerEnforcementFrequencyType.MANUAL;\n      this.changeFrequency({\n        id: id,\n        frequency: updatedFrequency\n      });\n      this.vToasted('success', \"Seller \".concat(name, \" has been change frequency mode to \").concat(updatedFrequency, \" successfully\"));\n    },\n    removeItem: function () {\n      var _removeItem = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var id;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                id = this.selected.remove.id;\n                _context4.next = 4;\n                return this.removeSeller(id);\n\n              case 4:\n                this.vToasted('success', \"Seller \".concat(this.selected.remove.name, \" has been deleted successfully\"));\n                _context4.next = 10;\n                break;\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](0);\n                this.vToasted('error', _context4.t0.data.message);\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 7]]);\n      }));\n\n      function removeItem() {\n        return _removeItem.apply(this, arguments);\n      }\n\n      return removeItem;\n    }()\n  })\n};",null]}