{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Project\\CBPO\\plat-mw-web\\src\\store\\modules\\actions.js","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\store\\modules\\actions.js","mtime":1630397532851},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1626076679949}],"contextDependencies":[],"result":["import _defineProperty from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Project/CBPO/plat-mw-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _FETCH_PERMISSIONS$re;\n\nimport { MW_API } from '@/service';\nimport * as URL from '@/service/_constant';\nimport { FETCH_PERMISSIONS, SET_PERMISSIONS, SET_PLAN_CONFIG, SET_ORGANIZATION_STATS, SET_ORG_IS } from '@/actionTypes';\nimport isEmpty from 'lodash/isEmpty';\nimport omit from 'lodash/omit';\nimport get from 'lodash/get';\nexport default (_FETCH_PERMISSIONS$re = {}, _defineProperty(_FETCH_PERMISSIONS$re, FETCH_PERMISSIONS, function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref, payload) {\n    var commit, respone, config;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref.commit;\n            _context.prev = 1;\n\n            if (isEmpty(payload)) {\n              _context.next = 9;\n              break;\n            }\n\n            config = payload.config;\n            _context.next = 6;\n            return MW_API.get(URL.FETCH_PERMISSIONS(), config);\n\n          case 6:\n            respone = _context.sent;\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.next = 11;\n            return MW_API.get(URL.FETCH_PERMISSIONS());\n\n          case 11:\n            respone = _context.sent;\n\n          case 12:\n            if (respone && respone.data) {\n              // permission\n              commit(SET_PERMISSIONS, omit(respone.data, ['organization'])); // plan_config\n\n              commit(SET_PLAN_CONFIG, get(respone.data, 'organization.plan_config')); // plan stats\n\n              commit(SET_ORGANIZATION_STATS, get(respone.data, 'organization.stats')); // is oe user\n\n              commit(SET_ORG_IS, get(respone.data, 'organization.is'));\n            } else {\n              commit(SET_PERMISSIONS, {});\n            }\n\n            _context.next = 19;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](1);\n            console.log('permissions', _context.t0);\n            commit(SET_PERMISSIONS, {});\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 15]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}()), _defineProperty(_FETCH_PERMISSIONS$re, \"resetState\", function resetState(_ref3) {\n  var commit = _ref3.commit;\n  commit('resetState');\n}), _FETCH_PERMISSIONS$re);",{"version":3,"sources":["C:/Project/CBPO/plat-mw-web/src/store/modules/actions.js"],"names":["MW_API","URL","FETCH_PERMISSIONS","SET_PERMISSIONS","SET_PLAN_CONFIG","SET_ORGANIZATION_STATS","SET_ORG_IS","isEmpty","omit","get","payload","commit","config","respone","data","console","log"],"mappings":";;;;;;AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,qBAArB;AACA,SAASC,iBAAT,EAA4BC,eAA5B,EAA6CC,eAA7C,EAA8DC,sBAA9D,EAAsFC,UAAtF,QAAwG,eAAxG;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,mFACSP,iBADT;AAAA,6FACwCQ,OADxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAC8BC,YAAAA,MAD9B,QAC8BA,MAD9B;AAAA;;AAAA,gBAIWJ,OAAO,CAACG,OAAD,CAJlB;AAAA;AAAA;AAAA;;AAKgBE,YAAAA,MALhB,GAK2BF,OAL3B,CAKgBE,MALhB;AAAA;AAAA,mBAMwBZ,MAAM,CAACS,GAAP,CAAWR,GAAG,CAACC,iBAAJ,EAAX,EAAoCU,MAApC,CANxB;;AAAA;AAMQC,YAAAA,OANR;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAQwBb,MAAM,CAACS,GAAP,CAAWR,GAAG,CAACC,iBAAJ,EAAX,CARxB;;AAAA;AAQQW,YAAAA,OARR;;AAAA;AAUM,gBAAIA,OAAO,IAAIA,OAAO,CAACC,IAAvB,EAA6B;AAC3B;AACAH,cAAAA,MAAM,CAACR,eAAD,EAAkBK,IAAI,CAACK,OAAO,CAACC,IAAT,EAAe,CAAC,cAAD,CAAf,CAAtB,CAAN,CAF2B,CAG3B;;AACAH,cAAAA,MAAM,CAACP,eAAD,EAAkBK,GAAG,CAACI,OAAO,CAACC,IAAT,EAAe,0BAAf,CAArB,CAAN,CAJ2B,CAK3B;;AACAH,cAAAA,MAAM,CAACN,sBAAD,EAAyBI,GAAG,CAACI,OAAO,CAACC,IAAT,EAAe,oBAAf,CAA5B,CAAN,CAN2B,CAO3B;;AACAH,cAAAA,MAAM,CAACL,UAAD,EAAaG,GAAG,CAACI,OAAO,CAACC,IAAT,EAAe,iBAAf,CAAhB,CAAN;AACD,aATD,MASO;AACLH,cAAAA,MAAM,CAACR,eAAD,EAAkB,EAAlB,CAAN;AACD;;AArBP;AAAA;;AAAA;AAAA;AAAA;AAuBMY,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAL,YAAAA,MAAM,CAACR,eAAD,EAAkB,EAAlB,CAAN;;AAxBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,2DA2Bc,2BAAgB;AAAA,MAAbQ,MAAa,SAAbA,MAAa;AAC1BA,EAAAA,MAAM,CAAC,YAAD,CAAN;AACD,CA7BH","sourcesContent":["import { MW_API } from '@/service'\r\nimport * as URL from '@/service/_constant'\r\nimport { FETCH_PERMISSIONS, SET_PERMISSIONS, SET_PLAN_CONFIG, SET_ORGANIZATION_STATS, SET_ORG_IS } from '@/actionTypes'\r\nimport isEmpty from 'lodash/isEmpty'\r\nimport omit from 'lodash/omit'\r\nimport get from 'lodash/get'\r\n\r\nexport default {\r\n  async [FETCH_PERMISSIONS]({ commit }, payload) {\r\n    try {\r\n      let respone\r\n      if (!isEmpty(payload)) {\r\n        const { config } = payload\r\n        respone = await MW_API.get(URL.FETCH_PERMISSIONS(), config)\r\n      } else {\r\n        respone = await MW_API.get(URL.FETCH_PERMISSIONS())\r\n      }\r\n      if (respone && respone.data) {\r\n        // permission\r\n        commit(SET_PERMISSIONS, omit(respone.data, ['organization']))\r\n        // plan_config\r\n        commit(SET_PLAN_CONFIG, get(respone.data, 'organization.plan_config'))\r\n        // plan stats\r\n        commit(SET_ORGANIZATION_STATS, get(respone.data, 'organization.stats'))\r\n        // is oe user\r\n        commit(SET_ORG_IS, get(respone.data, 'organization.is'))\r\n      } else {\r\n        commit(SET_PERMISSIONS, {})\r\n      }\r\n    } catch (err) {\r\n      console.log('permissions', err)\r\n      commit(SET_PERMISSIONS, {})\r\n    }\r\n  },\r\n  resetState: ({ commit }) => {\r\n    commit('resetState')\r\n  }\r\n}\r\n"]}]}