{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\reports\\InventoryHistoryListContent.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\reports\\InventoryHistoryListContent.vue","mtime":1639556629239},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters } from 'vuex'\r\nimport vToasted from '@/shared/notification'\r\nimport * as TYPE from '@/actionTypes.js'\r\nimport { GoogleShoppingGPIDStatus } from '@/constants/Map'\r\nimport _nav from '@/_nav'\r\n// import { MW_API } from '@/service/'\r\n// import * as utils from '@/shared/utils'\r\n// import * as URL from '@/service/_constant'\r\nimport LoadingSpinner from '@/components/common/LoadingSpinner'\r\n\r\nexport default {\r\n  name: 'c-table',\r\n  inheritAttrs: false,\r\n  mixins: [vToasted],\r\n  props: {\r\n    caption: {\r\n      type: String,\r\n      default: 'Table'\r\n    },\r\n    hover: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    striped: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    bordered: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    small: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    fixed: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    tableData: {\r\n      type: [Array, Function],\r\n      default: () => []\r\n    },\r\n    fields: {\r\n      type: [Array, Object],\r\n      default: () => []\r\n    },\r\n    dark: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    totalRows: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    handleChangePage: {\r\n      type: [Function]\r\n    },\r\n    historyLoading: {\r\n      type: Boolean\r\n    }\r\n  },\r\n  data: () => {\r\n    return {\r\n      GoogleShoppingMapStatus: GoogleShoppingGPIDStatus,\r\n      listUniqReportId: [],\r\n      nav: _nav,\r\n      mapId: null,\r\n      currentItem: {\r\n        currentMapItem: null,\r\n        currentDiscoveredGpidItem: null\r\n      },\r\n      selectedMaps: []\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getPermissions: `mw/${TYPE.GET_PERMISSIONS}`,\r\n      defaultParams: `mw/reports/${TYPE.GET_REPORT_MARKETPLACE_HISTORY_DEFAULT_PARAMS}`,\r\n      defaultAmazonMapParams: `mw/maps/${TYPE.GET_DEFAULT_AMAZON_MAP_PARAMS}`,\r\n      reportList: `mw/reports/${TYPE.GET_LIST_REPORTS}`,\r\n      gsReportList: `mw/reports/${TYPE.GET_VALID_GS_REPORTS}`,\r\n      listHistories: `mw/reports/${TYPE.GET_INVENTORY_HISTORY}`\r\n    }),\r\n    params: function() {\r\n      return { ...this.defaultParams } || {}\r\n    },\r\n    getItems: function() {\r\n      return this.listHistories.items\r\n    },\r\n    captions: function() {\r\n      const { fields } = this\r\n      return fields\r\n    }\r\n  },\r\n  components: {\r\n    LoadingSpinner\r\n  },\r\n  methods: {\r\n    paramsChange() {\r\n      this.$emit('paramsChange', this.params)\r\n    },\r\n    // TODO: update handleDownloadInventory() when API /history is available\r\n    handleDownloadInventory(uri) {\r\n      let toast = this.$toasted.show('Downloading...', {\r\n        theme: 'outline',\r\n        position: 'top-center',\r\n        iconPack: 'custom-class',\r\n        className: 'cpbo-toast-export',\r\n        icon: {\r\n          name: 'fa fa-spinner fa-spin fa-fw',\r\n          after: false\r\n        },\r\n        duration: null\r\n      })\r\n      try {\r\n        toast.goAway(1500)\r\n        window.location.href = uri\r\n      } catch (e) {\r\n        toast.goAway(1500)\r\n        this.vToasted('error', e)\r\n      }\r\n    },\r\n    // async handleDownloadInventory(report, source) {\r\n    //   let toast = this.$toasted.show('Downloading...', {\r\n    //     theme: 'outline',\r\n    //     position: 'top-center',\r\n    //     iconPack: 'custom-class',\r\n    //     className: 'cpbo-toast-export',\r\n    //     icon: {\r\n    //       name: 'fa fa-spinner fa-spin fa-fw',\r\n    //       after: false\r\n    //     },\r\n    //     duration: null\r\n    //   })\r\n    //   try {\r\n    //     const payload = {\r\n    //       report_id: report.report_id,\r\n    //       marketplace: report.marketplace,\r\n    //       date: report.date,\r\n    //       source\r\n    //     }\r\n    //     const fileUri = await MW_API.get(`${URL.GET_VIOLATION_MARKETPLACE_HISTORY()}?${utils.buildUrlQueryString(payload)}`)\r\n    //     toast.goAway(1500)\r\n    //     window.location.href = fileUri.data\r\n    //   } catch (e) {\r\n    //     toast.goAway(1500)\r\n    //     this.vToasted('error', e)\r\n    //   }\r\n    // }\r\n    backToListReports() {\r\n      if (window.history.length > 1) {\r\n        this.$router.back()\r\n      } else {\r\n        this.$router.push({ name: 'MWListReports', params: { client_id: this.nav.clientId } })\r\n      }\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["InventoryHistoryListContent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"InventoryHistoryListContent.vue","sourceRoot":"src/components/page/reports","sourcesContent":["<template>\r\n  <b-card :header=\"caption\">\r\n    <template v-slot:header>\r\n      <p class=\"po-list-title my-0 pull-left align-middle map-list-title\">\r\n        <strong><i class=\"icon-book-open icons\"></i>\r\n        {{ caption }}</strong>\r\n      </p>\r\n      <div class=\"card-header-actions\">\r\n        <div class=\"btn-close\">\r\n          <b-button variant=\"secondary\" class=\"btn btn-block\" size=\"sm\" @click=\"backToListReports()\"> <i class=\"icon-arrow-left-circle icons\"></i> Back </b-button>\r\n        </div>\r\n      </div>\r\n    </template>\r\n    <b-table\r\n      :dark=\"dark\"\r\n      :hover=\"hover\"\r\n      striped\r\n      :small=\"small\"\r\n      outlined\r\n      responsive=\"sm\"\r\n      thead-class=\"thead-light text-nowrap\"\r\n      :items=\"getItems\"\r\n      :fields=\"captions\"\r\n      show-empty\r\n      class=\"overflow-auto\"\r\n    >\r\n      <template v-slot:empty>\r\n        <LoadingSpinner :isLoading=\"historyLoading\" v-if=\"historyLoading\"/>\r\n        <div class=\"align-middle d-flex justify-content-center align-items-center\" v-else>No History</div>\r\n      </template>\r\n      <template v-slot:head(date)=\"data\">\r\n        <span>\r\n          <i class=\"icon-clock icons rounded-circle\"></i> <span class=\"ml-2\">{{ data.label }}</span>\r\n        </span>\r\n      </template>\r\n      <template v-slot:cell(date)=\"data\">\r\n        <div>\r\n          {{ [ data.item.date_string, \"YYYY-MM-DD\" ] | moment('MM/DD/YYYY') }}\r\n        </div>\r\n      </template>\r\n      <template v-slot:cell(actions)=\"data\">\r\n        <button class=\"btn btn-primary btn-sm text-white\" @click=\"handleDownloadInventory(data.item.report_uri)\">\r\n          <i class=\"icons icon-cloud-download\"></i> Download\r\n        </button>\r\n      </template>\r\n    </b-table>\r\n    <nav\r\n      class=\"d-flex justify-content-center\"\r\n      v-if=\"listHistories.total > listHistories.page_size && listHistories.items.length > 0\"\r\n    >\r\n      <b-pagination\r\n              :total-rows=\"listHistories.total\"\r\n              :per-page=\"params.limit\"\r\n              v-model=\"params.page\"\r\n              prev-text=\"Prev\"\r\n              next-text=\"Next\"\r\n              hide-goto-end-buttons\r\n              @change=\"params.page = $event, paramsChange()\"\r\n              hide-ellipsis\r\n      />\r\n    </nav>\r\n  </b-card>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\nimport vToasted from '@/shared/notification'\r\nimport * as TYPE from '@/actionTypes.js'\r\nimport { GoogleShoppingGPIDStatus } from '@/constants/Map'\r\nimport _nav from '@/_nav'\r\n// import { MW_API } from '@/service/'\r\n// import * as utils from '@/shared/utils'\r\n// import * as URL from '@/service/_constant'\r\nimport LoadingSpinner from '@/components/common/LoadingSpinner'\r\n\r\nexport default {\r\n  name: 'c-table',\r\n  inheritAttrs: false,\r\n  mixins: [vToasted],\r\n  props: {\r\n    caption: {\r\n      type: String,\r\n      default: 'Table'\r\n    },\r\n    hover: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    striped: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    bordered: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    small: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    fixed: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    tableData: {\r\n      type: [Array, Function],\r\n      default: () => []\r\n    },\r\n    fields: {\r\n      type: [Array, Object],\r\n      default: () => []\r\n    },\r\n    dark: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    totalRows: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    handleChangePage: {\r\n      type: [Function]\r\n    },\r\n    historyLoading: {\r\n      type: Boolean\r\n    }\r\n  },\r\n  data: () => {\r\n    return {\r\n      GoogleShoppingMapStatus: GoogleShoppingGPIDStatus,\r\n      listUniqReportId: [],\r\n      nav: _nav,\r\n      mapId: null,\r\n      currentItem: {\r\n        currentMapItem: null,\r\n        currentDiscoveredGpidItem: null\r\n      },\r\n      selectedMaps: []\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getPermissions: `mw/${TYPE.GET_PERMISSIONS}`,\r\n      defaultParams: `mw/reports/${TYPE.GET_REPORT_MARKETPLACE_HISTORY_DEFAULT_PARAMS}`,\r\n      defaultAmazonMapParams: `mw/maps/${TYPE.GET_DEFAULT_AMAZON_MAP_PARAMS}`,\r\n      reportList: `mw/reports/${TYPE.GET_LIST_REPORTS}`,\r\n      gsReportList: `mw/reports/${TYPE.GET_VALID_GS_REPORTS}`,\r\n      listHistories: `mw/reports/${TYPE.GET_INVENTORY_HISTORY}`\r\n    }),\r\n    params: function() {\r\n      return { ...this.defaultParams } || {}\r\n    },\r\n    getItems: function() {\r\n      return this.listHistories.items\r\n    },\r\n    captions: function() {\r\n      const { fields } = this\r\n      return fields\r\n    }\r\n  },\r\n  components: {\r\n    LoadingSpinner\r\n  },\r\n  methods: {\r\n    paramsChange() {\r\n      this.$emit('paramsChange', this.params)\r\n    },\r\n    // TODO: update handleDownloadInventory() when API /history is available\r\n    handleDownloadInventory(uri) {\r\n      let toast = this.$toasted.show('Downloading...', {\r\n        theme: 'outline',\r\n        position: 'top-center',\r\n        iconPack: 'custom-class',\r\n        className: 'cpbo-toast-export',\r\n        icon: {\r\n          name: 'fa fa-spinner fa-spin fa-fw',\r\n          after: false\r\n        },\r\n        duration: null\r\n      })\r\n      try {\r\n        toast.goAway(1500)\r\n        window.location.href = uri\r\n      } catch (e) {\r\n        toast.goAway(1500)\r\n        this.vToasted('error', e)\r\n      }\r\n    },\r\n    // async handleDownloadInventory(report, source) {\r\n    //   let toast = this.$toasted.show('Downloading...', {\r\n    //     theme: 'outline',\r\n    //     position: 'top-center',\r\n    //     iconPack: 'custom-class',\r\n    //     className: 'cpbo-toast-export',\r\n    //     icon: {\r\n    //       name: 'fa fa-spinner fa-spin fa-fw',\r\n    //       after: false\r\n    //     },\r\n    //     duration: null\r\n    //   })\r\n    //   try {\r\n    //     const payload = {\r\n    //       report_id: report.report_id,\r\n    //       marketplace: report.marketplace,\r\n    //       date: report.date,\r\n    //       source\r\n    //     }\r\n    //     const fileUri = await MW_API.get(`${URL.GET_VIOLATION_MARKETPLACE_HISTORY()}?${utils.buildUrlQueryString(payload)}`)\r\n    //     toast.goAway(1500)\r\n    //     window.location.href = fileUri.data\r\n    //   } catch (e) {\r\n    //     toast.goAway(1500)\r\n    //     this.vToasted('error', e)\r\n    //   }\r\n    // }\r\n    backToListReports() {\r\n      if (window.history.length > 1) {\r\n        this.$router.back()\r\n      } else {\r\n        this.$router.push({ name: 'MWListReports', params: { client_id: this.nav.clientId } })\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  .map-list-title{\r\n    position: relative;\r\n    top: 4px;\r\n  }\r\n  .dropdown-action {\r\n    margin: 0 !important;\r\n  }\r\n  .max-width-300{\r\n    max-width: 300px;\r\n  }\r\n  .card-header-actions {\r\n    margin-right: 0 !important\r\n  }\r\n</style>\r\n"]}]}