{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\sellerEnforcements\\Histories.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\sellerEnforcements\\Histories.vue","mtime":1630397532711},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport _ from 'lodash'\r\nimport { mapActions, mapGetters } from 'vuex'\r\nimport * as TYPE from '@/actionTypes.js'\r\nimport { required, email } from 'vuelidate/lib/validators'\r\nimport vToasted from '@/shared/notification'\r\nimport _nav from '@/_nav'\r\n\r\nexport default {\r\n  name: 'MWSellerEnforcementHistories',\r\n  data() {\r\n    return {\r\n      paginationDoc: {\r\n        items: [],\r\n        page_count: 0,\r\n        page_current: 1,\r\n        page_size: 0,\r\n        total: 0\r\n      },\r\n      fields: [\r\n        {\r\n          key: 'date',\r\n          label: 'Date'\r\n        },\r\n        {\r\n          key: 'actor',\r\n          label: 'Actor'\r\n        },\r\n        {\r\n          key: 'message',\r\n          label: 'Message'\r\n        },\r\n        {\r\n          key: 'data',\r\n          label: 'Data'\r\n        }\r\n      ],\r\n      nav: _nav\r\n    }\r\n  },\r\n  mixins: [vToasted],\r\n  methods: {\r\n    ...mapActions({\r\n      fetchHistory: `mw/sellerEnforcements/${TYPE.FETCH_LIST_SELLER_ENFORCEMENT_HISTORY}`\r\n    }),\r\n    backToListSeller() {\r\n      this.$router.push({ name: 'MWListSellerEnforcements', params: { client_id: this.nav.clientId } })\r\n    },\r\n    async loadData() {\r\n      await this.fetchData()\r\n      const limit = this.paginationDoc.page_size ? this.paginationDoc.page_size : '10'\r\n      const page = this.paginationDoc.page_current ? this.paginationDoc.page_current : '1'\r\n      this.$router.replace({\r\n        query: {\r\n          limit: limit,\r\n          page: page\r\n        }\r\n      })\r\n    },\r\n    async fetchData() {\r\n      const limit = this.paginationDoc.page_size ? this.paginationDoc.page_size : '10'\r\n      const page = this.paginationDoc.page_current ? this.paginationDoc.page_current : '1'\r\n      const result = await this.fetchHistory({params: {\r\n        limit: limit,\r\n        page: page\r\n      },\r\n      id: this.$route.params.id})\r\n      this.$set(this.paginationDoc, 'items', result.items)\r\n      this.$set(this.paginationDoc, 'page_count', result.page_count)\r\n      this.$set(this.paginationDoc, 'page_current', result.page_current)\r\n      this.$set(this.paginationDoc, 'page_size', result.page_size)\r\n      this.$set(this.paginationDoc, 'total', result.total)\r\n    },\r\n    caption(text) {\r\n      return _.startCase(_.lowerCase(text))\r\n    },\r\n    generateId(index) {\r\n      return `row-${index}`\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getPermissions: `mw/${TYPE.GET_PERMISSIONS}`\r\n    })\r\n  },\r\n  async created() {\r\n    if (!this.$route.params.id) {\r\n      this.backToListSeller()\r\n      return\r\n    }\r\n    try {\r\n      if (this.$route.query.page) {\r\n        this.paginationDoc.page_current = this.$route.query.page\r\n      }\r\n      await this.loadData()\r\n    } catch (error) {\r\n      this.vToasted('error', error)\r\n      this.backToListSeller()\r\n    }\r\n  },\r\n  validations: {\r\n    contacts: {\r\n      $each: {\r\n        email: { required, email },\r\n        contact_name: { required },\r\n        job_title: { required },\r\n        action: { required }\r\n      }\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["Histories.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Histories.vue","sourceRoot":"src/components/page/sellerEnforcements","sourcesContent":["<template>\r\n  <div class=\"animated fadeIn\">\r\n    <b-card>\r\n      <!-- header -->\r\n      <template v-slot:header>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n          <span><strong>{{$route.meta.tableName}}</strong></span>\r\n          <div class=\"card-header-actions\">\r\n            <div class=\"btn-close\">\r\n              <b-button variant=\"secondary\" class=\"btn btn-block\" size=\"sm\" @click=\"backToListSeller()\"> <i class=\"icon-arrow-left-circle icons\"></i> Back </b-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </template>\r\n      <b-table\r\n              hover\r\n              striped\r\n              small\r\n              outlined\r\n              responsive=\"sm\"\r\n              thead-class=\"thead-light text-nowrap\"\r\n              :fields=\"fields\"\r\n              :items=\"paginationDoc.items\"\r\n              show-empty\r\n              class=\"overflow-auto\"\r\n              :class=\"'text-center'\"\r\n      >\r\n        <template v-slot:empty>\r\n          <div class=\"empty\">No Histories</div>\r\n        </template>\r\n        <template v-slot:head(date)=\"data\">\r\n          <span>\r\n            <i class=\"icon-clock icons rounded-circle\"></i> <span class=\"ml-2\">{{ data.label }}</span>\r\n          </span>\r\n        </template>\r\n        <template v-slot:cell(date)=\"data\">\r\n          <span>{{ data.item.date |  moment('MM/DD/YYYY hh:mm a') }}</span>\r\n        </template>\r\n        <template v-slot:cell(actor)=\"data\">\r\n          <span>{{ caption(data.item.user.name) }}</span>\r\n        </template>\r\n        <template v-slot:cell(message)=\"data\">\r\n          <span>{{ caption(data.item.action) }}</span>\r\n        </template>\r\n        <template v-slot:cell(data)=\"data\">\r\n          <span :id=generateId(data.index)>{...}</span>\r\n          <b-popover :target=generateId(data.index) triggers=\"hover\" placement=\"left\">\r\n            <div>\r\n              <pre>{{ JSON.stringify(data.item.data, null, 2) }}</pre>\r\n            </div>\r\n          </b-popover>\r\n        </template>\r\n      </b-table>\r\n      <nav\r\n              class=\"d-flex justify-content-center\"\r\n              v-if=\"paginationDoc.total > paginationDoc.page_size && paginationDoc.items.length > 0\"\r\n      >\r\n        <b-pagination\r\n                :total-rows=\"paginationDoc.total\"\r\n                :per-page=\"paginationDoc.page_size\"\r\n                v-model=\"paginationDoc.page_current\"\r\n                prev-text=\"Prev\"\r\n                next-text=\"Next\"\r\n                hide-goto-end-buttons\r\n                @change=\"\r\n          paginationDoc.page_current = $event\r\n          loadData()\r\n        \"\r\n                hide-ellipsis\r\n        />\r\n      </nav>\r\n    </b-card>\r\n  </div>\r\n</template>\r\n<script>\r\nimport _ from 'lodash'\r\nimport { mapActions, mapGetters } from 'vuex'\r\nimport * as TYPE from '@/actionTypes.js'\r\nimport { required, email } from 'vuelidate/lib/validators'\r\nimport vToasted from '@/shared/notification'\r\nimport _nav from '@/_nav'\r\n\r\nexport default {\r\n  name: 'MWSellerEnforcementHistories',\r\n  data() {\r\n    return {\r\n      paginationDoc: {\r\n        items: [],\r\n        page_count: 0,\r\n        page_current: 1,\r\n        page_size: 0,\r\n        total: 0\r\n      },\r\n      fields: [\r\n        {\r\n          key: 'date',\r\n          label: 'Date'\r\n        },\r\n        {\r\n          key: 'actor',\r\n          label: 'Actor'\r\n        },\r\n        {\r\n          key: 'message',\r\n          label: 'Message'\r\n        },\r\n        {\r\n          key: 'data',\r\n          label: 'Data'\r\n        }\r\n      ],\r\n      nav: _nav\r\n    }\r\n  },\r\n  mixins: [vToasted],\r\n  methods: {\r\n    ...mapActions({\r\n      fetchHistory: `mw/sellerEnforcements/${TYPE.FETCH_LIST_SELLER_ENFORCEMENT_HISTORY}`\r\n    }),\r\n    backToListSeller() {\r\n      this.$router.push({ name: 'MWListSellerEnforcements', params: { client_id: this.nav.clientId } })\r\n    },\r\n    async loadData() {\r\n      await this.fetchData()\r\n      const limit = this.paginationDoc.page_size ? this.paginationDoc.page_size : '10'\r\n      const page = this.paginationDoc.page_current ? this.paginationDoc.page_current : '1'\r\n      this.$router.replace({\r\n        query: {\r\n          limit: limit,\r\n          page: page\r\n        }\r\n      })\r\n    },\r\n    async fetchData() {\r\n      const limit = this.paginationDoc.page_size ? this.paginationDoc.page_size : '10'\r\n      const page = this.paginationDoc.page_current ? this.paginationDoc.page_current : '1'\r\n      const result = await this.fetchHistory({params: {\r\n        limit: limit,\r\n        page: page\r\n      },\r\n      id: this.$route.params.id})\r\n      this.$set(this.paginationDoc, 'items', result.items)\r\n      this.$set(this.paginationDoc, 'page_count', result.page_count)\r\n      this.$set(this.paginationDoc, 'page_current', result.page_current)\r\n      this.$set(this.paginationDoc, 'page_size', result.page_size)\r\n      this.$set(this.paginationDoc, 'total', result.total)\r\n    },\r\n    caption(text) {\r\n      return _.startCase(_.lowerCase(text))\r\n    },\r\n    generateId(index) {\r\n      return `row-${index}`\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getPermissions: `mw/${TYPE.GET_PERMISSIONS}`\r\n    })\r\n  },\r\n  async created() {\r\n    if (!this.$route.params.id) {\r\n      this.backToListSeller()\r\n      return\r\n    }\r\n    try {\r\n      if (this.$route.query.page) {\r\n        this.paginationDoc.page_current = this.$route.query.page\r\n      }\r\n      await this.loadData()\r\n    } catch (error) {\r\n      this.vToasted('error', error)\r\n      this.backToListSeller()\r\n    }\r\n  },\r\n  validations: {\r\n    contacts: {\r\n      $each: {\r\n        email: { required, email },\r\n        contact_name: { required },\r\n        job_title: { required },\r\n        action: { required }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n::v-deep .card-header-actions {\r\n  margin-right: 0;\r\n}\r\n::v-deep .form-control:focus {\r\n  box-shadow: none;\r\n  border-color: #e4e7ea;\r\n}\r\n::v-deep .tag-input {\r\n  border-top: 0px;\r\n  border-top-left-radius: 0px;\r\n  border-top-right-radius: 0px;\r\n}\r\n.textarea {\r\n  overflow-y: auto !important;\r\n}\r\n::v-deep .mw-vue-tags-custom .ti-input {\r\n  border-bottom-right-radius: 0px;\r\n  border-bottom-left-radius: 0px;\r\n  height: auto !important;\r\n}\r\n.component-label {\r\n  min-width: 55px;\r\n}\r\n.custom-datepicker-control {\r\n  &::v-deep {\r\n    button.btn {\r\n      width: 83px;\r\n    }\r\n    .vdp-datepicker {\r\n      width: calc(100% - 83px);\r\n      margin-right: 0 !important;\r\n    }\r\n  }\r\n}\r\n.custom-width {\r\n  width: 100%;\r\n  max-width: 70%;\r\n}\r\n.save-button {\r\n  margin-left: 22.5px;\r\n}\r\n</style>\r\n"]}]}