{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\sellerEnforcements\\Histories.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\sellerEnforcements\\Histories.vue","mtime":1626264502302},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1626076746842},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport _ from 'lodash'\r\nimport { mapActions, mapGetters } from 'vuex'\r\nimport * as TYPE from '@/actionTypes.js'\r\nimport { required, email } from 'vuelidate/lib/validators'\r\nimport vToasted from '@/shared/notification'\r\nimport _nav from '@/_nav'\r\n\r\nexport default {\r\n  name: 'MWSellerEnforcementHistories',\r\n  data() {\r\n    return {\r\n      paginationDoc: {\r\n        items: [],\r\n        page_count: 0,\r\n        page_current: 1,\r\n        page_size: 0,\r\n        total: 0\r\n      },\r\n      fields: [\r\n        {\r\n          key: 'date',\r\n          label: 'Date'\r\n        },\r\n        {\r\n          key: 'actor',\r\n          label: 'Actor'\r\n        },\r\n        {\r\n          key: 'message',\r\n          label: 'Message'\r\n        },\r\n        {\r\n          key: 'data',\r\n          label: 'Data'\r\n        }\r\n      ],\r\n      nav: _nav\r\n    }\r\n  },\r\n  mixins: [vToasted],\r\n  methods: {\r\n    ...mapActions({\r\n      fetchHistory: `mw/sellerEnforcements/${TYPE.FETCH_LIST_SELLER_ENFORCEMENT_HISTORY}`\r\n    }),\r\n    backToListSeller() {\r\n      this.$router.push({ name: 'MWListSellerEnforcements', params: { client_id: this.nav.clientId } })\r\n    },\r\n    async loadData() {\r\n      await this.fetchData()\r\n      const limit = this.paginationDoc.page_size ? this.paginationDoc.page_size : '10'\r\n      const page = this.paginationDoc.page_current ? this.paginationDoc.page_current : '1'\r\n      this.$router.replace({\r\n        query: {\r\n          limit: limit,\r\n          page: page\r\n        }\r\n      })\r\n    },\r\n    async fetchData() {\r\n      const limit = this.paginationDoc.page_size ? this.paginationDoc.page_size : '10'\r\n      const page = this.paginationDoc.page_current ? this.paginationDoc.page_current : '1'\r\n      const result = await this.fetchHistory({params: {\r\n        limit: limit,\r\n        page: page\r\n      },\r\n      id: this.$route.params.id})\r\n      this.$set(this.paginationDoc, 'items', result.items)\r\n      this.$set(this.paginationDoc, 'page_count', result.page_count)\r\n      this.$set(this.paginationDoc, 'page_current', result.page_current)\r\n      this.$set(this.paginationDoc, 'page_size', result.page_size)\r\n      this.$set(this.paginationDoc, 'total', result.total)\r\n    },\r\n    caption(text) {\r\n      return _.startCase(_.lowerCase(text))\r\n    },\r\n    generateId(index) {\r\n      return `row-${index}`\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getPermissions: `mw/${TYPE.GET_PERMISSIONS}`\r\n    })\r\n  },\r\n  async created() {\r\n    if (!this.$route.params.id) {\r\n      this.backToListSeller()\r\n      return\r\n    }\r\n    try {\r\n      if (this.$route.query.page) {\r\n        this.paginationDoc.page_current = this.$route.query.page\r\n      }\r\n      await this.loadData()\r\n    } catch (error) {\r\n      this.vToasted('error', error)\r\n      this.backToListSeller()\r\n    }\r\n  },\r\n  validations: {\r\n    contacts: {\r\n      $each: {\r\n        email: { required, email },\r\n        contact_name: { required },\r\n        job_title: { required },\r\n        action: { required }\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}