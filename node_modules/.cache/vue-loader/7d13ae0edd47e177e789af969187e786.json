{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\brands\\TableReportMapJob.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\brands\\TableReportMapJob.vue","mtime":1627611921460},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1626076746842},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters } from 'vuex'\r\nimport { GET_PERMISSIONS, GET_DEFAULT_PARAMS } from '@/actionTypes.js'\r\nimport moment from 'moment'\r\nimport _nav from '@/_nav'\r\nimport { MarketPlacesResult, DashboardFilterSourceType, AllSellerMode } from '@/constants/Report'\r\nimport { get } from 'lodash'\r\n\r\nexport default {\r\n  name: 'c-table',\r\n  inheritAttrs: false,\r\n  props: {\r\n    caption: {\r\n      type: String,\r\n      default: 'Table'\r\n    },\r\n    hover: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    striped: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    bordered: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    small: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    fixed: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    tableData: {\r\n      type: [Array, Function],\r\n      default: () => []\r\n    },\r\n    fields: {\r\n      type: [Array, Object],\r\n      default: () => []\r\n    },\r\n    dark: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    removeBrands: {\r\n      type: [Function]\r\n    },\r\n    handleEditBrand: {\r\n      type: [Function]\r\n    },\r\n    handleRun: {\r\n      type: [Function]\r\n    },\r\n    totalRows: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    dataSet: {\r\n      type: [Array, Object]\r\n    },\r\n    handleExportForJob: {\r\n      type: [Function]\r\n    },\r\n    currentPage: {\r\n      type: Number\r\n    }\r\n  },\r\n  data: () => {\r\n    return {\r\n      MarketPlacesResult,\r\n      DashboardFilterSourceType,\r\n      AllSellerMode,\r\n      dialog: {\r\n        remove: false,\r\n        run: false,\r\n        cancel: false,\r\n        ignore_cache: false,\r\n        force_run: false,\r\n        marketplace: ''\r\n      },\r\n      selected: {\r\n        remove: null,\r\n        run: null\r\n      },\r\n      nav: _nav\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({ getPermissions: `mw/${GET_PERMISSIONS}`, defaultParams: `mw/brands/${GET_DEFAULT_PARAMS}` }),\r\n    captions: function() {\r\n      const { getPermissions, fields } = this\r\n      if (getPermissions.module_enabled && getPermissions.permissions.braman && getPermissions.module_enabled && getPermissions.permissions.braexe) {\r\n        return fields\r\n      } else if (getPermissions.module_enabled && getPermissions.permissions.braman && getPermissions.module_enabled && !getPermissions.permissions.braexe) {\r\n        return fields.filter((f) => f.key !== 'status')\r\n      } else if (getPermissions.module_enabled && !getPermissions.permissions.braman && getPermissions.module_enabled && getPermissions.permissions.braexe) {\r\n        return fields.filter((f) => f.key !== 'actions')\r\n      } else {\r\n        return fields.filter((f) => f.key !== 'actions' && f.key !== 'status')\r\n      }\r\n    },\r\n    capitalize: function() {\r\n      return (str) => str[0].toUpperCase() + str.slice(1)\r\n    },\r\n    params: function() {\r\n      return { ...this.defaultParams } || {}\r\n    }\r\n  },\r\n  methods: {\r\n    handleRemoveItems(item) {\r\n      this.dialog.remove = true\r\n      this.selected.remove = {\r\n        id: item._id,\r\n        name: item.name_in_dashboard\r\n      }\r\n    },\r\n    paramsChange() {\r\n      this.$emit('paramsChange', this.params)\r\n    },\r\n    handleNavToHistoryMarketplacePage(brandId, marketplace, name) {\r\n      this.$router.push({\r\n        name: 'MWReportMarketplaceHistory',\r\n        params: { client_id: this.nav.clientId },\r\n        query: {\r\n          brand_id: brandId,\r\n          marketplace: marketplace,\r\n          name: name\r\n        }\r\n      })\r\n    },\r\n    sortChange(event) {\r\n      this.params.sort_by = event.sortBy\r\n      if (event.sortBy) {\r\n        this.params.sort_dir = event.sortDesc ? 'desc' : 'asc'\r\n      } else {\r\n        this.params.sort_dir = null\r\n      }\r\n      this.paramsChange()\r\n    },\r\n    showModalRunJob(item, marketplace) {\r\n      this.dialog.run = true\r\n      this.selected.run = item\r\n      this.dialog.marketplace = marketplace\r\n    },\r\n    handleRunJob(selectedItem) {\r\n      this.handleRun(selectedItem, { ignore_cache: this.dialog.ignore_cache, force_run: this.dialog.force_run, marketplace: this.dialog.marketplace })\r\n      this.dialog.ignore_cache = false\r\n      this.dialog.force_run = false\r\n    },\r\n    isExceeded(item, key) {\r\n      if (key.includes('amazon')) {\r\n        return !get(item, 'ready_for_amazon_scraping', true)\r\n      } else {\r\n        return !get(item, 'ready_for_google_scraping', true)\r\n      }\r\n    }\r\n  },\r\n  filters: {\r\n    formatTime: function(time) {\r\n      return moment(time).format()\r\n    }\r\n  },\r\n  mounted() {\r\n    this.params.page = this.$route.query.page ? this.$route.query.page : 1\r\n  }\r\n}\r\n",null]}