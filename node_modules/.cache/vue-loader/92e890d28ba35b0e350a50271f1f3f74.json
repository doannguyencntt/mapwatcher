{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\gs-maps\\ListMaps.vue?vue&type=template&id=31170928&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\gs-maps\\ListMaps.vue","mtime":1639404481180},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1620898436811},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"b-card\",\n    {\n      attrs: { header: _vm.caption },\n      scopedSlots: _vm._u([\n        {\n          key: \"header\",\n          fn: function() {\n            return [\n              _c(\n                \"p\",\n                {\n                  staticClass:\n                    \"po-list-title my-0 pull-left align-middle map-list-title\"\n                },\n                [\n                  _c(\"strong\", [\n                    _c(\"i\", { staticClass: \"icon-book-open icons\" }),\n                    _vm._v(\" \" + _vm._s(_vm.caption))\n                  ]),\n                  _vm.listMaps && _vm.listMaps.total\n                    ? _c(\"span\", [\n                        _vm._v(\n                          \"\\n        (Total:\\n        \" +\n                            _vm._s(\n                              new Number(\n                                _vm.listMaps.total || 0\n                              ).toLocaleString(\"en\")\n                            ) +\n                            \")\"\n                        )\n                      ])\n                    : _c(\"span\", [_vm._v(\" (Total: 0)\")])\n                ]\n              ),\n              _c(\n                \"div\",\n                { staticClass: \"pull-right\" },\n                [\n                  _c(\n                    \"b-button-group\",\n                    [\n                      _vm.getPermissions.module_enabled &&\n                      _vm.getPermissions.permissions.gsmapman\n                        ? _c(\n                            \"router-link\",\n                            {\n                              staticClass: \"btn btn-primary btn-sm\",\n                              attrs: {\n                                to: {\n                                  name: \"MWImportGSMaps\",\n                                  params: { client_id: _vm.nav.clientId }\n                                },\n                                tag: \"button\"\n                              }\n                            },\n                            [\n                              _c(\"i\", {\n                                staticClass: \"icons icon-cloud-upload\"\n                              }),\n                              _vm._v(\" Import\\n        \")\n                            ]\n                          )\n                        : _vm._e(),\n                      _c(\n                        \"b-button\",\n                        {\n                          attrs: { variant: \"primary\", size: \"sm\" },\n                          on: {\n                            click: function() {\n                              _vm.handleOpenModelDownload()\n                            }\n                          }\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"icons icon-cloud-download\" }),\n                          _vm._v(\" Export\\n          \"),\n                          _vm.$store.state.mw.maps.loadingDownload\n                            ? _c(\"b-spinner\", {\n                                staticClass: \"icon- btn-loader\",\n                                attrs: { label: \"Spinning\" }\n                              })\n                            : _vm._e()\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ]\n          },\n          proxy: true\n        }\n      ])\n    },\n    [\n      _c(\n        \"b-row\",\n        [\n          _c(\n            \"b-col\",\n            { staticClass: \"mb-4 col-1\" },\n            [\n              _vm.selectedMaps.length\n                ? _c(\n                    \"b-dropdown\",\n                    {\n                      staticClass: \"dropdown-action\",\n                      attrs: { text: \"Actions\" }\n                    },\n                    [\n                      _c(\n                        \"b-dropdown-item-button\",\n                        {\n                          attrs: {\n                            disabled:\n                              !_vm.getPermissions.module_enabled &&\n                              !_vm.getPermissions.permissions.gsmapman\n                          },\n                          on: {\n                            click: function($event) {\n                              return _vm.$bvModal.show(\n                                \"modal-confirm-remove-multi\"\n                              )\n                            }\n                          }\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"icon-close\" }),\n                          _vm._v(\" Remove\\n        \")\n                        ]\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e()\n            ],\n            1\n          ),\n          _c(\n            \"b-col\",\n            { staticClass: \"mb-4 col-9\" },\n            [\n              _c(\n                \"b-form-group\",\n                { staticClass: \"mb-0\" },\n                [\n                  _c(\n                    \"b-input-group\",\n                    { staticClass: \"search cancel-action align-items-center\" },\n                    [\n                      _c(\"label\", { staticClass: \"d-inline mb-0 pr-2\" }, [\n                        _vm._v(\"Report:\")\n                      ]),\n                      _c(\"b-form-select\", {\n                        attrs: { options: _vm.reportOptions },\n                        on: {\n                          change: function($event) {\n                            _vm.params.page = 1\n                            _vm.reportChange()\n                          }\n                        },\n                        scopedSlots: _vm._u([\n                          {\n                            key: \"first\",\n                            fn: function() {\n                              return [\n                                _c(\"option\", { domProps: { value: null } }, [\n                                  _vm._v(\"All Reports\")\n                                ])\n                              ]\n                            },\n                            proxy: true\n                          }\n                        ]),\n                        model: {\n                          value: _vm.params.report_id,\n                          callback: function($$v) {\n                            _vm.$set(_vm.params, \"report_id\", $$v)\n                          },\n                          expression: \"params.report_id\"\n                        }\n                      }),\n                      _c(\"label\", { staticClass: \"d-inline mb-0 pr-2 ml-5\" }, [\n                        _vm._v(\"Brand:\")\n                      ]),\n                      _c(\"b-form-select\", {\n                        attrs: { options: _vm.brandOptions },\n                        on: {\n                          change: function($event) {\n                            _vm.params.page = 1\n                            _vm.paramsChange()\n                          }\n                        },\n                        scopedSlots: _vm._u([\n                          {\n                            key: \"first\",\n                            fn: function() {\n                              return [\n                                _c(\"option\", { domProps: { value: null } }, [\n                                  _vm._v(\"All Brands\")\n                                ])\n                              ]\n                            },\n                            proxy: true\n                          }\n                        ]),\n                        model: {\n                          value: _vm.params.brand_name,\n                          callback: function($$v) {\n                            _vm.$set(_vm.params, \"brand_name\", $$v)\n                          },\n                          expression: \"params.brand_name\"\n                        }\n                      }),\n                      _c(\n                        \"label\",\n                        { staticClass: \"d-inline mb-0 pr-2 pl-2 ml-5\" },\n                        [_vm._v(\"Search:\")]\n                      ),\n                      _c(\"b-form-input\", {\n                        ref: \"inputSearch\",\n                        attrs: { placeholder: \"Enter keyword\" },\n                        on: {\n                          keyup: function($event) {\n                            if (\n                              !$event.type.indexOf(\"key\") &&\n                              _vm._k(\n                                $event.keyCode,\n                                \"enter\",\n                                13,\n                                $event.key,\n                                \"Enter\"\n                              )\n                            ) {\n                              return null\n                            }\n                            _vm.params.page = 1\n                            _vm.paramsChange()\n                          }\n                        },\n                        model: {\n                          value: _vm.params.search,\n                          callback: function($$v) {\n                            _vm.$set(_vm.params, \"search\", $$v)\n                          },\n                          expression: \"params.search\"\n                        }\n                      }),\n                      _c(\"i\", {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: _vm.params.search,\n                            expression: \"params.search\"\n                          }\n                        ],\n                        staticClass: \"icon-close cancel-icon\",\n                        on: {\n                          click: function($event) {\n                            _vm.params.page = 1\n                            _vm.params.search = \"\"\n                            _vm.paramsChange()\n                          }\n                        }\n                      }),\n                      _c(\n                        \"b-input-group-append\",\n                        [\n                          _c(\n                            \"b-button\",\n                            {\n                              on: {\n                                click: function($event) {\n                                  _vm.params.page = 1\n                                  _vm.paramsChange()\n                                }\n                              }\n                            },\n                            [_c(\"i\", { staticClass: \"icons icon-magnifier\" })]\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\"b-table\", {\n        staticClass: \"overflow-auto\",\n        attrs: {\n          dark: _vm.dark,\n          hover: _vm.hover,\n          striped: \"\",\n          small: _vm.small,\n          outlined: \"\",\n          responsive: \"sm\",\n          \"thead-class\": \"thead-light text-nowrap\",\n          items: _vm.getItems,\n          fields: _vm.captions,\n          \"show-empty\": \"\"\n        },\n        scopedSlots: _vm._u(\n          [\n            {\n              key: \"empty\",\n              fn: function() {\n                return [_c(\"div\", { staticClass: \"empty\" }, [_vm._v(\"No MAP\")])]\n              },\n              proxy: true\n            },\n            {\n              key: \"head(selected)\",\n              fn: function() {\n                return [\n                  _c(\"b-form-checkbox\", {\n                    model: {\n                      value: _vm.allSelected,\n                      callback: function($$v) {\n                        _vm.allSelected = $$v\n                      },\n                      expression: \"allSelected\"\n                    }\n                  })\n                ]\n              },\n              proxy: true\n            },\n            {\n              key: \"cell(selected)\",\n              fn: function(row) {\n                return [\n                  _c(\"b-form-checkbox\", {\n                    key: row.index,\n                    attrs: { value: row.item.id },\n                    model: {\n                      value: _vm.selectedMaps,\n                      callback: function($$v) {\n                        _vm.selectedMaps = $$v\n                      },\n                      expression: \"selectedMaps\"\n                    }\n                  })\n                ]\n              }\n            },\n            {\n              key: \"cell(price)\",\n              fn: function(data) {\n                return [\n                  _vm._v(\"$\" + _vm._s(_vm._f(\"formatNumber\")(data.item.price)))\n                ]\n              }\n            },\n            {\n              key: \"cell(gpid)\",\n              fn: function(ref) {\n                var item = ref.item\n                var value = ref.value\n                var index = ref.index\n                return [\n                  _c(\"div\", { staticClass: \"badge badge-info\" }, [\n                    _vm._v(_vm._s(item.gpid))\n                  ]),\n                  _c(\n                    \"div\",\n                    {\n                      staticClass:\n                        \"badge badge-secondary text-wrap font-weight-normal\"\n                    },\n                    [_vm._v(\"\\n        \" + _vm._s(item.title) + \"\\n      \")]\n                  ),\n                  item.gpid && item.asin && item.asin != \"\"\n                    ? _c(\n                        \"a\",\n                        {\n                          staticClass:\n                            \"ml-2 text-decoration-none text-wrap d-inline-block\",\n                          attrs: {\n                            target: \"_blank\",\n                            href: _vm.generateAmazonLink(item.asin)\n                          }\n                        },\n                        [\n                          _vm._v(\"A\"),\n                          _c(\"i\", {\n                            staticClass: \"fa fa-link\",\n                            attrs: { \"aria-hidden\": \"true\" }\n                          })\n                        ]\n                      )\n                    : _vm._e(),\n                  item.gpid && item.link\n                    ? _c(\n                        \"a\",\n                        {\n                          staticClass:\n                            \"ml-2 text-decoration-none text-wrap d-inline-block\",\n                          attrs: { target: \"_blank\", href: item.link }\n                        },\n                        [\n                          _vm._v(\"G\"),\n                          _c(\"i\", {\n                            staticClass: \"fa fa-link\",\n                            attrs: { \"aria-hidden\": \"true\" }\n                          })\n                        ]\n                      )\n                    : _vm._e(),\n                  item.gpid\n                    ? _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-secondary btn-sm ml-3\",\n                          attrs: { type: \"button\" },\n                          on: {\n                            click: function($event) {\n                              _vm.updateCurrentMapItem(item)\n                              _vm.checkIfNeedShowPopup()\n                            }\n                          }\n                        },\n                        [\n                          _c(\"i\", {\n                            staticClass: \"fa fa-ban\",\n                            attrs: { \"aria-hidden\": \"true\" }\n                          })\n                        ]\n                      )\n                    : _vm._e()\n                ]\n              }\n            },\n            {\n              key: \"cell(discovered_gpids)\",\n              fn: function(ref) {\n                var item = ref.item\n                var value = ref.value\n                var index = ref.index\n                return _vm._l(item.discovered_gpids, function(\n                  itemGpid,\n                  indexGpid\n                ) {\n                  return _c(\n                    \"ul\",\n                    {\n                      key: indexGpid,\n                      staticClass: \"mb-0 w-100 p-0\",\n                      staticStyle: {\n                        \"list-style-position\": \"inside\",\n                        \"list-style-type\": \"none\"\n                      }\n                    },\n                    [\n                      _c(\"li\", { staticClass: \"max-width-300\" }, [\n                        item.discovered_gpids.length > 1\n                          ? _c(\"div\", { staticClass: \"d-inline\" }, [\n                              _vm._v(\n                                \"\\n            \" +\n                                  _vm._s(indexGpid + 1) +\n                                  \".\\n          \"\n                              )\n                            ])\n                          : _vm._e(),\n                        !itemGpid.status ||\n                        itemGpid.status === _vm.GoogleShoppingMapStatus.NORMAL\n                          ? _c(\"div\", { staticClass: \"badge badge-info\" }, [\n                              _vm._v(\n                                \"\\n            \" +\n                                  _vm._s(itemGpid.gpid) +\n                                  \"\\n          \"\n                              )\n                            ])\n                          : _vm._e(),\n                        itemGpid.status === _vm.GoogleShoppingMapStatus.DENIED\n                          ? _c(\"div\", { staticClass: \"badge badge-info\" }, [\n                              _c(\"del\", [_vm._v(_vm._s(itemGpid.gpid))])\n                            ])\n                          : _vm._e(),\n                        _vm._v(\"\\n          on\\n          \"),\n                        _c(\"div\", { staticClass: \"badge badge-secondary\" }, [\n                          _vm._v(\n                            \"\\n            (\" +\n                              _vm._s(\n                                _vm._f(\"moment\")(itemGpid.date, \"MM/DD/YYYY\")\n                              ) +\n                              \")\\n          \"\n                          )\n                        ]),\n                        _c(\n                          \"div\",\n                          {\n                            staticClass:\n                              \"badge badge-secondary text-wrap font-weight-normal\"\n                          },\n                          [\n                            _vm._v(\n                              \"\\n            \" +\n                                _vm._s(itemGpid.title) +\n                                \"\\n          \"\n                            )\n                          ]\n                        ),\n                        item.asin && item.asin != \"\"\n                          ? _c(\n                              \"a\",\n                              {\n                                staticClass:\n                                  \"ml-2 text-decoration-none text-wrap d-inline-block\",\n                                attrs: {\n                                  target: \"_blank\",\n                                  href: _vm.generateAmazonLink(item.asin)\n                                }\n                              },\n                              [\n                                _vm._v(\"A\"),\n                                _c(\"i\", {\n                                  staticClass: \"fa fa-link\",\n                                  attrs: { \"aria-hidden\": \"true\" }\n                                })\n                              ]\n                            )\n                          : _vm._e(),\n                        itemGpid.gpid && itemGpid.link && itemGpid.link !== \"\"\n                          ? _c(\n                              \"a\",\n                              {\n                                staticClass:\n                                  \"ml-2 text-decoration-none text-wrap d-inline-block\",\n                                attrs: { target: \"_blank\", href: itemGpid.link }\n                              },\n                              [\n                                _vm._v(\"G\"),\n                                _c(\"i\", {\n                                  staticClass: \"fa fa-link\",\n                                  attrs: { \"aria-hidden\": \"true\" }\n                                })\n                              ]\n                            )\n                          : _vm._e(),\n                        _c(\n                          \"div\",\n                          {\n                            staticClass: \"btn-group ml-2\",\n                            attrs: {\n                              role: \"group\",\n                              \"aria-label\": \"Basic example\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"button\",\n                              {\n                                staticClass: \"btn btn-success btn-sm\",\n                                attrs: {\n                                  type: \"button\",\n                                  disabled: item.gpid == itemGpid.gpid\n                                },\n                                on: {\n                                  click: function($event) {\n                                    _vm.updateCurrentMapItem(item, itemGpid)\n                                    _vm.$bvModal.show(\n                                      \"modal-confirm-clone-gpid\"\n                                    )\n                                  }\n                                }\n                              },\n                              [\n                                _c(\"i\", {\n                                  staticClass: \"fa fa-check text-white\",\n                                  attrs: { \"aria-hidden\": \"true\" }\n                                })\n                              ]\n                            ),\n                            _c(\n                              \"button\",\n                              {\n                                staticClass: \"btn btn-secondary btn-sm\",\n                                attrs: { type: \"button\" },\n                                on: {\n                                  click: function($event) {\n                                    _vm.updateCurrentMapItem(item, itemGpid)\n                                    _vm.$bvModal.show(\n                                      \"modal-confirm-remove-discovered-gpid\"\n                                    )\n                                  }\n                                }\n                              },\n                              [\n                                _c(\"i\", {\n                                  staticClass: \"fa fa-ban\",\n                                  attrs: { \"aria-hidden\": \"true\" }\n                                })\n                              ]\n                            )\n                          ]\n                        )\n                      ])\n                    ]\n                  )\n                })\n              }\n            },\n            {\n              key: \"cell(active)\",\n              fn: function(row) {\n                return [\n                  _c(\"b-form-checkbox\", {\n                    attrs: { disabled: true },\n                    model: {\n                      value: row.item.active,\n                      callback: function($$v) {\n                        _vm.$set(row.item, \"active\", $$v)\n                      },\n                      expression: \"row.item.active\"\n                    }\n                  })\n                ]\n              }\n            },\n            {\n              key: \"cell(last_violation_checked)\",\n              fn: function(data) {\n                return [\n                  data.item.has_processed\n                    ? _c(\"div\", { staticClass: \"float-left\" }, [\n                        _vm._v(\n                          \"\\n        \" +\n                            _vm._s(\n                              _vm._f(\"moment\")(\n                                data.item.last_violation_checked,\n                                \"MM/DD/YYYY\"\n                              )\n                            ) +\n                            \"\\n      \"\n                        )\n                      ])\n                    : _c(\"div\", { staticClass: \"float-left\" }, [_vm._v(\"N/A\")]),\n                  data.item.has_processed\n                    ? _c(\"i\", {\n                        staticClass:\n                          \"\\n          icon-check\\n          icons\\n          rounded-circle\\n          bg-success\\n          custom_icon\\n          float-left\\n          ml-2\\n        \"\n                      })\n                    : _vm._e(),\n                  !data.item.has_processed\n                    ? _c(\"i\", {\n                        staticClass:\n                          \"\\n          icon-clock\\n          icons\\n          rounded-circle\\n          bg-secondary\\n          custom_icon\\n          float-left\\n          ml-2\\n        \"\n                      })\n                    : _vm._e()\n                ]\n              }\n            },\n            _vm.getPermissions.module_enabled &&\n            _vm.getPermissions.permissions.gsmapman\n              ? {\n                  key: \"cell(actions)\",\n                  fn: function(row) {\n                    return [\n                      _c(\n                        \"b-button-group\",\n                        { staticClass: \"d-flex flex-row\" },\n                        [\n                          _c(\n                            \"b-button\",\n                            {\n                              attrs: { variant: \"primary\", size: \"sm\" },\n                              on: {\n                                click: function($event) {\n                                  return _vm.handleEditMap(row.item.id)\n                                }\n                              }\n                            },\n                            [\n                              _c(\"i\", { staticClass: \"icon-note\" }),\n                              _vm._v(\" Edit\\n        \")\n                            ]\n                          ),\n                          _c(\n                            \"b-button\",\n                            {\n                              attrs: { variant: \"danger\", size: \"sm\" },\n                              on: {\n                                click: function($event) {\n                                  _vm.$bvModal.show(\"modal-confirm-delete-map\")\n                                  _vm.mapId = row.item.id\n                                }\n                              }\n                            },\n                            [\n                              _c(\"i\", { staticClass: \"icon-close\" }),\n                              _vm._v(\" Remove\\n        \")\n                            ]\n                          )\n                        ],\n                        1\n                      )\n                    ]\n                  }\n                }\n              : null,\n            {\n              key: \"view\",\n              fn: function() {\n                return [\n                  _c(\n                    \"b-button\",\n                    { staticClass: \"mr-1 my-1\", attrs: { variant: \"primary\" } },\n                    [\n                      _c(\"i\", { staticClass: \"fa fa-window-restore fa-lg\" }),\n                      _vm._v(\" Revision\\n      \")\n                    ]\n                  )\n                ]\n              },\n              proxy: true\n            }\n          ],\n          null,\n          true\n        )\n      }),\n      _c(\n        \"b-modal\",\n        {\n          attrs: {\n            title: \"Please confirm\",\n            centered: \"\",\n            id: \"modal-confirm-denied-gpid\",\n            \"ok-variant\": \"danger\"\n          },\n          on: {\n            ok: function($event) {\n              return _vm.handleDeniedDiscoveredGpid()\n            }\n          },\n          scopedSlots: _vm._u([\n            {\n              key: \"modal-footer\",\n              fn: function(ref) {\n                var ok = ref.ok\n                var cancel = ref.cancel\n                return [\n                  _c(\n                    \"b-button\",\n                    {\n                      attrs: { variant: \"warning\" },\n                      on: {\n                        click: function($event) {\n                          return ok()\n                        }\n                      }\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"icon-check\" }),\n                      _vm._v(\" Yes, I understand & confirm!\\n      \")\n                    ]\n                  ),\n                  _c(\n                    \"b-button\",\n                    {\n                      attrs: { variant: \"\" },\n                      on: {\n                        click: function($event) {\n                          return cancel()\n                        }\n                      }\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"icon-close\" }),\n                      _vm._v(\" No\\n      \")\n                    ]\n                  )\n                ]\n              }\n            }\n          ])\n        },\n        [_vm._v(\"\\n    Are you sure you want to deny this GPID?\\n    \")]\n      ),\n      _c(\n        \"b-modal\",\n        {\n          attrs: {\n            title: \"Please confirm\",\n            centered: \"\",\n            id: \"modal-confirm-remove-discovered-gpid\",\n            \"ok-variant\": \"danger\"\n          },\n          on: {\n            ok: function($event) {\n              return _vm.handleRemoveDiscoveredGpid()\n            }\n          },\n          scopedSlots: _vm._u([\n            {\n              key: \"modal-footer\",\n              fn: function(ref) {\n                var ok = ref.ok\n                var cancel = ref.cancel\n                return [\n                  _c(\n                    \"b-button\",\n                    {\n                      attrs: { variant: \"warning\" },\n                      on: {\n                        click: function($event) {\n                          return ok()\n                        }\n                      }\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"icon-check\" }),\n                      _vm._v(\" Yes, I understand & confirm!\\n      \")\n                    ]\n                  ),\n                  _c(\n                    \"b-button\",\n                    {\n                      attrs: { variant: \"\" },\n                      on: {\n                        click: function($event) {\n                          return cancel()\n                        }\n                      }\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"icon-close\" }),\n                      _vm._v(\" No\\n      \")\n                    ]\n                  )\n                ]\n              }\n            }\n          ])\n        },\n        [_vm._v(\"\\n    Are you sure you want to remove this GPID?\\n    \")]\n      ),\n      _c(\n        \"b-modal\",\n        {\n          attrs: {\n            title: \"Please confirm\",\n            centered: \"\",\n            id: \"modal-confirm-clone-gpid\",\n            \"ok-variant\": \"danger\"\n          },\n          on: {\n            ok: function($event) {\n              return _vm.handleAcceptDiscoveredGpid()\n            }\n          },\n          scopedSlots: _vm._u([\n            {\n              key: \"modal-footer\",\n              fn: function(ref) {\n                var ok = ref.ok\n                var cancel = ref.cancel\n                return [\n                  _c(\n                    \"b-button\",\n                    {\n                      attrs: { variant: \"warning\" },\n                      on: {\n                        click: function($event) {\n                          return ok()\n                        }\n                      }\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"icon-check\" }),\n                      _vm._v(\" Yes, I understand & confirm!\\n      \")\n                    ]\n                  ),\n                  _c(\n                    \"b-button\",\n                    {\n                      attrs: { variant: \"\" },\n                      on: {\n                        click: function($event) {\n                          return cancel()\n                        }\n                      }\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"icon-close\" }),\n                      _vm._v(\" No\\n      \")\n                    ]\n                  )\n                ]\n              }\n            }\n          ])\n        },\n        [\n          _vm._v(\n            \"\\n    Are you sure you want to confirm this GPID is 100% correct?\\n    \"\n          )\n        ]\n      ),\n      _c(\n        \"b-modal\",\n        {\n          attrs: {\n            title: \"Please confirm\",\n            centered: \"\",\n            id: \"modal-confirm-delete-map\",\n            \"ok-variant\": \"danger\"\n          },\n          on: {\n            ok: function($event) {\n              return _vm.handleremoveGSMap(_vm.mapId)\n            }\n          },\n          scopedSlots: _vm._u([\n            {\n              key: \"modal-footer\",\n              fn: function(ref) {\n                var ok = ref.ok\n                var cancel = ref.cancel\n                return [\n                  _c(\n                    \"b-button\",\n                    {\n                      attrs: { variant: \"warning\" },\n                      on: {\n                        click: function($event) {\n                          return ok()\n                        }\n                      }\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"icon-check\" }),\n                      _vm._v(\" Yes, I understand & confirm!\\n      \")\n                    ]\n                  ),\n                  _c(\n                    \"b-button\",\n                    {\n                      attrs: { variant: \"\" },\n                      on: {\n                        click: function($event) {\n                          return cancel()\n                        }\n                      }\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"icon-close\" }),\n                      _vm._v(\" No\\n      \")\n                    ]\n                  )\n                ]\n              }\n            }\n          ])\n        },\n        [_vm._v(\"\\n    Are you sure you want to remove this MAP?\\n    \")]\n      ),\n      _c(\n        \"b-modal\",\n        {\n          attrs: {\n            title: \"Please confirm\",\n            centered: \"\",\n            id: \"modal-confirm-remove-multi\"\n          },\n          on: { ok: _vm.handleRemoveMulti },\n          scopedSlots: _vm._u([\n            {\n              key: \"modal-footer\",\n              fn: function(ref) {\n                var ok = ref.ok\n                var cancel = ref.cancel\n                return [\n                  _c(\n                    \"b-button\",\n                    {\n                      attrs: { variant: \"danger\" },\n                      on: {\n                        click: function($event) {\n                          return ok()\n                        }\n                      }\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"icon-check\" }),\n                      _vm._v(\" Yes, I understand & confirm!\\n      \")\n                    ]\n                  ),\n                  _c(\n                    \"b-button\",\n                    {\n                      attrs: { variant: \"\" },\n                      on: {\n                        click: function($event) {\n                          return cancel()\n                        }\n                      }\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"icon-close\" }),\n                      _vm._v(\" No\\n      \")\n                    ]\n                  )\n                ]\n              }\n            }\n          ])\n        },\n        [\n          _vm._v(\n            \"\\n    Are you sure you want to remove all selected MAPs?\\n    \"\n          )\n        ]\n      ),\n      _vm.listMaps.total > _vm.listMaps.page_size &&\n      _vm.listMaps.items.length > 0\n        ? _c(\n            \"nav\",\n            { staticClass: \"d-flex justify-content-center\" },\n            [\n              _c(\"b-pagination\", {\n                attrs: {\n                  \"total-rows\": _vm.listMaps.total,\n                  \"per-page\": _vm.params.limit,\n                  \"prev-text\": \"Prev\",\n                  \"next-text\": \"Next\",\n                  \"hide-goto-end-buttons\": \"\",\n                  limit: \"10\",\n                  \"hide-ellipsis\": \"\"\n                },\n                on: {\n                  change: function($event) {\n                    ;(_vm.params.page = $event), _vm.paramsChange()\n                  }\n                },\n                model: {\n                  value: _vm.params.page,\n                  callback: function($$v) {\n                    _vm.$set(_vm.params, \"page\", $$v)\n                  },\n                  expression: \"params.page\"\n                }\n              })\n            ],\n            1\n          )\n        : _vm._e()\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}