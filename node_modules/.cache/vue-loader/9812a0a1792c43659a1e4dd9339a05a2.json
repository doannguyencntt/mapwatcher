{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\sellers\\ManageSeller.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\sellers\\ManageSeller.vue","mtime":1630397532733},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters, mapActions } from 'vuex'\r\nimport toastMixin from './../toastMixin'\r\nimport _nav from '@/_nav'\r\nimport { required, url } from 'vuelidate/lib/validators'\r\nimport PermissionsMixin from '@/components/common/PermissionsMixin'\r\nimport _ from 'lodash'\r\nimport * as TYPE from '@/actionTypes.js'\r\n\r\nexport default {\r\n  name: 'MWSIManageSeller',\r\n  mixins: [toastMixin, PermissionsMixin],\r\n  data: function () {\r\n    return {\r\n      nav: _nav,\r\n      sellerID: null,\r\n      sellerData: {\r\n        seller_name: null,\r\n        merchant_id: null,\r\n        status: null,\r\n        investigation: null,\r\n        source: null,\r\n        link: null\r\n      },\r\n      isGetFullData: false\r\n    }\r\n  },\r\n  validations: {\r\n    sellerData: {\r\n      seller_name: {\r\n        required\r\n      },\r\n      merchant_id: {\r\n        required\r\n      },\r\n      status: {\r\n        required\r\n      },\r\n      link: {\r\n        url\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getPermissions: `mw/${TYPE.GET_PERMISSIONS}`,\r\n      getOneSeller: `mw/sellers/getOneSeller`\r\n    })\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      fetchPermissions: `mw/${TYPE.FETCH_PERMISSIONS}`,\r\n      getOneSellerData: `mw/sellers/getOneSellerData`,\r\n      createSeller: `mw/sellers/createSeller`,\r\n      updateSeller: `mw/sellers/updateSeller`\r\n    }),\r\n    async submit () {\r\n      this.$v.$touch()\r\n      if (!this.$v.$anyError) {\r\n        let payload = _.cloneDeep(this.sellerData)\r\n        payload.clientID = this.$route.params.client_id\r\n        let res = await this.createSeller(payload)\r\n        if (res === 200 || res === 201) {\r\n          this.vueToast('Seller has been created successfully', 'success')\r\n          this.$router.push({ name: 'MWSISellerList', params: { client_id: this.nav.clientId } })\r\n        } else {\r\n          this.vueToast('Seller has not been created. Please retry or contact administrator.', 'error')\r\n        }\r\n      }\r\n    },\r\n    async update () {\r\n      this.$v.$touch()\r\n      if (!this.$v.$anyError) {\r\n        let payload = _.cloneDeep(this.sellerData)\r\n        payload.clientID = this.$route.params.client_id\r\n        payload.sellerID = this.$route.params.seller_id\r\n        let res = await this.updateSeller(payload)\r\n        if (res === 200 || res === 201) {\r\n          this.vueToast('Seller info has been updated successfully', 'success')\r\n          this.$router.push({ name: 'MWSISellerList', params: { client_id: this.nav.clientId } })\r\n        } else {\r\n          this.vueToast('Seller info has not been updated. Please retry or contact administrator.', 'error')\r\n        }\r\n      }\r\n    },\r\n    assignFormData (data) {\r\n      for (let k in this.sellerData) {\r\n        this.sellerData[k] = data[k]\r\n      }\r\n    }\r\n  },\r\n  async created() {\r\n    // await this.fetchPermissions()\r\n    this.sellerID = this.$route.params.seller_id\r\n    this.isGetFullData = true\r\n    let payload = {\r\n      sellerID: this.sellerID,\r\n      clientID: this.$route.params.client_id\r\n    }\r\n    // if no permission -> return Home page\r\n    if (this.getPermissions.permissions) {\r\n      this.gotoGlobalHomePageIfNoPermission(this.getPermissions.permissions)\r\n      if (this.sellerID && this.getPermissions.permissions) {\r\n        await this.getOneSellerData(payload)\r\n        this.assignFormData(this.getOneSeller)\r\n      }\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["ManageSeller.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ManageSeller.vue","sourceRoot":"src/components/page/sellers","sourcesContent":["<template>\r\n  <div class=\"animated fadeIn\" v-if=\"isGetFullData\">\r\n    <b-row>\r\n      <b-col lg=\"6\">\r\n        <transition name=\"fade\">\r\n          <b-card no-body>\r\n            <template v-slot:header>\r\n              <span class=\"align-middle\">\r\n                <span v-if=\"!sellerID\"><i class=\"icon-plus\"></i><strong> Add New Seller</strong></span>\r\n                <span v-else><strong><i class=\"icon-note\"></i> Edit Seller Info</strong></span>\r\n              </span>\r\n              <div class=\"pull-right\">\r\n                <router-link :to=\"{ name: 'MWSISellerList', params: { client_id: nav.clientId } }\" class=\"btn btn-secondary btn-sm\">\r\n                  <i class=\"icon-arrow-left-circle\"></i> Back\r\n                </router-link>\r\n              </div>\r\n            </template>\r\n            <b-card-body>\r\n              <b-row>\r\n                <b-col lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <label>Seller Name</label>\r\n                  <b-form-input\r\n                    :class=\"{'is-invalid': $v.sellerData.seller_name.$dirty && $v.sellerData.seller_name.$error}\"\r\n                    type=\"text\"\r\n                    v-model.trim=\"sellerData.seller_name\"\r\n                    placeholder=\"Enter your seller name\"\r\n                    class=\"mb-2\"\r\n                    @input=\"$v.sellerData.seller_name.$touch()\">\r\n                  </b-form-input>\r\n                  <div class=\"invalid-feedback\" v-if=\"$v.sellerData.seller_name.$dirty && !$v.sellerData.seller_name.required\">Seller name is required</div>\r\n                </b-col>\r\n                <b-col lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <label>Merchant ID</label>\r\n                  <b-form-input\r\n                    :class=\"{'is-invalid': $v.sellerData.merchant_id.$dirty && $v.sellerData.merchant_id.$error}\"\r\n                    type=\"text\"\r\n                    v-model.trim=\"sellerData.merchant_id\"\r\n                    placeholder=\"Enter your Merchant ID\"\r\n                    class=\"mb-2\"\r\n                    @input=\"$v.sellerData.merchant_id.$touch()\">\r\n                  </b-form-input>\r\n                  <div class=\"invalid-feedback\" v-if=\"$v.sellerData.merchant_id.$dirty && !$v.sellerData.merchant_id.required\">Merchant ID is required</div>\r\n                </b-col>\r\n                <b-col lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <label>Status</label>\r\n                  <b-form-select v-model=\"sellerData.status\" class=\"mb-2\">\r\n                    <option :value=\"null\" disabled>Please select an option</option>\r\n                    <option value=\"new\">New</option>\r\n                    <option value=\"complied\">Complied</option>\r\n                    <option value=\"complied_low_sku\">Complied Low SKU</option>\r\n                    <option value=\"gmr_complied\">GMR Complied</option>\r\n                    <option value=\"gmr_still_rogue\">GMR Still Rogue</option>\r\n                    <option value=\"still_rogue\">Still Rogue</option>\r\n                    <option value=\"relisted\">Relisted</option>\r\n                    <option value=\"gmr_relisted\">GMR Relisted</option>\r\n                  </b-form-select>\r\n                  <div class=\"invalid-feedback\" v-if=\"$v.sellerData.status.$dirty && !$v.sellerData.status.required\">Status is required</div>\r\n                </b-col>\r\n                <b-col lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <label>Investigation</label>\r\n                  <b-form-input\r\n                    type=\"text\"\r\n                    v-model.trim=\"sellerData.investigation\"\r\n                    placeholder=\"Enter your investigation\"\r\n                    class=\"mb-2\">\r\n                  </b-form-input>\r\n                  <!--<b-form-input\r\n                    :class=\"{'is-invalid': $v.sellerData.investigation.$dirty && $v.sellerData.investigation.$error}\"\r\n                    type=\"text\"\r\n                    v-model.trim=\"sellerData.investigation\"\r\n                    placeholder=\"Enter your investigation\"\r\n                    class=\"mb-2\"\r\n                    @input=\"$v.sellerData.investigation.$touch()\">\r\n                  </b-form-input>\r\n                  <div class=\"invalid-feedback\" v-if=\"$v.sellerData.investigation.$dirty && !$v.sellerData.investigation.required\">Investigation is required</div>-->\r\n                </b-col>\r\n                <b-col lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <label>Source</label>\r\n                  <b-form-input\r\n                    type=\"text\"\r\n                    v-model.trim=\"sellerData.source\"\r\n                    placeholder=\"Enter your source\"\r\n                    class=\"mb-2\">\r\n                  </b-form-input>\r\n                  <!--<b-form-input\r\n                    :class=\"{'is-invalid': $v.sellerData.source.$dirty && $v.sellerData.source.$error}\"\r\n                    type=\"text\"\r\n                    v-model.trim=\"sellerData.source\"\r\n                    placeholder=\"Enter your source\"\r\n                    class=\"mb-2\"\r\n                    @input=\"$v.sellerData.source.$touch()\">\r\n                  </b-form-input>\r\n                  <div class=\"invalid-feedback\" v-if=\"$v.sellerData.source.$dirty && !$v.sellerData.source.required\">Source is required</div>-->\r\n                </b-col>\r\n                <b-col lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <label>Link</label>\r\n                  <b-form-input\r\n                    :class=\"{'is-invalid': $v.sellerData.link.$dirty && $v.sellerData.link.$error}\"\r\n                    type=\"text\"\r\n                    v-model.trim=\"sellerData.link\"\r\n                    placeholder=\"Enter your link\"\r\n                    class=\"mb-2\"\r\n                    @input=\"$v.sellerData.link.$touch()\">\r\n                  </b-form-input>\r\n                  <div class=\"invalid-feedback\" v-if=\"$v.sellerData.link.$dirty && !$v.sellerData.link.url\">Link is invalid</div>\r\n                </b-col>\r\n              </b-row>\r\n            </b-card-body>\r\n            <template v-slot:footer>\r\n              <b-button v-if=\"!sellerID\" :disabled=\"$v.$anyError || $v.$invalid\" variant=\"primary\" size=\"sm\" @click=\"submit()\">\r\n                <i class=\"fa fa-dot-circle-o\"></i> Submit\r\n              </b-button>\r\n              <b-button v-if=\"sellerID\" :disabled=\"$v.$anyError || $v.$invalid\" variant=\"primary\" size=\"sm\" @click=\"update()\">\r\n                <i class=\"fa fa-dot-circle-o\"></i> Update\r\n              </b-button>\r\n            </template>\r\n          </b-card>\r\n        </transition>\r\n      </b-col>\r\n    </b-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex'\r\nimport toastMixin from './../toastMixin'\r\nimport _nav from '@/_nav'\r\nimport { required, url } from 'vuelidate/lib/validators'\r\nimport PermissionsMixin from '@/components/common/PermissionsMixin'\r\nimport _ from 'lodash'\r\nimport * as TYPE from '@/actionTypes.js'\r\n\r\nexport default {\r\n  name: 'MWSIManageSeller',\r\n  mixins: [toastMixin, PermissionsMixin],\r\n  data: function () {\r\n    return {\r\n      nav: _nav,\r\n      sellerID: null,\r\n      sellerData: {\r\n        seller_name: null,\r\n        merchant_id: null,\r\n        status: null,\r\n        investigation: null,\r\n        source: null,\r\n        link: null\r\n      },\r\n      isGetFullData: false\r\n    }\r\n  },\r\n  validations: {\r\n    sellerData: {\r\n      seller_name: {\r\n        required\r\n      },\r\n      merchant_id: {\r\n        required\r\n      },\r\n      status: {\r\n        required\r\n      },\r\n      link: {\r\n        url\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getPermissions: `mw/${TYPE.GET_PERMISSIONS}`,\r\n      getOneSeller: `mw/sellers/getOneSeller`\r\n    })\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      fetchPermissions: `mw/${TYPE.FETCH_PERMISSIONS}`,\r\n      getOneSellerData: `mw/sellers/getOneSellerData`,\r\n      createSeller: `mw/sellers/createSeller`,\r\n      updateSeller: `mw/sellers/updateSeller`\r\n    }),\r\n    async submit () {\r\n      this.$v.$touch()\r\n      if (!this.$v.$anyError) {\r\n        let payload = _.cloneDeep(this.sellerData)\r\n        payload.clientID = this.$route.params.client_id\r\n        let res = await this.createSeller(payload)\r\n        if (res === 200 || res === 201) {\r\n          this.vueToast('Seller has been created successfully', 'success')\r\n          this.$router.push({ name: 'MWSISellerList', params: { client_id: this.nav.clientId } })\r\n        } else {\r\n          this.vueToast('Seller has not been created. Please retry or contact administrator.', 'error')\r\n        }\r\n      }\r\n    },\r\n    async update () {\r\n      this.$v.$touch()\r\n      if (!this.$v.$anyError) {\r\n        let payload = _.cloneDeep(this.sellerData)\r\n        payload.clientID = this.$route.params.client_id\r\n        payload.sellerID = this.$route.params.seller_id\r\n        let res = await this.updateSeller(payload)\r\n        if (res === 200 || res === 201) {\r\n          this.vueToast('Seller info has been updated successfully', 'success')\r\n          this.$router.push({ name: 'MWSISellerList', params: { client_id: this.nav.clientId } })\r\n        } else {\r\n          this.vueToast('Seller info has not been updated. Please retry or contact administrator.', 'error')\r\n        }\r\n      }\r\n    },\r\n    assignFormData (data) {\r\n      for (let k in this.sellerData) {\r\n        this.sellerData[k] = data[k]\r\n      }\r\n    }\r\n  },\r\n  async created() {\r\n    // await this.fetchPermissions()\r\n    this.sellerID = this.$route.params.seller_id\r\n    this.isGetFullData = true\r\n    let payload = {\r\n      sellerID: this.sellerID,\r\n      clientID: this.$route.params.client_id\r\n    }\r\n    // if no permission -> return Home page\r\n    if (this.getPermissions.permissions) {\r\n      this.gotoGlobalHomePageIfNoPermission(this.getPermissions.permissions)\r\n      if (this.sellerID && this.getPermissions.permissions) {\r\n        await this.getOneSellerData(payload)\r\n        this.assignFormData(this.getOneSeller)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n</style>\r\n"]}]}