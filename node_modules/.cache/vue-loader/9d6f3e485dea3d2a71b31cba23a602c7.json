{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\reports\\InventoryScheduleScrapingModal.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\reports\\InventoryScheduleScrapingModal.vue","mtime":1639404481242},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\css-loader\\index.js","mtime":1620898435762},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1620898436811},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\postcss-loader\\src\\index.js","mtime":1620898436496},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\sass-loader\\lib\\loader.js","mtime":1626076778407},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.spinner-container {\r\n  height: 50px;\r\n\r\n  .thin-spinner {\r\n    border-width: 1px;\r\n  }\r\n}\r\n.w-110 {\r\n  width: 110px;\r\n}\r\n",{"version":3,"sources":["InventoryScheduleScrapingModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgZA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"InventoryScheduleScrapingModal.vue","sourceRoot":"src/components/page/reports","sourcesContent":["<template>\r\n  <b-modal\r\n    static\r\n    :visible=\"visible\"\r\n    title=\"Inventory investigation modal (scheduler)\"\r\n    centered\r\n    size=\"lg\"\r\n    @hidden=\"$emit('hidden')\"\r\n  >\r\n    <strong>Altra - Inventory investigation scheduler</strong>\r\n    <br />\r\n    <br />\r\n    Please schedule an inventory investigation for this marketplace.\r\n    <br />\r\n    <br />\r\n    Inventory investigation is more expensive than the other activities. It's about 40 credits per ASIN per seller.\r\n    <br />\r\n    <br />\r\n    <b-row>\r\n      <b-col md=\"7\" lg=\"7\" sm=\"13\">\r\n        <b-row>\r\n          <b-col md=\"6\" lg=\"6\" sm=\"6\"\r\n            ><b>From</b>\r\n            <b-button-group class=\"w-100\">\r\n              <b-button\r\n                class=\"col-md-2\"\r\n                id=\"btnDateFrom\"\r\n                size=\"sm\"\r\n                @click=\"pickFromDate()\"\r\n              >\r\n                <i class=\"icons icon-calendar\"></i>\r\n              </b-button>\r\n              <Datepicker\r\n                v-model=\"date.from\"\r\n                :disabled-dates=\"disabledDates\"\r\n                bootstrap-styling\r\n                format=\"MM/dd/yyyy\"\r\n                typeable\r\n                ref=\"dateFrom\"\r\n                @input.native=\"handleInputDateFrom\"\r\n                id=\"fromPicker\"\r\n                placeholder=\"Select a date\"\r\n                class=\"optimize-dp col-md-10 p-0\"\r\n              >\r\n              </Datepicker>\r\n            </b-button-group>\r\n             <div class=\"mw-error\" v-if=\"$v.date.from.$error && $v.date.from.$dirty && !$v.date.from.required\">\r\n              Date From is required.\r\n            </div>\r\n            <div class=\"mw-error\" v-else-if=\"$v.date.from.$error && $v.date.from.$dirty && !$v.date.from.minValue\">\r\n              Date From is invalid.\r\n            </div>\r\n          </b-col>\r\n          <b-col md=\"6\" lg=\"6\" sm=\"6\"\r\n            ><b>To</b>\r\n            <b-button-group class=\"w-100\">\r\n              <b-button\r\n                class=\"col-md-2\"\r\n                id=\"btnDateTo\"\r\n                size=\"sm\"\r\n                @click=\"pickToDate()\"\r\n              >\r\n                <i class=\"icons icon-calendar\"></i>\r\n              </b-button>\r\n              <Datepicker\r\n                v-model=\"date.to\"\r\n                :disabled-dates=\"disabledDates\"\r\n                bootstrap-styling\r\n                format=\"MM/dd/yyyy\"\r\n                typeable\r\n                ref=\"dateTo\"\r\n                @input.native=\"handleInputDateTo\"\r\n                id=\"toPicker\"\r\n                placeholder=\"Select a date\"\r\n                class=\"optimize-dp col-md-10 p-0\"\r\n              >\r\n              </Datepicker>\r\n            </b-button-group>\r\n            <div class=\"mw-error\" v-if=\"$v.date.to.$error && $v.date.to.$dirty && !$v.date.to.required\">\r\n              Date To is required.\r\n            </div>\r\n            <div class=\"mw-error\" v-else-if=\"$v.date.to.$error && $v.date.to.$dirty && !$v.date.to.minValue\">\r\n              Date To is invalid.\r\n            </div>\r\n          </b-col>\r\n        </b-row>\r\n        <b-row class=\"mt-4\">\r\n          <b-col md=\"6\" lg=\"6\" sm=\"6\">\r\n            <b-button\r\n              size=\"md\"\r\n              variant=\"danger\"\r\n              :disabled=\"$v.date.from.$error || $v.date.to.$error || isBusy\"\r\n              @click=\"handleRemoveSchedule(false)\"\r\n            >\r\n              <i class=\"icon-minus icons\"></i> Remove\r\n            </b-button>\r\n          </b-col>\r\n          <b-col md=\"6\" lg=\"6\" sm=\"6\" class=\"text-right\">\r\n            <b-button\r\n              size=\"md\"\r\n              variant=\"primary\"\r\n              :disabled=\"$v.date.from.$error || $v.date.to.$error || isBusy\"\r\n              @click=\"addSchedules()\"\r\n            >\r\n              <i class=\"icon-plus\"></i> Add\r\n            </b-button>\r\n          </b-col>\r\n        </b-row>\r\n      </b-col>\r\n      <b-col md=\"5\" lg=\"5\" sm=\"9\">\r\n        <b>Scheduled</b> ({{ listInventorySchedules.total || 0 }})\r\n        <b-table\r\n          bordered\r\n          striped\r\n          :hover=\"true\"\r\n          :busy=\"isBusy\"\r\n          outlined\r\n          responsive=\"sm\"\r\n          thead-class=\"thead-light text-nowrap\"\r\n          :items=\"getItems\"\r\n          :fields=\"fields\"\r\n          show-empty\r\n          class=\"overflow-auto\"\r\n        >\r\n          <template v-slot:empty>\r\n            <div class=\"empty\">No Inventory Scheduled</div>\r\n          </template>\r\n          <template v-slot:cell(date)=\"row\">{{\r\n            row.item.date_string | formatDate\r\n          }}</template>\r\n          <template v-slot:cell(action)=\"row\">\r\n            <b-button\r\n              size=\"md\"\r\n              variant=\"link\"\r\n              v-text=\"'<Remove>'\"\r\n              class=\"p-0\"\r\n              @click=\"handleRemoveSchedule(true, row.item)\"\r\n            ></b-button>\r\n          </template>\r\n          <template #table-busy>\r\n            <div\r\n              class=\"align-middle d-flex justify-content-center align-items-center spinner-container\"\r\n            >\r\n              <div class=\"spinner-border thin-spinner spinner-border-sm\"></div>\r\n              &nbsp;Loading...\r\n            </div>\r\n          </template>\r\n        </b-table>\r\n        <nav\r\n          class=\"d-flex justify-content-center\"\r\n          v-if=\"\r\n            listInventorySchedules.total > listInventorySchedules.page_size &&\r\n              listInventorySchedules.items.length > 0\r\n          \"\r\n        >\r\n          <b-pagination\r\n            :total-rows=\"listInventorySchedules.total\"\r\n            :per-page=\"params.limit\"\r\n            v-model=\"params.page\"\r\n            prev-text=\"Prev\"\r\n            next-text=\"Next\"\r\n            hide-goto-end-buttons\r\n            @change=\"\r\n              params.page = $event\r\n              fetchSchedule()\r\n            \"\r\n            hide-ellipsis\r\n          />\r\n        </nav>\r\n      </b-col>\r\n    </b-row>\r\n    <template v-slot:modal-footer=\"{ cancel }\">\r\n      <b-button size=\"md\" variant=\"secondary\" @click=\"cancel()\">\r\n        <i class=\"icon-close icons\"></i> Close\r\n      </b-button>\r\n    </template>\r\n    <b-modal title=\"Please confirm\" centered v-model=\"dialog.removeMany\" @ok=\"removeSchedules()\" ok-variant=\"danger\">\r\n      <span v-if=\"date.from.getTime() === date.to.getTime()\">Are you sure you want to remove the schedule on {{ date.from | formatDate }}</span>\r\n      <span v-else>Are you sure you want to unschedule the inventory investigation from {{ date.from | formatDate }} to {{ date.to | formatDate }}?</span>\r\n      <template v-slot:modal-footer=\"{ ok, cancel }\">\r\n        <b-button variant=\"warning\" @click=\"ok()\"> <i class=\"icon-check\"></i> Yes, I understand &amp; confirm! </b-button>\r\n        <b-button variant @click=\"cancel()\"> <i class=\"icon-close\"></i> No </b-button>\r\n      </template>\r\n    </b-modal>\r\n    <b-modal title=\"Please confirm\" centered v-model=\"dialog.removeOne\" @ok=\"removeOneSchedule()\" ok-variant=\"danger\">\r\n      Are you sure you want to remove the schedule on {{ selectedSchedule && selectedSchedule.date_string | formatDate }}?\r\n      <template v-slot:modal-footer=\"{ ok, cancel }\">\r\n        <b-button variant=\"warning\" @click=\"ok()\"> <i class=\"icon-check\"></i> Yes, I understand &amp; confirm! </b-button>\r\n        <b-button variant @click=\"cancel()\"> <i class=\"icon-close\"></i> No </b-button>\r\n      </template>\r\n    </b-modal>\r\n  </b-modal>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex'\r\nimport Datepicker from 'vuejs-datepicker'\r\nimport vToasted from '@/shared/notification'\r\nimport {\r\n  GET_INVENTORY_SCHEDULES,\r\n  FETCH_INVENTORY_SCHEDULES,\r\n  ADD_INVENTORY_SCHEDULES,\r\n  REMOVE_INVENTORY_SCHEDULES,\r\n  REMOVE_INVENTORY_SCHEDULE\r\n} from '@/actionTypes.js'\r\nimport moment from 'moment'\r\nimport { required } from 'vuelidate/lib/validators'\r\n\r\nexport default {\r\n  name: 'InventoryScheduleScrapingModal',\r\n  components: {\r\n    Datepicker\r\n  },\r\n  props: {\r\n    visible: {\r\n      type: Boolean,\r\n      require: true\r\n    },\r\n    info: {\r\n      type: Object\r\n    },\r\n    marketplace: {\r\n      type: String\r\n    }\r\n  },\r\n  mixins: [vToasted],\r\n  data: () => {\r\n    return {\r\n      date: {\r\n        from: null,\r\n        to: null\r\n      },\r\n      disabledDates: {\r\n        to: null\r\n      },\r\n      fields: [{\r\n        key: 'date',\r\n        label: 'Date'\r\n      }, {\r\n        key: 'action',\r\n        label: '',\r\n        thClass: 'w-110',\r\n        tdClass: 'text-center'\r\n      }],\r\n      isBusy: false,\r\n      params: {\r\n        limit: 4,\r\n        page: 1\r\n      },\r\n      dialog: {\r\n        removeMany: false,\r\n        removeOne: false\r\n      },\r\n      selectedSchedule: null\r\n    }\r\n  },\r\n  validations: {\r\n    date: {\r\n      from: {\r\n        required,\r\n        minValue(value) {\r\n          return value >= this.today\r\n        }\r\n      },\r\n      to: {\r\n        required,\r\n        minValue(value) {\r\n          return value >= this.today\r\n        }\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      listInventorySchedules: `mw/reports/${GET_INVENTORY_SCHEDULES}`\r\n    }),\r\n    today() {\r\n      const ESTDateString = new Date().toLocaleString('en-US', { timeZone: 'EST' })\r\n      const today = new Date(ESTDateString)\r\n      today.setHours(0, 0, 0, 0)\r\n      return today\r\n    },\r\n    getItems: function() {\r\n      return this.listInventorySchedules.items\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      fetchInventorySchedules: `mw/reports/${FETCH_INVENTORY_SCHEDULES}`,\r\n      addInventorySchedules: `mw/reports/${ADD_INVENTORY_SCHEDULES}`,\r\n      removeInventorySchedules: `mw/reports/${REMOVE_INVENTORY_SCHEDULES}`,\r\n      removeOneInventorySchedule: `mw/reports/${REMOVE_INVENTORY_SCHEDULE}`\r\n    }),\r\n    initInventoryDatePicker() {\r\n      this.date.from = this.today\r\n      this.date.to = this.today\r\n      this.disabledDates.to = this.today\r\n    },\r\n    pickFromDate() {\r\n      this.$refs.dateFrom.$el.querySelector('input').focus()\r\n      this.$refs.dateFrom.showCalendar()\r\n    },\r\n    pickToDate() {\r\n      this.$refs.dateTo.$el.querySelector('input').focus()\r\n      this.$refs.dateTo.showCalendar()\r\n    },\r\n    fetchSchedule() {\r\n      this.isBusy = true\r\n      this.fetchInventorySchedules({\r\n        report_id: this.info._id,\r\n        marketplace: this.marketplace,\r\n        limit: this.params.limit,\r\n        page: this.params.page\r\n      }).finally(() => {\r\n        this.isBusy = false\r\n      })\r\n    },\r\n    handleInputDateFrom(input) {\r\n      if (input.srcElement.value === '') {\r\n        this.date.from = null\r\n      }\r\n      this.$v.date.from.$touch()\r\n    },\r\n    handleInputDateTo(input) {\r\n      if (input.srcElement.value === '') {\r\n        this.date.to = null\r\n      }\r\n      this.$v.date.to.$touch()\r\n    },\r\n    addSchedules() {\r\n      this.isBusy = true\r\n      this.addInventorySchedules({\r\n        report_id: this.info._id,\r\n        marketplace: this.marketplace,\r\n        from: moment(this.date.from).format('YYYY-MM-DD'),\r\n        to: moment(this.date.to).format('YYYY-MM-DD')\r\n      }).then(() => {\r\n        this.vToasted('success', 'Add inventory schedules successfully.')\r\n        this.fetchSchedule()\r\n      }).catch((err) => {\r\n        this.isBusy = false\r\n        if (err.response.data.message.includes('Inventory schedule is existed')) {\r\n          this.vToasted('error', err.response.data.message)\r\n        } else {\r\n          this.vToasted('error', 'Could not add inventory schedules.')\r\n        }\r\n      })\r\n    },\r\n    handleRemoveSchedule(isRemoveOne, schedule) {\r\n      if (isRemoveOne) {\r\n        this.dialog.removeOne = true\r\n        this.selectedSchedule = schedule\r\n      } else {\r\n        this.dialog.removeMany = true\r\n      }\r\n    },\r\n    removeSchedules() {\r\n      this.isBusy = true\r\n      this.removeInventorySchedules({\r\n        report_id: this.info._id,\r\n        marketplace: this.marketplace,\r\n        from: moment(this.date.from).format('YYYY-MM-DD'),\r\n        to: moment(this.date.to).format('YYYY-MM-DD')\r\n      }).then(() => {\r\n        this.vToasted('success', 'Remove inventory schedules successfully.')\r\n        this.fetchSchedule()\r\n      }).catch(() => {\r\n        this.isBusy = false\r\n        this.vToasted('error', 'Could not remove inventory schedules.')\r\n      })\r\n    },\r\n    removeOneSchedule() {\r\n      this.isBusy = true\r\n      this.removeOneInventorySchedule({\r\n        report_id: this.info._id,\r\n        marketplace: this.marketplace,\r\n        id: this.selectedSchedule._id\r\n      }).then(() => {\r\n        this.selectedSchedule = null\r\n        this.vToasted('success', 'Remove inventory schedule successfully.')\r\n        this.fetchSchedule()\r\n      }).catch(() => {\r\n        this.isBusy = false\r\n        this.vToasted('error', 'Could not remove inventory schedule.')\r\n      })\r\n    }\r\n  },\r\n  created() {\r\n    this.initInventoryDatePicker()\r\n    this.info && this.fetchSchedule()\r\n  },\r\n  filters: {\r\n    formatDate(dateTime) {\r\n      return moment(dateTime).format('MM/DD/YYYY')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.spinner-container {\r\n  height: 50px;\r\n\r\n  .thin-spinner {\r\n    border-width: 1px;\r\n  }\r\n}\r\n.w-110 {\r\n  width: 110px;\r\n}\r\n</style>\r\n"]}]}