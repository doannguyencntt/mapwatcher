{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\sellers\\SellerList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\sellers\\SellerList.vue","mtime":1629363792694},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters, mapActions } from 'vuex'\r\nimport toastMixin from './../toastMixin'\r\nimport _nav from '@/_nav'\r\nimport PermissionsMixin from '@/components/common/PermissionsMixin'\r\nimport _ from 'lodash'\r\nimport * as TYPE from '@/actionTypes.js'\r\n\r\nexport default {\r\n  name: 'MWSISellerList',\r\n  mixins: [toastMixin, PermissionsMixin],\r\n  data: function () {\r\n    return {\r\n      nav: _nav,\r\n      currentPage: 1,\r\n      currentPageSize: 10,\r\n      idSellerDelete: null,\r\n      inputSearch: null,\r\n      tempCurrentPage: 1,\r\n      sortBy: 'seller_name',\r\n      sortDir: 1\r\n    }\r\n  },\r\n  filters: {\r\n    convertToStartCaseWithCustom: function(str) {\r\n      return _.startCase(str).replace('Sku', 'SKU').replace('Gmr', 'GMR')\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getSellers: `mw/sellers/getSellers`,\r\n      getSellerFields: `mw/sellers/getSellerFields`,\r\n      getPermissions: `mw/${TYPE.GET_PERMISSIONS}`\r\n    }),\r\n    managePermission: function() {\r\n      if (this.getPermissions && this.getPermissions.permissions) {\r\n        return this.getPermissions.permissions.siman\r\n      }\r\n      return false\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      fetchPermissions: `mw/${TYPE.FETCH_PERMISSIONS}`,\r\n      getSellersData: `mw/sellers/getSellersData`,\r\n      deleteSeller: `mw/sellers/deleteSeller`,\r\n      fetchUrlDownload: `mw/sellers/${TYPE.FETCH_SI_SELLER_URL_EXPORT}`\r\n    }),\r\n    goToPage: function(page) {\r\n      if (this.tempCurrentPage !== this.currentPage) {\r\n        this.currentPage = page\r\n        this.tempCurrentPage = this.currentPage\r\n        this.handleGetSellersData()\r\n      } else {\r\n        this.currentPage = page\r\n        this.tempCurrentPage = this.currentPage\r\n      }\r\n    },\r\n    async handleSearchSellerData(ctx) {\r\n      this.sortBy = ctx ? ctx.sortBy : this.sortBy\r\n      this.sortDir = ctx ? ctx.sortDesc === true ? -1 : 1 : this.sortDir\r\n      this.currentPage = 1\r\n      await this.handleGetSellersData()\r\n    },\r\n    async handleGetSellersData() {\r\n      let payload = {\r\n        s: this.inputSearch,\r\n        limit: this.currentPageSize,\r\n        page: this.currentPage,\r\n        sort_by: this.sortBy,\r\n        sort_dir: this.sortDir,\r\n        clientID: this.$route.params.client_id\r\n      }\r\n      await this.getSellersData(payload)\r\n    },\r\n    async handleOpenModelDownload() {\r\n      try {\r\n        const res = await this.fetchUrlDownload()\r\n        window.location.href = res.url\r\n      } catch (error) {\r\n        this.vToasted('error', error.message)\r\n      }\r\n    },\r\n    async handleDeleteSeller(e) {\r\n      let payload = {\r\n        clientID: this.$route.params.client_id,\r\n        sellerID: this.idSellerDelete\r\n      }\r\n      console.log('this ', this)\r\n      try {\r\n        let result = await this.deleteSeller(payload)\r\n        if (result === 200) {\r\n          this.currentPage = 1\r\n          this.vueToast('Seller has been deleted successfully.', 'success')\r\n          await this.handleGetSellersData()\r\n          this.$bvModal.hide('delete-confirm')\r\n        } else {\r\n          this.vueToast('Seller has not been deleted. Please retry or contact administrator.', 'error')\r\n        }\r\n      } catch (e) {\r\n        this.vueToast('Seller has not been deleted. Please retry or contact administrator.', 'error')\r\n      }\r\n    },\r\n    editSeller(item) {\r\n      this.$router.push({\r\n        name: 'MWSIEditSeller',\r\n        params: {\r\n          client_id: this.$route.params.client_id,\r\n          seller_id: item.id ? item.id : item._id\r\n        }\r\n      })\r\n    }\r\n  },\r\n  async created() {\r\n    // await this.fetchPermissions()\r\n    // if no permission -> return Home page\r\n    if (this.getPermissions.permissions) {\r\n      this.gotoGlobalHomePageIfNoPermission(this.getPermissions.permissions)\r\n      await this.handleGetSellersData()\r\n    }\r\n  }\r\n}\r\n",null]}