{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\sellerEnforcements\\Content.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\sellerEnforcements\\Content.vue","mtime":1626264502302},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1626076746842},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters, mapActions } from 'vuex'\r\nimport vToasted from '@/shared/notification'\r\nimport * as TYPE from '@/actionTypes.js'\r\nimport _ from 'lodash'\r\nimport _nav from '@/_nav'\r\nimport { SellerEnforcementFrequencyType } from '@/constants/SellerEnforcement'\r\nimport { VueEditor } from 'vue2-editor'\r\nimport vSelect from 'vue-select'\r\nimport moment from 'moment'\r\n\r\nexport default {\r\n  name: 'c-table',\r\n  inheritAttrs: false,\r\n  mixins: [vToasted],\r\n  props: {\r\n    caption: {\r\n      type: String,\r\n      default: 'Table'\r\n    },\r\n    hover: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    striped: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    bordered: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    small: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    fixed: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    tableData: {\r\n      type: [Array, Function],\r\n      default: () => []\r\n    },\r\n    fields: {\r\n      type: [Array, Object],\r\n      default: () => []\r\n    },\r\n    dark: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    totalRows: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    handleChangePage: {\r\n      type: [Function]\r\n    }\r\n  },\r\n  data: () => {\r\n    return {\r\n      sellerEnforcementFrequencyType: _.cloneDeep(SellerEnforcementFrequencyType),\r\n      dialog: {\r\n        remove: false,\r\n        letter: false,\r\n        switch: false,\r\n        update_sender: false,\r\n        send_mail: false\r\n      },\r\n      selected: {\r\n        remove: null,\r\n        switch: null,\r\n        item: null,\r\n        history_dates: [],\r\n        send_mail: {\r\n          total_contact: 0,\r\n          date: null\r\n        },\r\n        letter: {\r\n          body: {},\r\n          include_document: false\r\n        }\r\n      },\r\n      vueEditorCustomToolbar: [\r\n        [ { 'font': [] } ],\r\n        [{ 'header': [ false, 1, 2, 3, 4, 5, 6 ] }],\r\n        [{ 'size': ['small', false, 'large', 'huge'] }],\r\n        ['bold', 'italic', 'underline'],\r\n        [{'align': ''}, {'align': 'center'}, {'align': 'right'}, {'align': 'justify'}],\r\n        [{ 'header': 1 }, { 'header': 2 }],\r\n        [{'list': 'ordered'}, { 'list': 'bullet' }],\r\n        [{'script': 'sub'}, { 'script': 'super' }],\r\n        [{'indent': '-1'}, { 'indent': '+1' }],\r\n        [{ 'color': [] }, { 'background': [] }],\r\n        ['link', 'formula'],\r\n        [{ 'direction': 'rtl' }],\r\n        ['clean']\r\n      ],\r\n      defaultLetterContent: '<p>Dear {{ contact-name }},</p>' +\r\n              '<p>We would like to inform that you have violation .Total number of violation is {{ violation-count }}.</p>' +\r\n              '<p>Please see the attached file.</p>' +\r\n              '<p>Regards,</p>' +\r\n              '<p>Investigate Team</p>',\r\n      nav: _nav\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getPermissions: `mw/${TYPE.GET_PERMISSIONS}`,\r\n      defaultParams: `mw/sellerEnforcements/${TYPE.GET_DEFAULT_SELLER_ENFORCEMENT_PARAMS}`,\r\n      listSellers: `mw/sellerEnforcements/${TYPE.GET_LIST_SELLER_ENFORCEMENT}`\r\n    }),\r\n    params: function() {\r\n      console.log(this.defaultParams)\r\n      return { ...this.defaultParams } || {}\r\n    },\r\n    getItems: function() {\r\n      return this.listSellers.items\r\n    },\r\n    captions: function() {\r\n      const { fields } = this\r\n      return fields\r\n    }\r\n  },\r\n  components: {\r\n    VueEditor,\r\n    vSelect\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      removeSeller: `mw/sellerEnforcements/${TYPE.REMOVE_SELLER_ENFORCEMENT}`,\r\n      changeFrequency: `mw/sellerEnforcements/${TYPE.CHANGE_FREQUENCY_SELLER_ENFORCEMENT}`,\r\n      remoteEditSeller: `mw/sellerEnforcements/${TYPE.REMOTE_EDIT_SELLER_ENFORCEMENT}`,\r\n      manualSendMail: `mw/sellerEnforcements/${TYPE.REMOTE_MANUAL_SEND_MAIL_SELLER_ENFORCEMENT}`,\r\n      getHistoryDates: `mw/sellerEnforcements/${TYPE.GET_SELLER_ENFORCEMENT_HISTORY_DATES}`\r\n    }),\r\n    paramsChange() {\r\n      this.$emit('paramsChange', this.params)\r\n    },\r\n    handleEditItem(seller) {\r\n      this.$router.push({ name: 'MWEditSellerEnforcements', params: { client_id: this.nav.clientId, id: seller.id }, query: { seller: seller } })\r\n    },\r\n    async handleManualSendMail() {\r\n      const { id, contacts, name } = this.selected.item\r\n      if (_.isEmpty(contacts)) {\r\n        return this.vToasted('error', `${name} seller has empty contact list.`)\r\n      }\r\n      try {\r\n        await this.manualSendMail({ id: id, date: this.selected.send_mail.date })\r\n        this.vToasted('success', `${name} seller's violations on ${this.selected.send_mail.date} have been successfully sent to all contacts.`)\r\n        this.dialog.send_mail = false\r\n      } catch (e) {\r\n        this.vToasted('error', e.message)\r\n      }\r\n    },\r\n    handleRemoveItem(item) {\r\n      this.dialog.remove = true\r\n      this.selected.remove = {\r\n        id: item.id,\r\n        name: item.name\r\n      }\r\n    },\r\n    async handleUpdateLetter() {\r\n      try {\r\n        const { name } = this.selected.item\r\n        const { id } = this.selected.item\r\n        await this.remoteEditSeller({ params: { letter: this.selected.letter }, id })\r\n        this.vToasted('success', `Letter of seller ${name} has been updated successfully.`)\r\n        this.paramsChange()\r\n        this.dialog.letter = false\r\n      } catch (error) {\r\n        this.vToasted('error', error.data.message)\r\n      }\r\n    },\r\n    handleEditLetter(item) {\r\n      this.selected.item = item\r\n      if (!_.isEmpty(item.letter.body)) {\r\n        this.selected.letter.body = item.letter.body\r\n      } else {\r\n        this.selected.letter.body = this.defaultLetterContent\r\n      }\r\n      this.selected.letter.include_document = item.letter.include_document\r\n      this.dialog.letter = true\r\n    },\r\n    handleChangeFrequency(seller) {\r\n      this.dialog.switch = true\r\n      this.selected.switch = {\r\n        id: seller.id,\r\n        frequency: seller.frequency,\r\n        name: seller.name\r\n      }\r\n    },\r\n    handleGotoEditContacts(seller) {\r\n      const { id } = seller\r\n      this.$router.push({ name: 'MWSellerEnforcementContacts', params: { client_id: this.nav.clientId, id: id } })\r\n    },\r\n    async handleSendMail(seller) {\r\n      if (seller.sender_email) {\r\n        this.selected.item = seller\r\n        this.selected.send_mail.total_contact = _.size(seller.contacts)\r\n        this.dialog.send_mail = true\r\n        const histories = await this.getHistoryDates(seller.id)\r\n        this.selected.history_dates = _.map(histories, (history) => moment(history.date_string, 'YYYYMMDD').format('MM-DD-YYYY'))\r\n        if (!_.isEmpty(this.selected.history_dates)) {\r\n          this.selected.send_mail.date = this.selected.history_dates[0]\r\n        } else {\r\n          this.selected.send_mail.date = moment().format('MM-DD-YYYY')\r\n        }\r\n      } else {\r\n        this.dialog.update_sender = true\r\n      }\r\n    },\r\n    handleGotoHistories(seller) {\r\n      const { id } = seller\r\n      this.$router.push({ name: 'MWSellerEnforcementHistories', params: { client_id: this.nav.clientId, id: id } })\r\n    },\r\n    changeFrequencyMode() {\r\n      const { id, frequency, name } = this.selected.switch\r\n      const updatedFrequency = frequency === this.sellerEnforcementFrequencyType.MANUAL ? this.sellerEnforcementFrequencyType.DAILY : this.sellerEnforcementFrequencyType.MANUAL\r\n      this.changeFrequency({ id: id, frequency: updatedFrequency })\r\n      this.vToasted('success', `Seller ${name} has been change frequency mode to ${updatedFrequency} successfully`)\r\n    },\r\n    async removeItem() {\r\n      try {\r\n        const id = this.selected.remove.id\r\n        await this.removeSeller(id)\r\n        this.vToasted('success', `Seller ${this.selected.remove.name} has been deleted successfully`)\r\n      } catch (error) {\r\n        this.vToasted('error', error.data.message)\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}