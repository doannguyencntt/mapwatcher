{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\brands\\MarketplaceHistoryListContent.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\brands\\MarketplaceHistoryListContent.vue","mtime":1626264502255},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1626076746842},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters, mapActions } from 'vuex'\r\nimport vToasted from '@/shared/notification'\r\nimport * as TYPE from '@/actionTypes.js'\r\nimport { GoogleShoppingGPIDStatus } from '@/constants/Map'\r\nimport _ from 'lodash'\r\nimport _nav from '@/_nav'\r\nimport { MW_API } from '@/service/'\r\nimport * as utils from '@/shared/utils'\r\nimport * as URL from '@/service/_constant'\r\n\r\nexport default {\r\n  name: 'c-table',\r\n  inheritAttrs: false,\r\n  mixins: [vToasted],\r\n  props: {\r\n    caption: {\r\n      type: String,\r\n      default: 'Table'\r\n    },\r\n    hover: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    striped: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    bordered: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    small: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    fixed: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    tableData: {\r\n      type: [Array, Function],\r\n      default: () => []\r\n    },\r\n    fields: {\r\n      type: [Array, Object],\r\n      default: () => []\r\n    },\r\n    dark: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    totalRows: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    handleChangePage: {\r\n      type: [Function]\r\n    }\r\n  },\r\n  data: () => {\r\n    return {\r\n      GoogleShoppingMapStatus: GoogleShoppingGPIDStatus,\r\n      listUniqBrandId: [],\r\n      nav: _nav,\r\n      mapId: null,\r\n      currentItem: {\r\n        currentMapItem: null,\r\n        currentDiscoveredGpidItem: null\r\n      },\r\n      selectedMaps: []\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getPermissions: `mw/${TYPE.GET_PERMISSIONS}`,\r\n      defaultParams: `mw/brands/${TYPE.GET_REPORT_MARKETPLACE_HISTORY_DEFAULT_PARAMS}`,\r\n      defaultAmazonMapParams: `mw/maps/${TYPE.GET_DEFAULT_AMAZON_MAP_PARAMS}`,\r\n      brandList: `mw/brands/${TYPE.GET_LIST_BRANDS}`,\r\n      gsBrandList: `mw/brands/${TYPE.GET_VALID_GS_BRANDS}`,\r\n      listHistories: `mw/brands/${TYPE.GET_REPORT_MARKETPLACE_HISTORY}`\r\n    }),\r\n    params: function() {\r\n      console.log(this.defaultParams)\r\n      return { ...this.defaultParams } || {}\r\n    },\r\n    getItems: function() {\r\n      return this.listHistories.items\r\n    },\r\n    captions: function() {\r\n      const { fields } = this\r\n      return fields\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n    }),\r\n    upperText(text) {\r\n      console.log(text)\r\n      if (!_.isEmpty(text)) {\r\n        return _.upperCase(text)\r\n      }\r\n      return ''\r\n    },\r\n    paramsChange() {\r\n      this.$emit('paramsChange', this.params)\r\n    },\r\n    async handleDownloadViolations(report, source) {\r\n      let toast = this.$toasted.show('Downloading...', {\r\n        theme: 'outline',\r\n        position: 'top-center',\r\n        iconPack: 'custom-class',\r\n        className: 'cpbo-toast-export',\r\n        icon: {\r\n          name: 'fa fa-spinner fa-spin fa-fw',\r\n          after: false\r\n        },\r\n        duration: null\r\n      })\r\n      try {\r\n        const payload = {\r\n          brand_id: report.brand_id,\r\n          marketplace: report.marketplace,\r\n          date: report.date,\r\n          source\r\n        }\r\n        const fileUri = await MW_API.get(`${URL.GET_VIOLATION_MARKETPLACE_HISTORY()}?${utils.buildUrlQueryString(payload)}`)\r\n        toast.goAway(1500)\r\n        window.location.href = fileUri.data\r\n      } catch (e) {\r\n        toast.goAway(1500)\r\n        this.vToasted('error', e)\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}