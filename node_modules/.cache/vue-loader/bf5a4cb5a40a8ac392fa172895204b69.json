{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\sellerEnforcements\\Edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\sellerEnforcements\\Edit.vue","mtime":1630397532710},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { ClipboardUtil } from 'plat-sdk/dist/clipboard'\r\nimport _ from 'lodash'\r\nimport { mapActions, mapGetters } from 'vuex'\r\nimport * as TYPE from '@/actionTypes.js'\r\nimport { required, email } from 'vuelidate/lib/validators'\r\nimport vToasted from '@/shared/notification'\r\nimport { SellerEnforcementFrequencyType } from '@/constants/SellerEnforcement'\r\nimport { FormType } from '@/constants/Form.js'\r\n\r\nimport _nav from '@/_nav'\r\n\r\nexport default {\r\n  name: 'MWEditSellerEnforcements',\r\n  data() {\r\n    return {\r\n      sellerEnforcementFrequencyType: _.cloneDeep(\r\n        SellerEnforcementFrequencyType\r\n      ),\r\n      frequency_options: [\r\n        {\r\n          value: SellerEnforcementFrequencyType.MANUAL,\r\n          text: _.upperFirst(SellerEnforcementFrequencyType.MANUAL)\r\n        },\r\n        {\r\n          value: SellerEnforcementFrequencyType.DAILY,\r\n          text: _.upperFirst(SellerEnforcementFrequencyType.DAILY)\r\n        }\r\n      ],\r\n      dataSet: {\r\n        sender_email: '',\r\n        sender_name: '',\r\n        name: '',\r\n        frequency: SellerEnforcementFrequencyType.MANUAL\r\n      },\r\n      nav: _nav,\r\n      sellerId: '',\r\n      oldSellerName: '',\r\n      check: true\r\n    }\r\n  },\r\n  mixins: [vToasted],\r\n  methods: {\r\n    ...mapActions({\r\n      remoteEditSeller: `mw/sellerEnforcements/${TYPE.REMOTE_EDIT_SELLER_ENFORCEMENT}`\r\n    }),\r\n    async handleSave() {\r\n      this.$v.$touch()\r\n      if (this.$v.$error) {\r\n        console.log(this.$v.dataSet)\r\n        return\r\n      }\r\n      try {\r\n        const id = this.sellerId\r\n        const name = this.oldSellerName\r\n        await this.remoteEditSeller({ params: this.dataSet, id })\r\n        this.vToasted(\r\n          'success',\r\n          `Seller ${name} has been updated successfully.`\r\n        )\r\n      } catch (error) {\r\n        this.vToasted('error', error.data.message)\r\n      }\r\n    },\r\n    backToListSeller() {\r\n      this.$router.push({\r\n        name: 'MWListSellerEnforcements',\r\n        params: { client_id: this.nav.clientId }\r\n      })\r\n    },\r\n\r\n    handleCopyRecord() {\r\n      ClipboardUtil.copy(_.cloneDeep(this.dataSet), FormType.SELLER)\r\n      this.vToasted('success', 'Copied to clipboard.')\r\n      this.checkKey()\r\n    },\r\n\r\n    async handlePasteRecord() {\r\n      try {\r\n        const pasteData = await ClipboardUtil.paste(\r\n          _.cloneDeep(this.dataSet),\r\n          FormType.SELLER\r\n        )\r\n\r\n        if (!pasteData) {\r\n          this.vToasted('error', 'You need to enable copy to clipboard')\r\n          return\r\n        }\r\n\r\n        this.dataSet = {\r\n          ...pasteData\r\n        }\r\n\r\n        this.vToasted('success', 'Paste successfully')\r\n      } catch (e) {\r\n        this.vToasted('error', 'Your copy is not valid')\r\n      }\r\n    },\r\n    async checkKey() {\r\n      const result = await ClipboardUtil.check(FormType.SELLER)\r\n\r\n      this.check = !result\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getPermissions: `mw/${TYPE.GET_PERMISSIONS}`\r\n    }),\r\n    isSupport() {\r\n      return ClipboardUtil.isCopySupported()\r\n    }\r\n  },\r\n  async created() {\r\n    this.checkKey()\r\n    if (!this.$route.query.seller) {\r\n      this.backToListSeller()\r\n      return\r\n    }\r\n    const {\r\n      id,\r\n      sender_email: senderEmail,\r\n      sender_name: senderName,\r\n      name,\r\n      frequency\r\n    } = this.$route.query.seller\r\n    if (!id || !name || !frequency) {\r\n      this.backToListSeller()\r\n      return\r\n    }\r\n    this.dataSet.sender_email = senderEmail\r\n    this.dataSet.sender_name = senderName\r\n    this.dataSet.name = name\r\n    this.dataSet.frequency = frequency\r\n    this.sellerId = id\r\n    this.oldSellerName = name\r\n\r\n    window.addEventListener('focus', this.checkKey)\r\n  },\r\n  destroyed() {\r\n    window.removeEventListener('focus', this.checkKey)\r\n  },\r\n  validations: {\r\n    dataSet: {\r\n      sender_email: {\r\n        email\r\n      },\r\n      sender_name: {},\r\n      name: {\r\n        required\r\n      }\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["Edit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"Edit.vue","sourceRoot":"src/components/page/sellerEnforcements","sourcesContent":["<template>\r\n  <div class=\"animated fadeIn\">\r\n    <b-card>\r\n      <!-- header -->\r\n      <template v-slot:header>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <p class=\"mx-0 my-0\">\r\n              <strong>{{ $route.meta.tableName }}</strong>\r\n            </p>\r\n            <div class=\"card-header-actions ml-2\">\r\n              <b-button\r\n                size=\"sm\"\r\n                class=\"mr-1\"\r\n                variant=\"success\"\r\n                :disabled=\"check\"\r\n                @click=\"handlePasteRecord\"\r\n              >\r\n                Paste\r\n              </b-button>\r\n              <b-button\r\n                size=\"sm\"\r\n                class=\"ml-2\"\r\n                :disabled=\"!isCopySupport\"\r\n                variant=\"secondary\"\r\n                @click=\"handleCopyRecord\"\r\n              >\r\n                Copy\r\n              </b-button>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-header-actions\">\r\n            <div class=\"btn-close\">\r\n              <b-button\r\n                variant=\"secondary\"\r\n                class=\"btn btn-block\"\r\n                size=\"sm\"\r\n                @click=\"backToListSeller()\"\r\n              >\r\n                <i class=\"icon-arrow-left-circle icons\"></i> Back\r\n              </b-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </template>\r\n      <!-- body -->\r\n      <b-form>\r\n        <b-row>\r\n          <b-col>\r\n            <label>\r\n              <b>Sender Email</b>\r\n            </label>\r\n            <b-form-input\r\n              type=\"text\"\r\n              @blur=\"$v.dataSet.sender_email.$touch()\"\r\n              :class=\"{\r\n                'is-invalid':\r\n                  $v.dataSet.sender_email.$dirty &&\r\n                  $v.dataSet.sender_email.$error\r\n              }\"\r\n              v-model.trim=\"dataSet.sender_email\"\r\n            ></b-form-input>\r\n            <div\r\n              class=\"mw-error\"\r\n              v-if=\"\r\n                $v.dataSet.sender_email.$invalid &&\r\n                $v.dataSet.sender_email.$dirty\r\n              \"\r\n            >\r\n              Sender Email is invalid.\r\n            </div>\r\n          </b-col>\r\n          <b-col>\r\n            <label>\r\n              <b>Sender Name</b>\r\n            </label>\r\n            <b-form-input\r\n              type=\"text\"\r\n              @input=\"$v.dataSet.sender_name.$touch()\"\r\n              :class=\"{\r\n                'is-invalid':\r\n                  $v.dataSet.sender_name.$dirty && $v.dataSet.sender_name.$error\r\n              }\"\r\n              v-model.trim=\"dataSet.sender_name\"\r\n              class=\"custom-width\"\r\n            ></b-form-input>\r\n            <!-- <div class=\"mw-error\" v-if=\"!$v.dataSet.sender_name.required && $v.dataSet.sender_name.$dirty\">Sender Name is required.</div> -->\r\n          </b-col>\r\n        </b-row>\r\n        <b-row class=\"sender-message\">\r\n          <b-col>\r\n            <p class=\"mw-error\">\r\n              You can setup these fields later but they are required to delivery\r\n              seller enforcement email.\r\n            </p>\r\n            <p class=\"mw-error\">\r\n              Please check with administrator to make sure your sender is\r\n              whitelisted.\r\n            </p>\r\n          </b-col>\r\n        </b-row>\r\n        <b-row class=\"mt-3\">\r\n          <b-col>\r\n            <label>\r\n              <b>Seller Name</b>\r\n            </label>\r\n            <b-form-input\r\n              type=\"text\"\r\n              @input=\"$v.dataSet.name.$touch()\"\r\n              :class=\"{\r\n                'is-invalid': $v.dataSet.name.$dirty && $v.dataSet.name.$error\r\n              }\"\r\n              v-model.trim=\"dataSet.name\"\r\n            ></b-form-input>\r\n            <div\r\n              class=\"mw-error\"\r\n              v-if=\"!$v.dataSet.name.required && $v.dataSet.name.$dirty\"\r\n            >\r\n              Seller Name is required.\r\n            </div>\r\n          </b-col>\r\n          <b-col>\r\n            <label>\r\n              <b>Frequency</b>\r\n            </label>\r\n            <br />\r\n            <b-form-select\r\n              class=\"custom-width\"\r\n              v-model=\"dataSet.frequency\"\r\n              :options=\"frequency_options\"\r\n              >Frequency</b-form-select\r\n            >\r\n          </b-col>\r\n        </b-row>\r\n      </b-form>\r\n      <!-- footer -->\r\n      <template v-slot:footer>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n          <div class=\"footer__btns\">\r\n            <b-button\r\n              v-if=\"\r\n                getPermissions.module_enabled &&\r\n                getPermissions.permissions.seedit\r\n              \"\r\n              size=\"sm\"\r\n              class=\"mr-1\"\r\n              variant=\"primary\"\r\n              @click=\"handleSave\"\r\n            >\r\n              <i class=\"fa fa-dot-circle-o\"></i> Submit\r\n            </b-button>\r\n            <b-button size=\"sm\" class=\"ml-2\" @click=\"backToListSeller()\">\r\n              <i class=\"icon-arrow-left-circle\"></i> Cancel\r\n            </b-button>\r\n          </div>\r\n        </div>\r\n      </template>\r\n    </b-card>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { ClipboardUtil } from 'plat-sdk/dist/clipboard'\r\nimport _ from 'lodash'\r\nimport { mapActions, mapGetters } from 'vuex'\r\nimport * as TYPE from '@/actionTypes.js'\r\nimport { required, email } from 'vuelidate/lib/validators'\r\nimport vToasted from '@/shared/notification'\r\nimport { SellerEnforcementFrequencyType } from '@/constants/SellerEnforcement'\r\nimport { FormType } from '@/constants/Form.js'\r\n\r\nimport _nav from '@/_nav'\r\n\r\nexport default {\r\n  name: 'MWEditSellerEnforcements',\r\n  data() {\r\n    return {\r\n      sellerEnforcementFrequencyType: _.cloneDeep(\r\n        SellerEnforcementFrequencyType\r\n      ),\r\n      frequency_options: [\r\n        {\r\n          value: SellerEnforcementFrequencyType.MANUAL,\r\n          text: _.upperFirst(SellerEnforcementFrequencyType.MANUAL)\r\n        },\r\n        {\r\n          value: SellerEnforcementFrequencyType.DAILY,\r\n          text: _.upperFirst(SellerEnforcementFrequencyType.DAILY)\r\n        }\r\n      ],\r\n      dataSet: {\r\n        sender_email: '',\r\n        sender_name: '',\r\n        name: '',\r\n        frequency: SellerEnforcementFrequencyType.MANUAL\r\n      },\r\n      nav: _nav,\r\n      sellerId: '',\r\n      oldSellerName: '',\r\n      check: true\r\n    }\r\n  },\r\n  mixins: [vToasted],\r\n  methods: {\r\n    ...mapActions({\r\n      remoteEditSeller: `mw/sellerEnforcements/${TYPE.REMOTE_EDIT_SELLER_ENFORCEMENT}`\r\n    }),\r\n    async handleSave() {\r\n      this.$v.$touch()\r\n      if (this.$v.$error) {\r\n        console.log(this.$v.dataSet)\r\n        return\r\n      }\r\n      try {\r\n        const id = this.sellerId\r\n        const name = this.oldSellerName\r\n        await this.remoteEditSeller({ params: this.dataSet, id })\r\n        this.vToasted(\r\n          'success',\r\n          `Seller ${name} has been updated successfully.`\r\n        )\r\n      } catch (error) {\r\n        this.vToasted('error', error.data.message)\r\n      }\r\n    },\r\n    backToListSeller() {\r\n      this.$router.push({\r\n        name: 'MWListSellerEnforcements',\r\n        params: { client_id: this.nav.clientId }\r\n      })\r\n    },\r\n\r\n    handleCopyRecord() {\r\n      ClipboardUtil.copy(_.cloneDeep(this.dataSet), FormType.SELLER)\r\n      this.vToasted('success', 'Copied to clipboard.')\r\n      this.checkKey()\r\n    },\r\n\r\n    async handlePasteRecord() {\r\n      try {\r\n        const pasteData = await ClipboardUtil.paste(\r\n          _.cloneDeep(this.dataSet),\r\n          FormType.SELLER\r\n        )\r\n\r\n        if (!pasteData) {\r\n          this.vToasted('error', 'You need to enable copy to clipboard')\r\n          return\r\n        }\r\n\r\n        this.dataSet = {\r\n          ...pasteData\r\n        }\r\n\r\n        this.vToasted('success', 'Paste successfully')\r\n      } catch (e) {\r\n        this.vToasted('error', 'Your copy is not valid')\r\n      }\r\n    },\r\n    async checkKey() {\r\n      const result = await ClipboardUtil.check(FormType.SELLER)\r\n\r\n      this.check = !result\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getPermissions: `mw/${TYPE.GET_PERMISSIONS}`\r\n    }),\r\n    isSupport() {\r\n      return ClipboardUtil.isCopySupported()\r\n    }\r\n  },\r\n  async created() {\r\n    this.checkKey()\r\n    if (!this.$route.query.seller) {\r\n      this.backToListSeller()\r\n      return\r\n    }\r\n    const {\r\n      id,\r\n      sender_email: senderEmail,\r\n      sender_name: senderName,\r\n      name,\r\n      frequency\r\n    } = this.$route.query.seller\r\n    if (!id || !name || !frequency) {\r\n      this.backToListSeller()\r\n      return\r\n    }\r\n    this.dataSet.sender_email = senderEmail\r\n    this.dataSet.sender_name = senderName\r\n    this.dataSet.name = name\r\n    this.dataSet.frequency = frequency\r\n    this.sellerId = id\r\n    this.oldSellerName = name\r\n\r\n    window.addEventListener('focus', this.checkKey)\r\n  },\r\n  destroyed() {\r\n    window.removeEventListener('focus', this.checkKey)\r\n  },\r\n  validations: {\r\n    dataSet: {\r\n      sender_email: {\r\n        email\r\n      },\r\n      sender_name: {},\r\n      name: {\r\n        required\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n::v-deep .card-header-actions {\r\n  margin-right: 0;\r\n}\r\n::v-deep .form-control:focus {\r\n  box-shadow: none;\r\n  border-color: #e4e7ea;\r\n}\r\n::v-deep .tag-input {\r\n  border-top: 0px;\r\n  border-top-left-radius: 0px;\r\n  border-top-right-radius: 0px;\r\n}\r\n.textarea {\r\n  overflow-y: auto !important;\r\n}\r\n::v-deep .mw-vue-tags-custom .ti-input {\r\n  border-bottom-right-radius: 0px;\r\n  border-bottom-left-radius: 0px;\r\n  height: auto !important;\r\n}\r\n.component-label {\r\n  min-width: 55px;\r\n}\r\n.custom-datepicker-control {\r\n  &::v-deep {\r\n    button.btn {\r\n      width: 83px;\r\n    }\r\n    .vdp-datepicker {\r\n      width: calc(100% - 83px);\r\n      margin-right: 0 !important;\r\n    }\r\n  }\r\n}\r\n.custom-width {\r\n  width: 100%;\r\n  max-width: 70%;\r\n}\r\n.sender-message {\r\n  margin-top: 5px;\r\n  p {\r\n    margin-bottom: 0;\r\n  }\r\n}\r\n</style>\r\n"]}]}