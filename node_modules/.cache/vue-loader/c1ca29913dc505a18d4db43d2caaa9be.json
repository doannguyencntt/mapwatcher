{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\dashboard\\Header.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\dashboard\\Header.vue","mtime":1626264502271},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1626076746842},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { coverValueToLabelForBrand } from './configOptions'\r\nimport { mapGetters } from 'vuex'\r\nimport * as TYPE from '@/actionTypes.js'\r\nimport { ReportMarketplaces, DashboardFilterSourceType, AllSellerMode } from '@/constants/Report'\r\nimport { getMarketplaceLabelByType } from '@/shared/utils'\r\nimport _ from 'lodash'\r\n\r\nexport default {\r\n  data: () => ({\r\n    coverValueToLabelForBrand,\r\n    validSrc: true,\r\n    ReportMarketplaces,\r\n    DashboardFilterSourceType,\r\n    AllSellerMode,\r\n    sourceOptions: [\r\n      { value: DashboardFilterSourceType.VIOLATIONS, text: 'Violations' },\r\n      { value: DashboardFilterSourceType.ALL_SELLERS, text: 'All Sellers' }\r\n    ] }),\r\n  props: ['value', 'brands', 'needToHideSourceTypeFilter', 'getCurrentSourceOption'],\r\n  methods: {\r\n    getMarketplaceLabel(object) {\r\n      return getMarketplaceLabelByType(object)\r\n    },\r\n    getSourceTextByValue(value) {\r\n      const sourceOptions = this.getCurrentSourceOption()\r\n      return _.find(sourceOptions, {'value': value}).text\r\n    }\r\n  },\r\n  computed: {\r\n    selected: {\r\n      get() {\r\n        return this.value\r\n      },\r\n      set(val) {\r\n        this.$emit('input', val)\r\n      }\r\n    },\r\n    ...mapGetters({\r\n      dataSelectedDate: `mw/dashboard/${TYPE.GET_SELECTED_DATE}`\r\n    })\r\n  },\r\n  created() {\r\n    // console.log(this.selected)\r\n  }\r\n}\r\n",null]}