{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\sellers\\ManageSeller.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\sellers\\ManageSeller.vue","mtime":1629363794063},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1620898435163},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters, mapActions } from 'vuex'\r\nimport toastMixin from './../toastMixin'\r\nimport _nav from '@/_nav'\r\nimport { required, url } from 'vuelidate/lib/validators'\r\nimport PermissionsMixin from '@/components/common/PermissionsMixin'\r\nimport _ from 'lodash'\r\nimport * as TYPE from '@/actionTypes.js'\r\n\r\nexport default {\r\n  name: 'MWSIManageSeller',\r\n  mixins: [toastMixin, PermissionsMixin],\r\n  data: function () {\r\n    return {\r\n      nav: _nav,\r\n      sellerID: null,\r\n      sellerData: {\r\n        seller_name: null,\r\n        merchant_id: null,\r\n        status: null,\r\n        investigation: null,\r\n        source: null,\r\n        link: null\r\n      },\r\n      isGetFullData: false\r\n    }\r\n  },\r\n  validations: {\r\n    sellerData: {\r\n      seller_name: {\r\n        required\r\n      },\r\n      merchant_id: {\r\n        required\r\n      },\r\n      status: {\r\n        required\r\n      },\r\n      link: {\r\n        url\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getPermissions: `mw/${TYPE.GET_PERMISSIONS}`,\r\n      getOneSeller: `mw/sellers/getOneSeller`\r\n    })\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      fetchPermissions: `mw/${TYPE.FETCH_PERMISSIONS}`,\r\n      getOneSellerData: `mw/sellers/getOneSellerData`,\r\n      createSeller: `mw/sellers/createSeller`,\r\n      updateSeller: `mw/sellers/updateSeller`\r\n    }),\r\n    async submit () {\r\n      this.$v.$touch()\r\n      if (!this.$v.$anyError) {\r\n        let payload = _.cloneDeep(this.sellerData)\r\n        payload.clientID = this.$route.params.client_id\r\n        let res = await this.createSeller(payload)\r\n        if (res === 200 || res === 201) {\r\n          this.vueToast('Seller has been created successfully', 'success')\r\n          this.$router.push({ name: 'MWSISellerList', params: { client_id: this.nav.clientId } })\r\n        } else {\r\n          this.vueToast('Seller has not been created. Please retry or contact administrator.', 'error')\r\n        }\r\n      }\r\n    },\r\n    async update () {\r\n      this.$v.$touch()\r\n      if (!this.$v.$anyError) {\r\n        let payload = _.cloneDeep(this.sellerData)\r\n        payload.clientID = this.$route.params.client_id\r\n        payload.sellerID = this.$route.params.seller_id\r\n        let res = await this.updateSeller(payload)\r\n        if (res === 200 || res === 201) {\r\n          this.vueToast('Seller info has been updated successfully', 'success')\r\n          this.$router.push({ name: 'MWSISellerList', params: { client_id: this.nav.clientId } })\r\n        } else {\r\n          this.vueToast('Seller info has not been updated. Please retry or contact administrator.', 'error')\r\n        }\r\n      }\r\n    },\r\n    assignFormData (data) {\r\n      for (let k in this.sellerData) {\r\n        this.sellerData[k] = data[k]\r\n      }\r\n    }\r\n  },\r\n  async created() {\r\n    // await this.fetchPermissions()\r\n    this.sellerID = this.$route.params.seller_id\r\n    this.isGetFullData = true\r\n    let payload = {\r\n      sellerID: this.sellerID,\r\n      clientID: this.$route.params.client_id\r\n    }\r\n    // if no permission -> return Home page\r\n    if (this.getPermissions.permissions) {\r\n      this.gotoGlobalHomePageIfNoPermission(this.getPermissions.permissions)\r\n      if (this.sellerID && this.getPermissions.permissions) {\r\n        await this.getOneSellerData(payload)\r\n        this.assignFormData(this.getOneSeller)\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}