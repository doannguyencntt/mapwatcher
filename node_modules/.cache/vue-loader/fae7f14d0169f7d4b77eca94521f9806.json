{"remainingRequest":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\dashboard\\DashboardHistorical.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Project\\CBPO\\plat-mw-web\\src\\components\\page\\dashboard\\DashboardHistorical.vue","mtime":1630397415267},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\css-loader\\index.js","mtime":1620898435762},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1620898436811},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\postcss-loader\\src\\index.js","mtime":1620898436496},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\sass-loader\\lib\\loader.js","mtime":1626076778407},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626076743241},{"path":"C:\\Project\\CBPO\\plat-mw-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1620898436811}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.main-wrapper {\r\n  padding: 5px 10px;\r\n}\r\n\r\n.pl-05 {\r\n  padding-left: 0.5rem !important;\r\n}\r\n\r\n.mb-0 {\r\n  margin-bottom: 0 !important;\r\n}\r\n\r\n.cbpo-select.cbpo-custom-select{\r\n  min-width: 100px;\r\n}\r\n",{"version":3,"sources":["DashboardHistorical.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiJA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"DashboardHistorical.vue","sourceRoot":"src/components/page/dashboard","sourcesContent":["<template>\r\n  <div class=\"main-wrapper\">\r\n    <div class=\"cbpo-s form-group cbpo-filter-control-select pl-05 mb-0\" value>\r\n      <label>Date:</label>\r\n      <select v-model=\"selectedDate\" @change=\"dateChange($event)\" class=\"form-control cbpo-select cbpo-custom-select\">\r\n        <template v-for=\"(date, i) in dates\">\r\n          <option :value=\"date\" :key=\"i\">{{date}}</option>\r\n        </template>\r\n      </select>\r\n    </div>\r\n    <div class=\"widgets-container\">\r\n      <!-- dashboard sdk will be renderred where, DON'T change the class -->\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex'\r\nimport * as TYPE from '@/actionTypes.js'\r\nimport $ from 'jquery'\r\nimport { Promise } from 'q'\r\n\r\nexport default {\r\n  props: ['selected'],\r\n  data: () => ({\r\n    dates: [],\r\n    loader: false,\r\n    selectedDate: null\r\n  }),\r\n  name: 'MWDashboardHistorical',\r\n  computed: {\r\n    ...mapGetters({\r\n      dataHistoricalTable: `mw/dashboard/${TYPE.GET_DATA_HISTORICAL}`,\r\n      dataDateHistorical: `mw/dashboard/${TYPE.GET_DATE_HISTORICAL}`,\r\n      dataNumberViolations: `mw/dashboard/${TYPE.GET_DATA_NUMBER_OF_VIOLATIONS}`,\r\n      dataNumberViolationsViolators: `mw/dashboard/${TYPE.GET_DATA_NUMBER_OF_VIOLATIONS_VIOLATORS}`,\r\n      mainConfig: `mw/dashboard/${TYPE.GET_DATA_CONFIG_HISTORICAL}`\r\n    })\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      fetchDataHistoricalTable: `mw/dashboard/${TYPE.FETCH_DATA_HISTORICAL}`,\r\n      fetchDataDateHistorical: `mw/dashboard/${TYPE.FETCH_DATE_HISTORICAL}`,\r\n      fetchDataNumberViolations: `mw/dashboard/${TYPE.FETCH_DATA_NUMBER_OF_VIOLATIONS}`,\r\n      fetchDataNumberViolationsViolators: `mw/dashboard/${TYPE.FETCH_DATA_NUMBER_OF_VIOLATIONS_VIOLATORS}`\r\n    }),\r\n    handleDataHistorical(marketplace) {\r\n      return new Promise((resolve, reject) => {\r\n        this.fetchDataHistoricalTable({\r\n          date: this.selectedDate ? this.$moment(this.selectedDate).format('YYYY-MM-DD') : null,\r\n          marketplace: marketplace,\r\n          brand_id: this.selected.brand.id,\r\n          seller_type: this.selected.seller_type\r\n        }).then(() => {\r\n          let fakeHistorical = {...this.dataHistoricalTable}\r\n          if (this.selected.brand && this.selected.brand.ignore_screenshot) {\r\n            fakeHistorical = this.emptyRowData(fakeHistorical, ['map_price', 'diff', 'diff_percent'])\r\n          }\r\n          window.mw_historical_data_table = fakeHistorical\r\n          resolve()\r\n        })\r\n      })\r\n    },\r\n    handleDataNumberOfViolationsViolators(marketplace) {\r\n      return new Promise((resolve, reject) => {\r\n        this.fetchDataNumberViolationsViolators({\r\n          marketplace: marketplace,\r\n          brand_id: this.selected.brand.id,\r\n          seller_type: this.selected.seller_type\r\n        }).then(() => {\r\n          window.mw_historical_number_of_violation_violator = this.dataNumberViolationsViolators\r\n          resolve()\r\n        })\r\n      })\r\n    },\r\n    handleDataNumberViolations(marketplace) {\r\n      return new Promise((resolve, reject) => {\r\n        this.fetchDataNumberViolations({\r\n          marketplace: marketplace,\r\n          brand_id: this.selected.brand.id,\r\n          seller_type: this.selected.seller_type\r\n        }).then(() => {\r\n          window.mw_historical_number_of_violations = this.dataNumberViolations\r\n          resolve()\r\n        })\r\n      })\r\n    },\r\n    emptyRowData(data, cols = []) {\r\n      if (!cols.length || !data || !data.cols || !data.rows) return data\r\n      let names = data.cols.map(d => d.name)\r\n      let indexs = cols.reduce((a, c) => { if (names.includes(c)) a.push(names.indexOf(c)); return a }, []).filter(e => e >= 0)\r\n      indexs.forEach(i => { data.rows = data.rows.map(r => { r[i] = null; return r }) })\r\n      return data\r\n    },\r\n    async _fetchDashboardWidgetData() {\r\n      let marketplace = this.selected.marketplace === 'amazon_us' ? 'amazon.com' : this.selected.marketplace\r\n      await Promise.all([\r\n        this.handleDataHistorical(marketplace),\r\n        this.handleDataNumberOfViolationsViolators(marketplace),\r\n        this.handleDataNumberViolations(marketplace)\r\n      ]).then(() => {\r\n        window.mw_dashboard_main_config = $.extend(true, {}, this.mainConfig)\r\n      })\r\n    },\r\n    _renderDashboardWidgets() {\r\n      console.log('rendering...')\r\n      let el = $(this.$el).find('.widgets-container:eq(0)')\r\n      el.html(\r\n        '<cbpo-layout config-ref=\"mw_dashboard_main_config\" class=\"mw-sdk-styled\" />'\r\n      )\r\n      window.CBPO.wgManager().init('.widgets-container')\r\n    },\r\n    async fetchAndRenderDashboardWidgets() {\r\n      await this._fetchDashboardWidgetData()\r\n      this._renderDashboardWidgets()\r\n    },\r\n    async fetchDate() {\r\n      let marketplace = this.selected.marketplace === 'amazon_us' ? 'amazon.com' : this.selected.marketplace\r\n      await this.fetchDataDateHistorical({\r\n        marketplace: marketplace,\r\n        brand_id: this.selected.brand.id,\r\n        seller_type: this.selected.seller_type\r\n      })\r\n      this.dates = this.dataDateHistorical.dates\r\n      if (this.dates.length > 0) {\r\n        this.selectedDate = this.dates[0]\r\n      }\r\n      this.fetchAndRenderDashboardWidgets()\r\n    },\r\n    dateChange(e) {\r\n      this.selectedDate = e.target.value\r\n      this.fetchAndRenderDashboardWidgets()\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchDate()\r\n  },\r\n  watch: {\r\n    '$route.query'(val) {\r\n      this.fetchDate()\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n.main-wrapper {\r\n  padding: 5px 10px;\r\n}\r\n\r\n.pl-05 {\r\n  padding-left: 0.5rem !important;\r\n}\r\n\r\n.mb-0 {\r\n  margin-bottom: 0 !important;\r\n}\r\n\r\n.cbpo-select.cbpo-custom-select{\r\n  min-width: 100px;\r\n}\r\n</style>\r\n"]}]}