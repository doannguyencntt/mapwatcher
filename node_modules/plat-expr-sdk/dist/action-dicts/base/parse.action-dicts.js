"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseParseActionsDicts = void 0;
var lodash_1 = __importDefault(require("lodash"));
var moment_1 = __importDefault(require("moment"));
exports.BaseParseActionsDicts = {
    Instance1: function (_LB, elem, _RB) {
        return [elem.parse()];
    },
    Instance2: function (_LB, elem1, _comma1, elem2, _RB) {
        return [elem1.parse(), elem2.parse()];
    },
    Instance3: function (_LB, elem1, _comma1, elem2, _comma2, elem3, _RB) {
        return [elem1.parse(), elem2.parse(), elem3.parse()];
    },
    Instance4: function (_LB, elem1, _comma1, elem2, _comma2, elem3, _comma3, elem4, _RB) {
        return [elem1.parse(), elem2.parse(), elem3.parse(), elem4.parse()];
    },
    List: function (strings) {
        return lodash_1.default.concat(strings.children[0].children.map(function (c) { return c.sourceString; }), strings.children[2].children.map(function (c) { return c.sourceString; }));
    },
    Parentheses: function (_LB, elem, _RB) {
        return elem.parse();
    },
    Date: function (_DATE, _LB, dateString, _RB) {
        return moment_1.default(dateString.sourceString).toDate();
    },
    ArrayOf: function (_LB, elems, _RB) {
        return lodash_1.default.concat(elems.children[0].children.map(function (c) { return c.parse(); }), elems.children[2].children.map(function (c) { return c.parse(); }));
    },
    String_quote: function (_LQ, words, _RQ) {
        return String(words.sourceString);
    },
    String_parser: function (_, data) {
        return String(data.parse());
    },
    Parser: function (_LB, _, _RB) {
        return _.sourceString;
    },
    boolean: function (_) {
        switch (this.sourceString) {
            case 'true':
            case 'TRUE': {
                return true;
            }
            default: {
                return false;
            }
        }
    },
    null: function (_) {
        return null;
    },
    word: function (characters) {
        return String(characters.sourceString);
    },
    number: function (_) {
        return Number(this.sourceString);
    },
};
