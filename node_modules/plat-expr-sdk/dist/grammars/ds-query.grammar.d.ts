declare const expression = "\nDsQueryExpression <: BaseExpression {\n  Exp := ListExp\n\n  ListExp = NonemptyListOf<CombinedExp, \",\">\n\n  CombinedExp = CombinedExp (\"+\" | \"-\" | \"*\" | \"/\" | \"^\") (CombinedExp_paren | AggregationIfExp | AggregationExp | number) -- main\n              | CombinedExp_paren Alias? -- alias\n              | \"(\" CombinedExp \")\" -- paren\n              | AggregationExp\n              | AggregationIfExp\n              | number\n\n  AggregationIfExp = CountIfExp | SumIfExp | AvgIfExp | MaxIfExp | MinIfExp\n\n  CountIfExp = \"COUNTIF\" Instance0 Alias?                          -- dv_filter_null\n              | \"COUNTIF\" Instance1<Mixed> Alias?                  -- filter_null\n              | \"COUNTIF\" Instance1<FilterLogicExp> Alias?         -- dv_null\n              | \"COUNTIF\" Instance2<FilterLogicExp, Mixed> Alias?  -- main\n              | \"COUNTIF\" Instance1<BinExp> Alias?                        -- bin_only\n              | \"COUNTIF\" Instance2<BinExp, Mixed> Alias?                 -- bin_dv\n              | \"COUNTIF\" Instance2<FilterLogicExp, BinExp> Alias?        -- filter_bin\n              | \"COUNTIF\" Instance3<FilterLogicExp, BinExp, Mixed> Alias? -- filter_bin_dv\n\n  SumIfExp  = \"SUMIF\" Instance1<Column> Alias?                         -- dv_filter_null\n            | \"SUMIF\" Instance2<Column, Mixed> Alias?                  -- filter_null\n            | \"SUMIF\" Instance2<Column, FilterLogicExp> Alias?         -- dv_null\n            | \"SUMIF\" Instance3<Column, FilterLogicExp, Mixed> Alias?  -- main\n            | \"SUMIF\" Instance2<Column, BinExp> Alias?                         -- col_bin\n            | \"SUMIF\" Instance3<Column, BinExp, Mixed> Alias?                  -- col_bin_dv\n            | \"SUMIF\" Instance3<Column, FilterLogicExp, BinExp> Alias?         -- col_filter_bin\n            | \"SUMIF\" Instance4<Column, FilterLogicExp, BinExp, Mixed> Alias?  -- col_filter_bin_dv\n\n  AvgIfExp = \"AVGIF\" Instance1<Column> Alias?                          -- dv_filter_null\n            | \"AVGIF\" Instance2<Column, Mixed> Alias?                  -- filter_null\n            | \"AVGIF\" Instance2<Column, FilterLogicExp> Alias?         -- dv_null\n            | \"AVGIF\" Instance3<Column, FilterLogicExp, Mixed> Alias?  -- main\n            | \"AVGIF\" Instance2<Column, BinExp> Alias?                         -- col_bin\n            | \"AVGIF\" Instance3<Column, BinExp, Mixed> Alias?                  -- col_bin_dv\n            | \"AVGIF\" Instance3<Column, FilterLogicExp, BinExp> Alias?         -- col_filter_bin\n            | \"AVGIF\" Instance4<Column, FilterLogicExp, BinExp, Mixed> Alias?  -- col_filter_bin_dv\n\n  MaxIfExp = \"MAXIF\" Instance1<Column> Alias?                          -- dv_filter_null\n            | \"MAXIF\" Instance2<Column, Mixed> Alias?                  -- filter_null\n            | \"MAXIF\" Instance2<Column, FilterLogicExp> Alias?         -- dv_null\n            | \"MAXIF\" Instance3<Column, FilterLogicExp, Mixed> Alias?  -- main\n            | \"MAXIF\" Instance2<Column, BinExp> Alias?                         -- col_bin\n            | \"MAXIF\" Instance3<Column, BinExp, Mixed> Alias?                  -- col_bin_dv\n            | \"MAXIF\" Instance3<Column, FilterLogicExp, BinExp> Alias?         -- col_filter_bin\n            | \"MAXIF\" Instance4<Column, FilterLogicExp, BinExp, Mixed> Alias?  -- col_filter_bin_dv\n\n  MinIfExp = \"MINIF\" Instance1<Column> Alias?                          -- dv_filter_null\n            | \"MINIF\" Instance2<Column, Mixed> Alias?                  -- filter_null\n            | \"MINIF\" Instance2<Column, FilterLogicExp> Alias?         -- dv_null\n            | \"MINIF\" Instance3<Column, FilterLogicExp, Mixed> Alias?  -- main\n            | \"MINIF\" Instance2<Column, BinExp> Alias?                         -- col_bin\n            | \"MINIF\" Instance3<Column, BinExp, Mixed> Alias?                  -- col_bin_dv\n            | \"MINIF\" Instance3<Column, FilterLogicExp, BinExp> Alias?         -- col_filter_bin\n            | \"MINIF\" Instance4<Column, FilterLogicExp, BinExp, Mixed> Alias?  -- col_filter_bin_dv\n\n  AggregationExp = CountExp | SumExp | AvgExp | MaxExp | MinExp\n\n  CountExp = \"COUNT\" Instance1<BinExp> Alias?           -- bin\n            | \"COUNT\" Instance1<Mixed> Alias?           -- dv\n            | \"COUNT\" Instance0 Alias?                  -- none\n            | \"COUNT\" Instance2<BinExp, Mixed> Alias?   -- bin_dv\n\n  SumExp  = \"SUM\" Instance2<Column, BinExp> Alias?        -- bin\n          | \"SUM\" Instance2<Column, Mixed> Alias?         -- dv\n          | \"SUM\" Instance1<Column> Alias?                -- none\n          | \"SUM\" Instance3<Column, BinExp, Mixed> Alias? -- bin_dv\n\n  AvgExp = \"AVG\" Instance2<Column, BinExp> Alias?         -- bin\n          | \"AVG\" Instance2<Column, Mixed> Alias?         -- dv\n          | \"AVG\" Instance1<Column> Alias?                -- none\n          | \"AVG\" Instance3<Column, BinExp, Mixed> Alias? -- bin_dv\n\n  MaxExp = \"MAX\" Instance2<Column, BinExp> Alias?         -- bin\n          | \"MAX\" Instance2<Column, Mixed> Alias?         -- dv\n          | \"MAX\" Instance1<Column> Alias?                -- none\n          | \"MAX\" Instance3<Column, BinExp, Mixed> Alias? -- bin_dv\n\n  MinExp = \"MIN\" Instance2<Column, BinExp> Alias?         -- bin\n          | \"MIN\" Instance2<Column, Mixed> Alias?         -- dv\n          | \"MIN\" Instance1<Column> Alias?                -- none\n          | \"MIN\" Instance3<Column, BinExp, Mixed> Alias? -- bin_dv\n\n  BinExp = \"LAST_BIN_OF\" Instance2<Column, number>\n          | \"LAST_BIN_OF\" Instance3<Column, number, word>\n          | \"FIRST_BIN_OF\" Instance2<Column, number>\n          | \"FIRST_BIN_OF\" Instance3<Column, number, word>\n\n  FilterExp = \"IF\" Parentheses<FilterLogicExp>\n\n  FilterLogicExp = FilterLogicExp and (Parentheses<FilterLogicExp> | FilterOpExp) -- and\n              | FilterLogicExp or (Parentheses<FilterLogicExp> | FilterOpExp)     -- or\n              | Parentheses<FilterLogicExp>\n              | FilterOpExp\n\n  FilterOpExp = Column eq Mixed               -- eq\n              | Column ne Mixed               -- ne\n              | Column gt Mixed               -- gt\n              | Column gte Mixed              -- gte\n              | Column lt Mixed               -- lt\n              | Column lte Mixed              -- lte\n              | Column empty                  -- empty\n              | Column not_empty              -- not_empty\n              | Column null                   -- null\n              | Column not_null               -- not_null\n              | Column contains String        -- contains\n              | Column not_contains String    -- not_contains\n              | Column starts_with String     -- starts_with\n              | Column not_start_with String  -- not_start_with\n              | Column ends_with String       -- ends_with\n              | Column not_end_with String    -- not_end_with\n              | Column in_range ArrayOf<Mixed>  -- in_range\n              | Column in ArrayOf<Mixed>        -- in\n\n  Mixed += StaticExp\n\n  StaticExp = Today | Yesterday | DateThis | DateLast | Format | DateAdd | DateStartOf | DateEndOf\n  Today = \"TODAY\" Instance0\n  Yesterday = \"YESTERDAY\" Instance0\n  DateThis = \"DATE_THIS\" Instance1<String>\n  DateLast = \"DATE_LAST\" Instance2<number, String>\n  Format = \"FORMAT\" Instance2<String, String>\n  DateAdd = \"DATE_ADD\" Instance3<Mixed, number, String>\n  DateStartOf = \"DATE_START_OF\" Instance2<Mixed, String>\n  DateEndOf = \"DATE_END_OF\" Instance2<Mixed, String>\n\n  as  = \"AS\" | \"as\"\n  and = \"AND\" | \"&&\" | \"&\"\n  or  = \"OR\" | \"||\"\n  eq  = \"==\" | \"=\" | \"eq\" | \"$eq\"\n  ne  = \"!=\" | \"ne\" | \"$ne\"\n  gt  = \">\" | \"gt\" | \"$gt\"\n  gte = \">=\" | \"gt\" | \"$gt\"\n  lt  = \"<\" | \"lt\" | \"$lt\"\n  lte = \"<=\" | \"lte\" | \"$lte\"\n  empty           = \"empty\"\n  not_empty       = \"not_empty\"\n  null            += \"null\"\n  not_null        = \"not_null\"\n  contains        = \"contains\"\n  not_contains    = \"not_contains\"\n  starts_with     = \"starts_with\"\n  not_start_with  = \"not_start_with\"\n  ends_with       = \"ends_with\"\n  not_end_with    = \"not_end_with\"\n  in_range        = \"in_range\"\n  in              = \"in\"\n\n  Alias = as String\n  Column = \"@\" String\n}\n";
export default expression;
