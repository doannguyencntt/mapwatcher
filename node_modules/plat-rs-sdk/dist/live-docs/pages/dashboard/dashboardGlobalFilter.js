const sdkDashboardGlobalFilterPage = Vue.component('sdkDashboardGlobalFilterPage', {
  template: `
    <div class="dashboard-global-filter">
      <h5>Example: </h5>
      <label>Builder Mode</label>
      <input type="checkbox" v-model="isBuilder" @change="triggerBuilderMode()"/>
      <div id="dashboard-global-filter"></div>
      <sdk-export-code :templates="getTemplate"/>
    </div>
  `,
  components: {
    'sdk-export-code': sdkExportCodeComponent
  },
  mixins: [configMixins, renderMixins],
  data() {
    return {
      template: '<cbpo-dashboard class="p-0" config-ref="config"></cbpo-dashboard>',
      widgetConfig: {
        widget: {
          title: {
            text: 'All Repeat Offenders', // or null
            enabled: true // true / false
          }
        },
        elements: [{
          type: 'cbpo-element-table',
          config: {
            widget: {
              title: {
                enabled: false
              }
            },
            dataSource: 'idreportingsdk',
            columns: [],
            pagination: {
              limit: 30
            }
          }
        }]
      },
      config: {
        widget: {
          title: {
            text: 'Dashboard Container',
            enabled: true
          },
          builder: {
            enabled: true
          }
        },
        widgetLayout: {
          widgets: [],
          gridConfig: {
            colNum: 12,
            rowHeight: 1,
            margin: [10, 10]
          }
        }
      },
      isBuilder: false
    }
  },
  computed: {
    getTemplate() {
      return [
        {
          name: 'Dashboard Container',
          tag: this.template,
          config: this.config
        }
      ]
    }
  },
  mounted() {
    this.render(
      '#dashboard-global-filter',
      this.template,
      'http://ds-api.qa.channelprecision.com/v1/',
      this.VUE_DEMO_TOKEN,
      ''
    )
  },
  methods: {
    createWidgetLayoutConfig() {
      let widgets = _.range(0, 2).map((e) => {
        let widgetConfig = {
          type: 'cbpo-widget',
          config: _.cloneDeep(this.widgetConfig)
        }
        let filterConfig = {
          form: {
            config: {
              controls: [
                {
                  type: 'cbpo-filter-control-select',
                  config: {
                    label: {
                      text: 'Order Date'
                    },
                    dataSource: 'idreportingsdk',
                    loadedDataSource: true,
                    common: {
                      column: {
                        name: 'Order Date',
                        type: 'date'
                      },
                      operator: '==',
                      value: null
                    },
                    selection: {
                      empty: {
                        label: 'Select All',
                        value: null,
                        enabled: true
                      },
                      options: []
                    }
                  }
                }
              ]
            }
          }
        }
        widgetConfig.config.widget.title.text = 'Widget ' + (e + 1)
        widgetConfig.config.elements[0].config.columns = [
          {
            'name': '_id',
            'type': 'objectId',
            'header': {
              'style': {},
              'format': null
            },
            'cell': {
              'width': 100,
              'style': {},
              'format': null,
              'aggrFormats': null,
              'binFormats': null
            },
            'sortable': {
              'enabled': true
            },
            'visible': true,
            'displayName': 'Id'
          },
          {
            'name': 'Region',
            'type': 'string',
            'header': {
              'style': {},
              'format': null
            },
            'cell': {
              'width': 100,
              'style': {},
              'format': null,
              'aggrFormats': null,
              'binFormats': null
            },
            'sortable': {
              'enabled': true
            },
            'visible': true,
            'displayName': 'Region'
          },
          {
            'name': 'Country',
            'type': 'string',
            'header': {
              'style': {},
              'format': null
            },
            'cell': {
              'width': 100,
              'style': {},
              'format': null,
              'aggrFormats': null,
              'binFormats': null
            },
            'sortable': {
              'enabled': true
            },
            'visible': true,
            'displayName': 'Country'
          },
          {
            'name': 'Item Type',
            'type': 'string',
            'header': {
              'style': {},
              'format': null
            },
            'cell': {
              'width': 100,
              'style': {},
              'format': null,
              'aggrFormats': null,
              'binFormats': null
            },
            'sortable': {
              'enabled': true
            },
            'visible': true,
            'displayName': 'Item Type'
          },
          {
            'name': 'Sales Channel',
            'type': 'string',
            'header': {
              'style': {},
              'format': null
            },
            'cell': {
              'width': 100,
              'style': {},
              'format': null,
              'aggrFormats': null,
              'binFormats': null
            },
            'sortable': {
              'enabled': true
            },
            'visible': true,
            'displayName': 'Sales Channel'
          },
          {
            'name': 'Order Priority',
            'type': 'string',
            'header': {
              'style': {},
              'format': null
            },
            'cell': {
              'width': 100,
              'style': {},
              'format': null,
              'aggrFormats': null,
              'binFormats': null
            },
            'sortable': {
              'enabled': true
            },
            'visible': true,
            'displayName': 'Order Priority'
          },
          {
            'name': 'Order Date',
            'type': 'date',
            'cell': {
              'format': {
                'type': 'temporal'
              },
              'width': 100,
              'style': {},
              'aggrFormats': null,
              'binFormats': null
            },
            'header': {
              'style': {},
              'format': null
            },
            'sortable': {
              'enabled': true
            },
            'visible': true,
            'displayName': 'Order Date'
          },
          {
            'name': 'Order ID',
            'type': 'int',
            'header': {
              'style': {},
              'format': null
            },
            'cell': {
              'width': 100,
              'style': {},
              'format': null,
              'aggrFormats': null,
              'binFormats': null
            },
            'sortable': {
              'enabled': true
            },
            'visible': true,
            'displayName': 'Order ID'
          },
          {
            'name': 'Ship Date',
            'type': 'date',
            'cell': {
              'format': {
                'type': 'temporal'
              },
              'width': 100,
              'style': {},
              'aggrFormats': null,
              'binFormats': null
            },
            'header': {
              'style': {},
              'format': null
            },
            'sortable': {
              'enabled': true
            },
            'visible': true,
            'displayName': 'Ship Date'
          },
          {
            'name': 'Units Sold',
            'type': 'int',
            'header': {
              'style': {},
              'format': null
            },
            'cell': {
              'width': 100,
              'style': {},
              'format': null,
              'aggrFormats': null,
              'binFormats': null
            },
            'sortable': {
              'enabled': true
            },
            'visible': true,
            'displayName': 'Units Sold'
          },
          {
            'name': 'Unit Price',
            'type': 'double',
            'header': {
              'style': {},
              'format': null
            },
            'cell': {
              'width': 100,
              'style': {},
              'format': null,
              'aggrFormats': null,
              'binFormats': null
            },
            'sortable': {
              'enabled': true
            },
            'visible': true,
            'displayName': 'Unit Price'
          },
          {
            'name': 'Unit Cost',
            'type': 'double',
            'header': {
              'style': {},
              'format': null
            },
            'cell': {
              'width': 100,
              'style': {},
              'format': null,
              'aggrFormats': null,
              'binFormats': null
            },
            'sortable': {
              'enabled': true
            },
            'visible': true,
            'displayName': 'Unit Cost'
          },
          {
            'name': 'Total Revenue',
            'type': 'int',
            'header': {
              'style': {},
              'format': null
            },
            'cell': {
              'width': 100,
              'style': {},
              'format': null,
              'aggrFormats': null,
              'binFormats': null
            },
            'sortable': {
              'enabled': true
            },
            'visible': true,
            'displayName': 'Total Revenue'
          },
          {
            'name': 'Total Cost',
            'type': 'double',
            'header': {
              'style': {},
              'format': null
            },
            'cell': {
              'width': 100,
              'style': {},
              'format': null,
              'aggrFormats': null,
              'binFormats': null
            },
            'sortable': {
              'enabled': true
            },
            'visible': true,
            'displayName': 'Total Cost'
          },
          {
            'name': 'Total Profit',
            'type': 'double',
            'header': {
              'style': {},
              'format': null
            },
            'cell': {
              'width': 100,
              'style': {},
              'format': null,
              'aggrFormats': null,
              'binFormats': null
            },
            'sortable': {
              'enabled': true
            },
            'visible': true,
            'displayName': 'Total Profit'
          }
        ]
        switch (e) {
          case 0:
            widgetConfig.config.grid = {
              x: 0,
              y: 0,
              w: 12,
              h: 12,
              i: 0
            }
            filterConfig.globalFilter = { enabled: true }
            widgetConfig.config.filter = _.cloneDeep(filterConfig)
            widgetConfig.config.elements = []
            console.log(widgetConfig)
            break
          case 1:
            widgetConfig.config.elements[0].config.pagination = {
              limit: 50,
              type: 'buttons',
            }
            widgetConfig.config.filter = _.cloneDeep(filterConfig)
            widgetConfig.config.filter.form.config.controls.push({
              type: 'cbpo-filter-control-range',
              config: {
                label: {
                  text: 'Units Sold'
                },
                dataSource: 'idreportingsdk',
                common: {
                  column: {
                    name: 'Units Sold',
                    type: 'int'
                  },
                  operator: '==',
                  value: []
                },
                selection: {
                  empty: {
                    label: 'Select All',
                    value: null
                  },
                  options: []
                }
              }
            })
            widgetConfig.config.grid = {
              x: 0,
              y: 40,
              w: 12,
              h: 40,
              i: 1
            }
            break
        }
        return widgetConfig
      })
      let htmlWidget = {
        type: 'cbpo-widget',
        config: {
          grid: {
            x: 0, y: 80, w: 12, h: 40, i: 3
          },
          autoHeight: true,
          elements: [
            {
              type: 'cbpo-element-html-editor',
              config: {
                dataSource: 'idreportingsdk',
                builder: {
                  enabled: false
                },
                content: ''
              }
            }
          ]
        }
      }
      widgets.push(htmlWidget)
      let crosstabTableWidget = {
        type: 'cbpo-widget',
        config: {
          grid: {
            x: 0, y: 80, w: 12, h: 40, i: 4
          },
          autoHeight: true,
          elements: [
            {
              type: 'cbpo-element-crosstab-table',
              config: {
                dataSource: 'idreportingsdk',
                sizeSettings: {
                  defaultMinSize: 250,
                  warningText: 'The area is too small for this visualization.'
                },
                widget: {
                  title: {
                    text: 'Quantitation of [Ship Date] over [Ship Date, Order Priority]',
                    enabled: true,
                    edited: false
                  },
                  style: {
                    background_color: null,
                    foreground_color: null,
                    header_background_color: null,
                    header_foreground_color: null,
                    border_width: null,
                    border_radius: null
                  }
                },
                messages: {
                  no_data_at_all: 'No data',
                  no_data_found: 'No data found'
                },
                globalControlOptions: {
                  aggregation: {
                    enabled: false
                  },
                  globalGrouping: {
                    enabled: false,
                    config: {
                      value: false
                    }
                  },
                  grouping: {
                    enabled: false
                  },
                  editColumn: {
                    enabled: false
                  },
                  editColumnLabel: {
                    enabled: false
                  },
                  editColumnFormat: {
                    enabled: false
                  },
                  editBin: {
                    enabled: false
                  }
                },
                bins: [],
                formats: {
                  aggrs: {}
                },
                sorting: [],
                xColumns: [
                  {
                    name: 'Order Date',
                    displayName: 'Order Date',
                    type: 'date',
                    format: null,
                    sortable: {
                      enabled: true
                    }
                  }
                ],
                tColumns: [
                  {
                    name: 'Order Priority',
                    displayName: 'Order Priority',
                    type: 'string',
                    format: null,
                    sortable: {
                      enabled: true
                    }
                  }
                ],
                yColumns: [
                  {
                    name: 'Ship Date',
                    displayName: 'Ship Date',
                    type: 'date',
                    format: null,
                    sortable: {
                      enabled: true
                    },
                    aggregation: {
                      aggregation: 'max',
                      alias: 'Ship Date_fc614075-73e2-4880-b8d8-7977a972a5cf'
                    }
                  }
                ],
                pagination: {
                  limit: 10,
                  current: 1,
                  total: null,
                  type: 'auto',
                  buttons: {
                    first: {
                      visibility: true,
                      label: 'First',
                      style: {}
                    },
                    last: {
                      visibility: true,
                      label: 'Last',
                      style: {}
                    },
                    prev: {
                      visibility: true,
                      label: 'Previous',
                      style: {}
                    },
                    next: {
                      visibility: true,
                      label: 'Next',
                      style: {}
                    }
                  },
                  numbers: {
                    beforeCurrent: 2,
                    afterCurrent: 2
                  },
                  default: 'auto'
                }
              }
            }
          ]
        }
      }
      widgets.push(crosstabTableWidget)
      this.config.widgetLayout.widgets = widgets
    },
    triggerBuilderMode() {
      window.CBPO.$bus.$emit('CBPO_TOGGLE_BUILDER_MODE', this.isBuilder)
    }
  },
  created() {
    this.createWidgetLayoutConfig()
    window.config = _.cloneDeep(this.config)
    window.dataSource = _.cloneDeep(this.dataSource)
  }
})
