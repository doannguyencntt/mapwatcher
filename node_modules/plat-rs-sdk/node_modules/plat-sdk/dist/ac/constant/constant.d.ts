export interface ConfigACClient {
    baseUrl: string;
    clientId: string;
    debug?: string[];
}
export interface UPCsRequest {
    type: string | 'ASIN';
    ids: string[];
}
export interface UPCsResult {
    items: {
        asin: string;
        parent_asin: string;
        upc: string;
        brand: string;
        ean: string;
    }[];
    not_found_items: string[];
}
export interface SKUsRequest {
    type: string;
    ids: string[];
}
export interface SKUsResult {
    items: {
        id: string;
        type: string;
        sku: string;
    }[];
    invalid_items: {
        id: string;
        type: string;
        code: 404;
        message: string;
    }[];
}
export interface AWSVariantsRequest {
    item_type: string;
    use_cache?: boolean | true;
    item_ids: string[];
}
export interface AWSVariantsResult {
    items: {
        asin: string;
        parent_asin: string;
        upc: string;
        brand: string;
        title: string;
        ean: string;
    }[];
    invalid_items: string[];
    not_cached_items: string[];
    data_from: string | 'cache';
}
export interface MWSInfoRequest {
    item_type: string;
    item_ids: string[];
}
export interface MWSInfoRequestWithMarketplace extends MWSInfoRequest {
    marketplace?: string;
}
export interface ESKUVaultAvailableQuantityItem {
    code: string;
    upc: string;
    sku: string;
    available_quantity: number;
    held_quantity: number;
    pending_quantity: number;
    picked_quantity: number;
    total_on_hand: number;
}
export interface ESKUVaultAvailableQuantityResult {
    items: [ESKUVaultAvailableQuantityItem];
    invalid_items: any[];
}
export interface EMWSInventoryItem {
    asin: string;
    sku: string;
    fba: number;
    mfn: number;
}
export interface EMWSInventoryResult {
    items: [EMWSInventoryItem];
    invalid_items: any[];
}
export interface MWSInfoResult {
    items: {
        brand: string;
        title: string;
        asin: string;
        parent_asin: string;
        upc: string;
        ean: string;
        sku: string;
        color: string;
        size: string;
        standalone: string;
        item_width: {
            value: number | 0;
            units: string;
        };
        item_height: {
            value: number | 0;
            units: string;
        };
        item_length: {
            value: number | 0;
            units: string;
        };
        item_weight: {
            value: number | 0;
            units: string;
        };
        package_width: {
            value: number | 0;
            units: string;
        };
        package_height: {
            value: number | 0;
            units: string;
        };
        package_length: {
            value: number | 0;
            units: string;
        };
        package_weight: {
            value: number | 0;
            units: string;
        };
        sales_rank: {
            product_category_id: string;
            rank: number | 0;
        }[];
    }[];
}
export interface MWSProductVariantsRequest {
    item_type: string | 'ASIN';
    item_ids: string[];
    use_cache?: boolean | true;
}
export interface MWSProductVariantsResult {
    items: {
        asin: string;
        parent_asin: string | null;
        upc: string | null;
        brand: string | null;
        title: string | null;
        ean: string | null;
    }[];
    invalid_items: string[];
    not_cached_items: string[];
    data_from: string | 'cache';
}
export interface AmzBuyboxCachedRequest {
    item_type: string | 'ASIN';
    item_ids: string[];
    use_cache?: boolean | true;
}
export interface AmzBuyboxCachedResult {
    items: {
        id: string;
        price: number | 0;
        inventory: number | 0;
        condition: string;
        is_fba: boolean | true;
        is_prime: boolean | true;
        created: string;
        updated: string;
        asin: {
            id: string;
            asin: string;
            sku: string;
            upc: string;
            title: string;
            brand_id: string;
            created: string;
            updated: string;
        };
        brand: {
            id: string;
            name: string;
        };
        seller: {
            id: string;
            name: string;
            merchant_id: string;
        };
    }[];
    invalid_items: string[];
    not_cached_items: string[];
}
export interface AmzProductReviewsRequest {
    item_type: string | 'ASIN';
    item_ids: string[];
    use_cache?: boolean | true;
}
export interface AmzProductReviewsResult {
    items: {
        all_format: {
            total_reviews: number;
            total_positive_reviews: number;
            total_critical_reviews: number;
            star_average: number;
            star_percent_5: number;
            star_percent_4: number;
            star_percent_3: number;
            star_percent_2: number;
            star_percent_1: number;
        };
        current_format: {
            asin_timeline: string;
            total_reviews: number;
            last_1: {
                days: number;
                reviews: number;
            };
            last_2: {
                days: number;
                reviews: number;
            };
            last_3: {
                days: number;
                reviews: number;
            };
        };
    }[];
    invalid_items: string[];
    not_cached_items: string[];
}
export interface ACError extends Error {
    statusCode: number | null;
    error: string;
    message: string;
    errors?: string[];
}
