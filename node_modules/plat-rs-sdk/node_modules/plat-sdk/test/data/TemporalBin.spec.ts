import * as chai from 'chai';
import { TemporalBin } from '../../src/data/bin/TemporalBin'

const expect = chai.expect;

describe('TemporalBin tests', () => {
  let temporalBin: TemporalBin;
  before(() => {
    temporalBin = new TemporalBin();
  })
  it('test function makeUniformBins', () => {
    let now = new Date("01/08/2016 15:00:00");
    let then = new Date("04/02/2016 14:20:30");
    const min = new Date('2016-02-08T15:00:00.000');
    const max = new Date('2016-03-08T15:00:00.000');
    let res = temporalBin.makeUniformBins(now, then, 'M', 1);
    expect(res.length).equal(3);
    then = new Date("04/09/2016 14:20:30")
    res = temporalBin.makeUniformBins(now, then, 'M', 1)
    expect(res.length).equal(4);
    expect(res[1]).to.deep.equal({
      min: min,
      minOp: 'gte',
      max: max,
      maxOp: 'lt',
      unit: 'M',
      width: 1,
      label: 'Feb 2016'
    });
  });

  it('test function makeAutoBins', () => {
    let now = new Date("01/08/2016 15:00:00");
    let then = new Date("012/02/2016 14:20:30");
    let res = temporalBin.makeAutoBins(now, then, 4);
    expect(res.length).equal(4);
    res = temporalBin.makeAutoBins(now, then, 5)
    expect(res.length).equal(6);
    res = temporalBin.makeAutoBins(now, then, 8)
    expect(res.length).equal(6);
  });

  it('test function makeAutoBins with invalid input', () => {
    let now = new Date("01/08/2016 15:00:00");
    let then = new Date("04/02/2016 14:20:30");
    expect(() => {
      temporalBin.makeAutoBins(then, now, 1);
    }).to.throw('max date must be greater min date');
    expect(() => {
      // @ts-ignore
      temporalBin.makeAutoBins(now, then, '1');
    }).to.throw('invalid expected');
    expect(() => {
      // @ts-ignore
      temporalBin.makeAutoBins(now, "04/02/2016 14:20:30", 3);
    }).to.throw('invalid max date');
    expect(() => {
      // @ts-ignore
      temporalBin.makeAutoBins("04/02/2016 14:20:30", then, 1);
    }).to.throw('invalid min date');
  });

  it('test function makeUniformBins with invalid input', () => {
      let now = new Date("01/08/2016 15:00:00");
      let then = new Date("04/02/2016 14:20:30");
      expect(() => {
        temporalBin.makeUniformBins(then, now, 'M', 1);
      }).to.throw('max date must be greater min date');
      expect(() => {
        temporalBin.makeUniformBins(now, then, 'Mo', 1);
      }).to.throw('invalid unit');
      expect(() => {
        // @ts-ignore
        temporalBin.makeUniformBins(now, "04/02/2016 14:20:30", 'M', 1);
      }).to.throw('invalid max date');
      expect(() => {
        // @ts-ignore
        temporalBin.makeUniformBins(now, 1234, 'M', 1);
      }).to.throw('invalid max date');
      expect(() => {
        // @ts-ignore
        temporalBin.makeUniformBins("04/02/2016 14:20:30", then, 'M', 1);
      }).to.throw('invalid min date');
      expect(() => {
        temporalBin.makeUniformBins(now, then, 'M', 1.1);
      }).to.throw('invalid width');
      expect(() => {
        temporalBin.makeUniformBins(now, then, 'M', 0);
      }).to.throw('invalid width');
  });

  it('test function makeUniformBins with min Amount > 5000', () => {
    let now = new Date("01/08/2016 15:00:00");
    let then = new Date("04/02/2016 14:20:30");
    let result = temporalBin.makeUniformBins(now, then, 'm', 1);
    expect(result.length).equal(5001);
    expect(result[result.length -1 ].maxOp).equal('lte');
  });
});
